{"ast":null,"code":"//判题结果页面组件：\n//通过路由参数获取提交 ID，调用 API 查询判题结果。\n//若状态为 “pending”（等待中）或 “judging”（判题中），每 5 秒轮询更新结果。\n//展示提交 ID、题目 ID、状态、结果、执行时间等信息。\nimport React,{useState,useEffect}from'react';import{getResult}from'../services/api';import{useParams}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ResultPage=()=>{const{submissionId}=useParams();const[result,setResult]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{const fetchResult=async()=>{try{const data=await getResult(submissionId);setResult(data);// 如果判题完成且状态为accepted，发送通知\nif(data.status==='accepted'){console.log('判题成功，发送状态更新通知');// 通知学生仪表盘刷新作业完成状态\nlocalStorage.setItem('submissionStatusChanged','true');// 触发storage事件（用于跨标签页通信）\nwindow.dispatchEvent(new StorageEvent('storage',{key:'submissionStatusChanged',newValue:'true'}));}// 如果还在判题中，每5秒轮询一次\nif(data.status==='pending'||data.status==='judging'){setTimeout(fetchResult,5000);}}catch(error){console.error('获取结果失败:',error);}finally{setLoading(false);}};fetchResult();},[submissionId]);if(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"\\u52A0\\u8F7D\\u4E2D...\"});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\u5224\\u9898\\u7ED3\\u679C\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u63D0\\u4EA4ID: \",submissionId]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u9898\\u76EEID: \",result.problem_id]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u72B6\\u6001: \",result.status]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u7ED3\\u679C: \",result.result||'N/A']}),result.execution_time&&/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u6267\\u884C\\u65F6\\u95F4: \",result.execution_time.toFixed(2),\"\\u79D2\"]}),['pending','judging'].includes(result.status)&&/*#__PURE__*/_jsx(\"div\",{children:\"\\u5224\\u9898\\u4E2D\\uFF0C\\u8BF7\\u7A0D\\u5019...\"})]});};export default ResultPage;","map":{"version":3,"names":["React","useState","useEffect","getResult","useParams","jsx","_jsx","jsxs","_jsxs","ResultPage","submissionId","result","setResult","loading","setLoading","fetchResult","data","status","console","log","localStorage","setItem","window","dispatchEvent","StorageEvent","key","newValue","setTimeout","error","children","problem_id","execution_time","toFixed","includes"],"sources":["/Volumes/坞城/OJ_1/frontend/src/pages/ResultPage.js"],"sourcesContent":["//判题结果页面组件：\n//通过路由参数获取提交 ID，调用 API 查询判题结果。\n//若状态为 “pending”（等待中）或 “judging”（判题中），每 5 秒轮询更新结果。\n//展示提交 ID、题目 ID、状态、结果、执行时间等信息。\n\nimport React, { useState, useEffect } from 'react';\nimport { getResult } from '../services/api';\nimport { useParams } from 'react-router-dom';\n\nconst ResultPage = () => {\n  const { submissionId } = useParams();\n  const [result, setResult] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchResult = async () => {\n      try {\n        const data = await getResult(submissionId);\n        setResult(data);\n        \n        // 如果判题完成且状态为accepted，发送通知\n        if (data.status === 'accepted') {\n          console.log('判题成功，发送状态更新通知');\n          // 通知学生仪表盘刷新作业完成状态\n          localStorage.setItem('submissionStatusChanged', 'true');\n          // 触发storage事件（用于跨标签页通信）\n          window.dispatchEvent(new StorageEvent('storage', {\n            key: 'submissionStatusChanged',\n            newValue: 'true'\n          }));\n        }\n        \n        // 如果还在判题中，每5秒轮询一次\n        if (data.status === 'pending' || data.status === 'judging') {\n          setTimeout(fetchResult, 5000);\n        }\n      } catch (error) {\n        console.error('获取结果失败:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchResult();\n  }, [submissionId]);\n\n  if (loading) {\n    return <div>加载中...</div>;\n  }\n\n  return (\n    <div>\n      <h1>判题结果</h1>\n      <p>提交ID: {submissionId}</p>\n      <p>题目ID: {result.problem_id}</p>\n      <p>状态: {result.status}</p>\n      <p>结果: {result.result || 'N/A'}</p>\n      {result.execution_time && (\n        <p>执行时间: {result.execution_time.toFixed(2)}秒</p>\n      )}\n      \n      {['pending', 'judging'].includes(result.status) && (\n        <div>判题中，请稍候...</div>\n      )}\n    </div>\n  );\n};\n\nexport default ResultPage;"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,SAAS,KAAQ,iBAAiB,CAC3C,OAASC,SAAS,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE7C,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACvB,KAAM,CAAEC,YAAa,CAAC,CAAGN,SAAS,CAAC,CAAC,CACpC,KAAM,CAACO,MAAM,CAAEC,SAAS,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CAC1C,KAAM,CAACY,OAAO,CAAEC,UAAU,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CAE5CC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAa,WAAW,CAAG,KAAAA,CAAA,GAAY,CAC9B,GAAI,CACF,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAb,SAAS,CAACO,YAAY,CAAC,CAC1CE,SAAS,CAACI,IAAI,CAAC,CAEf;AACA,GAAIA,IAAI,CAACC,MAAM,GAAK,UAAU,CAAE,CAC9BC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC,CAC5B;AACAC,YAAY,CAACC,OAAO,CAAC,yBAAyB,CAAE,MAAM,CAAC,CACvD;AACAC,MAAM,CAACC,aAAa,CAAC,GAAI,CAAAC,YAAY,CAAC,SAAS,CAAE,CAC/CC,GAAG,CAAE,yBAAyB,CAC9BC,QAAQ,CAAE,MACZ,CAAC,CAAC,CAAC,CACL,CAEA;AACA,GAAIV,IAAI,CAACC,MAAM,GAAK,SAAS,EAAID,IAAI,CAACC,MAAM,GAAK,SAAS,CAAE,CAC1DU,UAAU,CAACZ,WAAW,CAAE,IAAI,CAAC,CAC/B,CACF,CAAE,MAAOa,KAAK,CAAE,CACdV,OAAO,CAACU,KAAK,CAAC,SAAS,CAAEA,KAAK,CAAC,CACjC,CAAC,OAAS,CACRd,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDC,WAAW,CAAC,CAAC,CACf,CAAC,CAAE,CAACL,YAAY,CAAC,CAAC,CAElB,GAAIG,OAAO,CAAE,CACX,mBAAOP,IAAA,QAAAuB,QAAA,CAAK,uBAAM,CAAK,CAAC,CAC1B,CAEA,mBACErB,KAAA,QAAAqB,QAAA,eACEvB,IAAA,OAAAuB,QAAA,CAAI,0BAAI,CAAI,CAAC,cACbrB,KAAA,MAAAqB,QAAA,EAAG,kBAAM,CAACnB,YAAY,EAAI,CAAC,cAC3BF,KAAA,MAAAqB,QAAA,EAAG,kBAAM,CAAClB,MAAM,CAACmB,UAAU,EAAI,CAAC,cAChCtB,KAAA,MAAAqB,QAAA,EAAG,gBAAI,CAAClB,MAAM,CAACM,MAAM,EAAI,CAAC,cAC1BT,KAAA,MAAAqB,QAAA,EAAG,gBAAI,CAAClB,MAAM,CAACA,MAAM,EAAI,KAAK,EAAI,CAAC,CAClCA,MAAM,CAACoB,cAAc,eACpBvB,KAAA,MAAAqB,QAAA,EAAG,4BAAM,CAAClB,MAAM,CAACoB,cAAc,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAC,EAAG,CAChD,CAEA,CAAC,SAAS,CAAE,SAAS,CAAC,CAACC,QAAQ,CAACtB,MAAM,CAACM,MAAM,CAAC,eAC7CX,IAAA,QAAAuB,QAAA,CAAK,+CAAU,CAAK,CACrB,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAApB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
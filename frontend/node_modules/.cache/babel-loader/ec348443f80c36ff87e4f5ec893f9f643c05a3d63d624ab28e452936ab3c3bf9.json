{"ast":null,"code":"import _objectSpread from\"/Volumes/\\u575E\\u57CE/OJ_1/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import{aiGenerateProblem,aiPreviewProblem,aiValidateAndCreateProblem,getProblems}from'../services/api';import'./AIProblemGenerationPage.css';import WhaleIcon from'../components/WhaleIcon';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const AIProblemGenerationPage=()=>{const[step,setStep]=useState(1);// 1: 输入需求, 2: 预览修改, 3: 最终确认\nconst[loading,setLoading]=useState(false);const[error,setError]=useState('');const[requirements,setRequirements]=useState('');const[generatedProblem,setGeneratedProblem]=useState(null);const[editedProblem,setEditedProblem]=useState(null);const[validationResult,setValidationResult]=useState('');// 添加调试信息\nconst[debugInfo,setDebugInfo]=useState('');// 测试用例管理\nconst[testCases,setTestCases]=useState([{input:'',output:''}]);// 格式模板弹窗状态\nconst[showFormatModal,setShowFormatModal]=useState(false);const[activeFormatTab,setActiveFormatTab]=useState('testcase');const[isClosingModal,setIsClosingModal]=useState(false);// 解析测试用例（从AI生成的格式转换为结构化格式）\nconst parseGeneratedTestCases=(testCasesText,expectedOutputText)=>{if(!testCasesText||!expectedOutputText)return[{input:'',output:''}];// 添加调试日志\nconsole.log('开始解析测试用例:');console.log('testCasesText:',testCasesText);console.log('expectedOutputText:',expectedOutputText);try{// 尝试解析为JSON格式\nconst parsed=JSON.parse(testCasesText);if(Array.isArray(parsed)){console.log('成功解析为JSON格式');return parsed.map(tc=>({input:tc.input||'',output:tc.output||''}));}}catch(e){// 如果不是JSON，尝试解析文本格式\nconsole.log('解析为JSON失败，尝试解析文本格式');}// 策略1：识别结构化格式（输入1：xxx 输出1：xxx）\nconsole.log('尝试识别结构化格式');const structuredResult=parseStructuredFormat(testCasesText);if(structuredResult.length>0){console.log('成功解析为结构化格式');return structuredResult;}// 策略2：智能行分割（基于内容特征）\nconsole.log('尝试智能行分割');const lines=testCasesText.split('\\n').filter(line=>line.trim());if(lines.length>0){const smartResult=smartLineSplit(lines);if(smartResult.length>0){console.log('使用智能行分割成功');return smartResult;}}// 策略3：回退到简化解析逻辑\nconsole.log('使用简化解析逻辑');// 尝试从testCasesText中提取输入和输出\nlet inputContent='';let outputContent='';// 如果AI生成了包含\"输入：\"和\"输出：\"的格式，尝试提取\nif(testCasesText.includes('输入：')&&testCasesText.includes('输出：')){const parts=testCasesText.split('输出：');if(parts.length>=2){inputContent=parts[0].replace('输入：','').trim();outputContent=parts[1].trim();}}else{// 如果没有明确标记，尝试智能分割\nconst lines=testCasesText.split('\\n').filter(line=>line.trim());if(lines.length>0){// 假设前一半是输入，后一半是输出\nconst midPoint=Math.ceil(lines.length/2);inputContent=lines.slice(0,midPoint).join('\\n');outputContent=lines.slice(midPoint).join('\\n');}}// 如果从testCasesText没有提取到内容，尝试从expectedOutputText\nif(!inputContent&&!outputContent&&expectedOutputText){outputContent=expectedOutputText.trim();}console.log('提取的输入内容:',inputContent);console.log('提取的输出内容:',outputContent);// 返回一个包含提取内容的测试用例，让教师手动调整\nif(inputContent||outputContent){return[{input:inputContent,output:outputContent,_needsManualReview:true// 标记需要手动检查\n}];}// 如果什么都没提取到，返回空的测试用例\nreturn[{input:'',output:''}];};// 解析结构化格式的函数\nconst parseStructuredFormat=testCasesText=>{const result=[];// 策略1：匹配新格式：测试用例X: 输入：xxx 输出：xxx\nconst newFormatPattern=/测试用例(\\d+):\\s*\\n输入：\\s*([\\s\\S]*?)(?=\\n输出：|$)\\n输出：\\s*([\\s\\S]*?)(?=\\n测试用例\\d+:|$)/g;let match;while((match=newFormatPattern.exec(testCasesText))!==null){const index=parseInt(match[1]);const input=match[2].trim();const output=match[3].trim();result.push({input:input,output:output,_needsManualReview:false});}if(result.length>0){console.log(\"\\u65B0\\u683C\\u5F0F\\u89E3\\u6790\\u5230 \".concat(result.length,\" \\u4E2A\\u6D4B\\u8BD5\\u7528\\u4F8B\"));return result;}// 策略2：匹配旧格式：输入1：[内容] 输出1：[内容] 输入2：[内容] 输出2：[内容] ...\nconst inputPattern=/输入(\\d+)[：:]\\s*([\\s\\S]*?)(?=输出\\1[：:]|输入\\d+[：:]|$)/g;const outputPattern=/输出(\\d+)[：:]\\s*([\\s\\S]*?)(?=输入\\d+[：:]|输出\\d+[：:]|$)/g;const inputs={};const outputs={};// 提取所有输入\nwhile((match=inputPattern.exec(testCasesText))!==null){const index=parseInt(match[1]);inputs[index]=match[2].trim();}// 提取所有输出\nwhile((match=outputPattern.exec(testCasesText))!==null){const index=parseInt(match[1]);outputs[index]=match[2].trim();}// 如果找到结构化格式，按索引匹配\nif(Object.keys(inputs).length>0||Object.keys(outputs).length>0){const maxIndex=Math.max(...Object.keys(inputs).map(k=>parseInt(k)),...Object.keys(outputs).map(k=>parseInt(k)));for(let i=1;i<=maxIndex;i++){result.push({input:inputs[i]||'',output:outputs[i]||'',_needsManualReview:!inputs[i]||!outputs[i]// 如果缺少输入或输出，标记需要检查\n});}console.log(\"\\u65E7\\u683C\\u5F0F\\u89E3\\u6790\\u5230 \".concat(result.length,\" \\u4E2A\\u6D4B\\u8BD5\\u7528\\u4F8B\"));return result;}return[];};// 智能行分割函数\nconst smartLineSplit=lines=>{const result=[];let currentInput=[];let currentOutput=[];let inInputSection=true;let testCaseIndex=1;// 预处理：识别可能的输入输出模式\nconst hasInputOutputPattern=lines.some(line=>line.toLowerCase().includes('输入')||line.toLowerCase().includes('输出'));// 如果没有明确的输入输出标记，尝试基于内容特征分割\nif(!hasInputOutputPattern){return splitByContentFeatures(lines);}for(let i=0;i<lines.length;i++){const line=lines[i];// 检测输入输出分界点\nif(isInputOutputBoundary(line,lines,i)){// 保存当前的测试用例\nif(currentInput.length>0||currentOutput.length>0){result.push({input:currentInput.join('\\n'),output:currentOutput.join('\\n'),_needsManualReview:currentInput.length===0||currentOutput.length===0});testCaseIndex++;}// 重置当前测试用例\ncurrentInput=[];currentOutput=[];inInputSection=!inInputSection;}// 根据当前状态添加到输入或输出\nif(inInputSection){currentInput.push(line);}else{currentOutput.push(line);}}// 添加最后一个测试用例\nif(currentInput.length>0||currentOutput.length>0){result.push({input:currentInput.join('\\n'),output:currentOutput.join('\\n'),_needsManualReview:currentInput.length===0||currentOutput.length===0});}console.log(\"\\u667A\\u80FD\\u884C\\u5206\\u5272\\u5F97\\u5230 \".concat(result.length,\" \\u4E2A\\u6D4B\\u8BD5\\u7528\\u4F8B\"));return result;};// 基于内容特征的分割函数\nconst splitByContentFeatures=lines=>{const result=[];// 尝试找到输入输出的分界点\nlet splitPoint=findOptimalSplitPoint(lines);if(splitPoint>0){const inputLines=lines.slice(0,splitPoint);const outputLines=lines.slice(splitPoint);// 尝试进一步分割为多个测试用例\nconst testCases=splitIntoMultipleTestCases(inputLines,outputLines);if(testCases.length>1){return testCases;}else{return[{input:inputLines.join('\\n'),output:outputLines.join('\\n'),_needsManualReview:false}];}}// 如果找不到分界点，使用简单的前后分割\nconst midPoint=Math.ceil(lines.length/2);return[{input:lines.slice(0,midPoint).join('\\n'),output:lines.slice(midPoint).join('\\n'),_needsManualReview:true}];};// 找到最优分割点\nconst findOptimalSplitPoint=lines=>{// 策略1：寻找明显的分隔符\nfor(let i=0;i<lines.length;i++){const line=lines[i].trim();if(line==='---'||line==='==='||line==='***'||line===''){// 检查前后是否有内容\nconst hasContentBefore=i>0&&lines[i-1].trim()!=='';const hasContentAfter=i<lines.length-1&&lines[i+1].trim()!=='';if(hasContentBefore&&hasContentAfter){return i;}}}// 策略2：基于数字模式识别\nfor(let i=1;i<lines.length;i++){const prevLine=lines[i-1].trim();const currentLine=lines[i].trim();// 如果前一行是单个数字，当前行也是数字，可能是新测试用例\nif(/^\\d+$/.test(prevLine)&&/^\\d+/.test(currentLine)){return i;}}// 策略3：基于空行分隔\nfor(let i=1;i<lines.length-1;i++){if(lines[i].trim()===''&&lines[i-1].trim()!==''&&lines[i+1].trim()!==''){return i+1;}}return-1;};// 关闭弹窗函数（带动画）\nconst closeFormatModal=()=>{setIsClosingModal(true);setTimeout(()=>{setShowFormatModal(false);setIsClosingModal(false);},300);// 等待动画完成\n};// 复制到剪贴板函数\nconst copyToClipboard=async text=>{try{await navigator.clipboard.writeText(text);// 可以添加一个简单的提示\nalert('格式已复制到剪贴板！');}catch(err){// 降级方案\nconst textArea=document.createElement('textarea');textArea.value=text;document.body.appendChild(textArea);textArea.select();document.execCommand('copy');document.body.removeChild(textArea);alert('格式已复制到剪贴板！');}};// 分割为多个测试用例\nconst splitIntoMultipleTestCases=(inputLines,outputLines)=>{const result=[];// 尝试识别测试用例的数量\nconst inputNumbers=inputLines.filter(line=>/^\\d+$/.test(line.trim()));const outputNumbers=outputLines.filter(line=>/^\\d+$/.test(line.trim()));if(inputNumbers.length===outputNumbers.length&&inputNumbers.length>1){// 按数字分组\nlet currentInput=[];let currentOutput=[];let currentIndex=0;for(let i=0;i<inputLines.length;i++){const line=inputLines[i];if(/^\\d+$/.test(line.trim())){// 保存前一个测试用例\nif(currentInput.length>0||currentOutput.length>0){result.push({input:currentInput.join('\\n'),output:currentOutput.join('\\n'),_needsManualReview:false});}currentInput=[line];currentOutput=[];currentIndex++;}else{currentInput.push(line);}}// 添加最后一个测试用例\nif(currentInput.length>0){result.push({input:currentInput.join('\\n'),output:currentOutput.join('\\n'),_needsManualReview:false});}return result;}// 如果无法识别多个测试用例，返回单个\nreturn[{input:inputLines.join('\\n'),output:outputLines.join('\\n'),_needsManualReview:false}];};// 检测输入输出分界点的函数\nconst isInputOutputBoundary=(line,allLines,currentIndex)=>{const lineLower=line.toLowerCase();// 检测明显的分隔符\nif(lineLower.includes('---')||lineLower.includes('===')||lineLower.includes('***')){return true;}// 检测数字编号（如 \"1.\" \"2.\" 等）\nif(/^\\d+\\./.test(line.trim())){return true;}// 检测\"输入X：\"或\"输出X：\"格式\nif(/^(输入|输出)\\d+[：:]/.test(line.trim())){return true;}// 检测空行后的新测试用例开始\nif(currentIndex>0&&allLines[currentIndex-1].trim()===''){const nextLines=allLines.slice(currentIndex+1,currentIndex+3);if(nextLines.some(l=>l.toLowerCase().includes('输入')||l.toLowerCase().includes('输出'))){return true;}}// 检测连续空行（可能表示测试用例分隔）\nif(currentIndex>0&&currentIndex<allLines.length-1){const prevLine=allLines[currentIndex-1].trim();const nextLine=allLines[currentIndex+1].trim();if(prevLine===''&&nextLine===''&&line.trim()===''){return true;}}return false;};// 步骤1: AI生成题目\nconst handleGenerate=async()=>{if(!requirements.trim()){setError('请输入生题需求');return;}try{setLoading(true);setError('');// 添加调试信息\nconst token=localStorage.getItem('token');const user=localStorage.getItem('user');setDebugInfo(\"Token: \".concat(token?token.substring(0,20)+'...':'No token',\", User: \").concat(user?JSON.parse(user).username:'No user'));console.log('开始调用AI生题API...');console.log('Token:',token);console.log('Requirements:',requirements);const result=await aiGenerateProblem(requirements);console.log('API响应:',result);if(result.success){setGeneratedProblem(result.problem);setEditedProblem(_objectSpread({},result.problem));// 复制一份用于编辑\n// 解析测试用例\nconst parsedCases=parseGeneratedTestCases(result.problem.test_cases,result.problem.expected_output);setTestCases(parsedCases);setStep(2);}else{setError(result.error||'AI生成失败');}}catch(error){var _error$response,_error$response2,_error$response3,_error$response3$data;console.error('AI生成错误详情:',error);console.error('错误响应:',error.response);console.error('错误数据:',(_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data);let errorMessage='生成题目失败，请重试';if(((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status)===401){errorMessage='认证失败，使用测试模式...';// 使用模拟数据来测试前端功能\nconst mockProblem={title:'字符串反转（测试模式）',description:'给定一个字符串，请将其反转后输出。\\n\\n输入格式：一行包含一个字符串\\n输出格式：输出反转后的字符串',test_cases:'输入1：hello\\n输出1：olleh\\n\\n输入2：world\\n输出2：dlrow\\n\\n输入3：test\\n输出3：tset',expected_output:'olleh\\ndlrow\\ntset',difficulty:'easy',time_limit:1000,memory_limit:128,ai_generated:true,original_requirements:requirements,generated_at:new Date().toISOString()};setGeneratedProblem(mockProblem);setEditedProblem(_objectSpread({},mockProblem));// 解析测试用例\nconst parsedCases=parseGeneratedTestCases(mockProblem.test_cases,mockProblem.expected_output);setTestCases(parsedCases);setStep(2);setError('');// 清除错误信息\nreturn;}else if((_error$response3=error.response)!==null&&_error$response3!==void 0&&(_error$response3$data=_error$response3.data)!==null&&_error$response3$data!==void 0&&_error$response3$data.error){errorMessage=error.response.data.error;}else if(error.message){errorMessage=error.message;}setError(errorMessage);}finally{setLoading(false);}};// 步骤2: 预览修改\nconst handlePreview=async()=>{try{setLoading(true);setError('');// 将测试用例转换为字符串格式，保持向后兼容\nconst testCasesText=testCases.map(tc=>\"\\u8F93\\u5165\\uFF1A\".concat(tc.input,\"\\n\\u8F93\\u51FA\\uFF1A\").concat(tc.output)).join('\\n\\n');const expectedOutputText=testCases.map(tc=>tc.output).join('\\n');const updatedProblem=_objectSpread(_objectSpread({},editedProblem),{},{test_cases:testCasesText,expected_output:expectedOutputText});setEditedProblem(updatedProblem);const result=await aiPreviewProblem(updatedProblem);if(result.success){setStep(3);}else{setError('预览失败');}}catch(error){var _error$response4,_error$response4$data;setError(((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.error)||'预览失败');}finally{setLoading(false);}};// 步骤3: 最终创建\nconst handleCreateProblem=async function(){let forceCreate=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;try{setLoading(true);setError('');// 将测试用例转换为JSON格式\nconst testCasesJson=JSON.stringify(testCases.map(tc=>({input:tc.input||'',output:tc.output||''})));const problemData=_objectSpread(_objectSpread({},editedProblem),{},{test_cases:testCasesJson,expected_output:testCases.map(tc=>tc.output||'').join('\\n'),// 保持向后兼容\nforce_create:forceCreate});const result=await aiValidateAndCreateProblem(problemData);if(result.success){alert('题目创建成功！');// 尝试刷新题目列表\ntry{const problemsData=await getProblems(1,50);console.log('题目创建成功，新题目数据:',problemsData);// 尝试通过多种方式通知父组件刷新\n// 方法1: localStorage标记\nlocalStorage.setItem('refreshProblems','true');localStorage.setItem('lastProblemCreated',new Date().toISOString());// 方法2: 自定义事件\nwindow.dispatchEvent(new CustomEvent('problemCreated',{detail:{problemData:problemsData}}));// 方法3: 如果当前页面在iframe中，通知父页面\nif(window.parent&&window.parent!==window){try{window.parent.postMessage({type:'PROBLEM_CREATED',data:problemsData},'*');}catch(e){console.log('无法通知父页面:',e);}}}catch(error){console.warn('无法刷新题目列表:',error);}// 重置状态\nsetStep(1);setRequirements('');setGeneratedProblem(null);setEditedProblem(null);setValidationResult('');setTestCases([{input:'',output:''}]);}else{setValidationResult(result.validation_result);setError(result.message);}}catch(error){var _error$response5;const errorData=(_error$response5=error.response)===null||_error$response5===void 0?void 0:_error$response5.data;if(errorData!==null&&errorData!==void 0&&errorData.validation_result){setValidationResult(errorData.validation_result);}setError((errorData===null||errorData===void 0?void 0:errorData.message)||'创建题目失败');}finally{setLoading(false);}};// 处理输入变化\nconst handleInputChange=(field,value)=>{setEditedProblem(prev=>_objectSpread(_objectSpread({},prev),{},{[field]:value}));};// 重新开始\nconst handleRestart=()=>{setStep(1);setRequirements('');setGeneratedProblem(null);setEditedProblem(null);setValidationResult('');setError('');setTestCases([{input:'',output:''}]);};// 测试用例管理\nconst addTestCase=()=>{setTestCases([...testCases,{input:'',output:''}]);};const removeTestCase=index=>{setTestCases(testCases.filter((_,i)=>i!==index));};const updateTestCase=(index,field,value)=>{const newTestCases=[...testCases];newTestCases[index][field]=value;setTestCases(newTestCases);};return/*#__PURE__*/_jsxs(\"div\",{className:\"ai-problem-generation\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"page-header\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[/*#__PURE__*/_jsx(WhaleIcon,{size:32}),\" AI\\u667A\\u80FD\\u751F\\u9898\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"step-indicator\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"step \".concat(step>=1?'active':''),children:\"1. \\u8F93\\u5165\\u9700\\u6C42\"}),/*#__PURE__*/_jsx(\"div\",{className:\"step \".concat(step>=2?'active':''),children:\"2. \\u9884\\u89C8\\u4FEE\\u6539\"}),/*#__PURE__*/_jsx(\"div\",{className:\"step \".concat(step>=3?'active':''),children:\"3. \\u6700\\u7EC8\\u786E\\u8BA4\"})]})]}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"error-message\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"error-icon\",children:\"\\u26A0\\uFE0F\"}),error]}),debugInfo&&/*#__PURE__*/_jsxs(\"div\",{className:\"debug-info\",style:{background:'#f0f8ff',padding:'10px',margin:'10px 0',borderRadius:'5px',fontSize:'12px'},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u8C03\\u8BD5\\u4FE1\\u606F:\"}),\" \",debugInfo]}),step===1&&/*#__PURE__*/_jsxs(\"div\",{className:\"step-content\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83D\\uDCDD \\u63CF\\u8FF0\\u60A8\\u7684\\u9898\\u76EE\\u9700\\u6C42\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"requirements-section\",children:[/*#__PURE__*/_jsx(\"textarea\",{value:requirements,onChange:e=>setRequirements(e.target.value),placeholder:\"\\u8BF7\\u8BE6\\u7EC6\\u63CF\\u8FF0\\u60A8\\u60F3\\u8981\\u751F\\u6210\\u7684\\u9898\\u76EE\\uFF0C\\u4F8B\\u5982\\uFF1A \\u751F\\u6210\\u4E00\\u4E2A\\u5173\\u4E8E\\u6570\\u7EC4\\u6392\\u5E8F\\u7684\\u7B80\\u5355\\u9898\\u76EE\\uFF0C\\u9002\\u5408\\u521D\\u5B66\\u8005\\uFF1A\\n- \\u96BE\\u5EA6\\uFF1A\\u7B80\\u5355\\n- \\u5305\\u542B3-5\\u4E2A\\u6D4B\\u8BD5\\u7528\\u4F8B\\n- \\u8981\\u6C42\\u4F7F\\u7528\\u5192\\u6CE1\\u6392\\u5E8F\\u6216\\u9009\\u62E9\\u6392\\u5E8F \\uD83D\\uDCA1 \\u4E3A\\u4E86\\u63D0\\u9AD8AI\\u751F\\u6210\\u8D28\\u91CF\\uFF0C\\u5EFA\\u8BAE\\u5728\\u63CF\\u8FF0\\u4E2D\\u660E\\u786E\\u6307\\u5B9A\\uFF1A\\n\\u2022 \\u6D4B\\u8BD5\\u7528\\u4F8B\\u6570\\u91CF\\uFF08\\u5982\\uFF1A3-5\\u4E2A\\uFF09\\n\\u2022 \\u8F93\\u5165\\u8F93\\u51FA\\u683C\\u5F0F\\u8981\\u6C42\\uFF08\\u5982\\uFF1A\\u6BCF\\u884C\\u4E00\\u4E2A\\u6570\\u5B57\\u3001\\u7A7A\\u683C\\u5206\\u9694\\u7B49\\uFF09\\n\\u2022 \\u8FB9\\u754C\\u60C5\\u51B5\\uFF08\\u5982\\uFF1A\\u7A7A\\u6570\\u7EC4\\u3001\\u5355\\u4E2A\\u5143\\u7D20\\u3001\\u5927\\u91CF\\u6570\\u636E\\u7B49\\uFF09\\n\\u2022 \\u7279\\u6B8A\\u8981\\u6C42\\uFF08\\u5982\\uFF1A\\u65F6\\u95F4\\u9650\\u5236\\u3001\\u5185\\u5B58\\u9650\\u5236\\u7B49\\uFF09 AI\\u4F1A\\u6309\\u7167\\u89C4\\u8303\\u683C\\u5F0F\\u751F\\u6210\\u6D4B\\u8BD5\\u7528\\u4F8B\\uFF0C\\u7CFB\\u7EDF\\u4F1A\\u81EA\\u52A8\\u8BC6\\u522B\\u548C\\u5206\\u5272\\uFF0C\\u51CF\\u5C11\\u624B\\u52A8\\u8C03\\u6574\\u5DE5\\u4F5C\\u3002\",rows:8,className:\"requirements-input\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-tips\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uD83D\\uDCA1 \\u751F\\u9898\\u5EFA\\u8BAE\\uFF1A\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"\\u660E\\u786E\\u6307\\u5B9A\\u9898\\u76EE\\u7C7B\\u578B\\uFF08\\u5982\\uFF1A\\u6570\\u7EC4\\u3001\\u5B57\\u7B26\\u4E32\\u3001\\u7B97\\u6CD5\\u7B49\\uFF09\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u8BF4\\u660E\\u96BE\\u5EA6\\u7B49\\u7EA7\\uFF08\\u7B80\\u5355/\\u4E2D\\u7B49/\\u56F0\\u96BE\\uFF09\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u6307\\u5B9A\\u6D4B\\u8BD5\\u7528\\u4F8B\\u6570\\u91CF\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u63CF\\u8FF0\\u7279\\u6B8A\\u8981\\u6C42\\u6216\\u9650\\u5236\\u6761\\u4EF6\"}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"strong\",{children:\"\\u5DE5\\u4F5C\\u6D41\\u7A0B\\uFF1A\"})}),/*#__PURE__*/_jsx(\"li\",{style:{marginLeft:'20px'},children:\"\\u2022 AI\\u751F\\u6210\\u57FA\\u672C\\u7684\\u8F93\\u5165\\u8F93\\u51FA\\u6837\\u4F8B\"}),/*#__PURE__*/_jsx(\"li\",{style:{marginLeft:'20px'},children:\"\\u2022 \\u6559\\u5E08\\u5728\\u9884\\u89C8\\u9636\\u6BB5\\u624B\\u52A8\\u8C03\\u6574\\u6D4B\\u8BD5\\u7528\\u4F8B\"}),/*#__PURE__*/_jsx(\"li\",{style:{marginLeft:'20px'},children:\"\\u2022 \\u652F\\u6301\\u591A\\u884C\\u8F93\\u5165\\u548C\\u8F93\\u51FA\"}),/*#__PURE__*/_jsx(\"li\",{style:{marginLeft:'20px'},children:\"\\u2022 \\u652F\\u6301\\u7A7A\\u8F93\\u5165\\uFF08\\u5982\\u6392\\u5E8F\\u9898\\u76EE\\uFF09\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"format-template\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uD83D\\uDCCB \\u683C\\u5F0F\\u6A21\\u677F\\u53C2\\u8003\\uFF1A\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u70B9\\u51FB\\u4E0B\\u65B9\\u6309\\u94AE\\u67E5\\u770B\\u8BE6\\u7EC6\\u7684\\u683C\\u5F0F\\u6A21\\u677F\\u548C\\u6D4B\\u8BD5\\u7528\\u4F8B\\u683C\\u5F0F\\u8981\\u6C42\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>setShowFormatModal(true),className:\"format-modal-btn\",children:\"\\uD83D\\uDCCB \\u67E5\\u770B\\u683C\\u5F0F\\u6A21\\u677F\"})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"action-buttons\",children:/*#__PURE__*/_jsx(\"button\",{onClick:handleGenerate,disabled:loading||!requirements.trim(),className:\"primary-btn\",children:loading?'🔄 AI生成中...':'🚀 开始生成'})})]}),step===2&&editedProblem&&/*#__PURE__*/_jsxs(\"div\",{className:\"step-content\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u270F\\uFE0F \\u9884\\u89C8\\u548C\\u4FEE\\u6539\\u751F\\u6210\\u7684\\u9898\\u76EE\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"problem-editor\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"editor-section\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u9898\\u76EE\\u540D\\u79F0\\uFF1A\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:editedProblem.title||'',onChange:e=>handleInputChange('title',e.target.value),className:\"title-input\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"editor-section\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u9898\\u76EE\\u63CF\\u8FF0\\uFF1A\"}),/*#__PURE__*/_jsx(\"textarea\",{value:editedProblem.description||'',onChange:e=>handleInputChange('description',e.target.value),rows:6,className:\"description-input\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"editor-section\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u6D4B\\u8BD5\\u7528\\u4F8B\\u7BA1\\u7406\\uFF1A\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"test-case-manager\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"test-case-header\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\u6D4B\\u8BD5\\u7528\\u4F8B\\u5217\\u8868\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:addTestCase,className:\"add-test-case-btn\",children:\"+ \\u6DFB\\u52A0\\u6D4B\\u8BD5\\u7528\\u4F8B\"})]}),testCases.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"no-test-cases\",children:/*#__PURE__*/_jsx(\"p\",{children:\"\\u6682\\u65E0\\u6D4B\\u8BD5\\u7528\\u4F8B\\uFF0C\\u8BF7\\u70B9\\u51FB\\\"\\u6DFB\\u52A0\\u6D4B\\u8BD5\\u7528\\u4F8B\\\"\\u6309\\u94AE\\u6DFB\\u52A0\"})}):/*#__PURE__*/_jsxs(_Fragment,{children:[testCases.some(tc=>tc._needsManualReview)&&/*#__PURE__*/_jsxs(\"div\",{className:\"parsing-warnings\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\u26A0\\uFE0F \\u68C0\\u6D4B\\u5230\\u4EE5\\u4E0B\\u95EE\\u9898\\uFF0C\\u8BF7\\u68C0\\u67E5\\uFF1A\"}),/*#__PURE__*/_jsx(\"ul\",{children:testCases.map((tc,idx)=>{if(tc._needsManualReview){if(!tc.input&&!tc.output){return/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u6D4B\\u8BD5\\u7528\\u4F8B \",idx+1,\" \\u8F93\\u5165\\u548C\\u8F93\\u51FA\\u90FD\\u4E3A\\u7A7A\\uFF0C\\u8BF7\\u8865\\u5145\"]},idx);}else if(!tc.input){return/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u6D4B\\u8BD5\\u7528\\u4F8B \",idx+1,\" \\u7F3A\\u5C11\\u8F93\\u5165\\u6570\\u636E\"]},idx);}else if(!tc.output){return/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u6D4B\\u8BD5\\u7528\\u4F8B \",idx+1,\" \\u7F3A\\u5C11\\u671F\\u671B\\u8F93\\u51FA\"]},idx);}else if(tc.input.includes('输出')||tc.output.includes('输入')){return/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u6D4B\\u8BD5\\u7528\\u4F8B \",idx+1,\" \\u53EF\\u80FD\\u5B58\\u5728\\u8F93\\u5165\\u8F93\\u51FA\\u6DF7\\u6DC6\\uFF0C\\u8BF7\\u68C0\\u67E5\"]},idx);}}return null;})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"test-cases-list\",children:testCases.map((testCase,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"test-case-item \".concat(testCase._needsManualReview?'needs-review':''),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"test-case-header-row\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"test-case-number\",children:[\"\\u6D4B\\u8BD5\\u7528\\u4F8B \",index+1,testCase._needsManualReview&&/*#__PURE__*/_jsx(\"span\",{className:\"review-badge\",children:\"\\u26A0\\uFE0F \\u9700\\u68C0\\u67E5\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>removeTestCase(index),className:\"remove-test-case-btn\",title:\"\\u5220\\u9664\\u6B64\\u6D4B\\u8BD5\\u7528\\u4F8B\",children:\"\\xD7\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"test-case-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-section\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u8F93\\u5165\\uFF1A\"}),/*#__PURE__*/_jsx(\"textarea\",{value:testCase.input,onChange:e=>updateTestCase(index,'input',e.target.value),placeholder:\"\\u8F93\\u5165\\u6570\\u636E\\uFF08\\u53EF\\u4EE5\\u4E3A\\u7A7A\\uFF09\",rows:2,className:\"test-case-input\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"output-section\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u671F\\u671B\\u8F93\\u51FA\\uFF1A\"}),/*#__PURE__*/_jsx(\"textarea\",{value:testCase.output,onChange:e=>updateTestCase(index,'output',e.target.value),placeholder:\"\\u671F\\u671B\\u8F93\\u51FA\",rows:2,className:\"test-case-output\"})]})]})]},index))})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"editor-section\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u96BE\\u5EA6\\u7B49\\u7EA7\\uFF1A\"}),/*#__PURE__*/_jsxs(\"select\",{value:editedProblem.difficulty||'easy',onChange:e=>handleInputChange('difficulty',e.target.value),className:\"difficulty-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"easy\",children:\"\\u7B80\\u5355\"}),/*#__PURE__*/_jsx(\"option\",{value:\"medium\",children:\"\\u4E2D\\u7B49\"}),/*#__PURE__*/_jsx(\"option\",{value:\"hard\",children:\"\\u56F0\\u96BE\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"editor-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"editor-section\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u65F6\\u95F4\\u9650\\u5236(ms)\\uFF1A\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:editedProblem.time_limit||1000,onChange:e=>handleInputChange('time_limit',parseInt(e.target.value)),className:\"time-limit-input\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"editor-section\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u5185\\u5B58\\u9650\\u5236(MB)\\uFF1A\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:editedProblem.memory_limit||128,onChange:e=>handleInputChange('memory_limit',parseInt(e.target.value)),className:\"memory-limit-input\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"action-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleRestart,className:\"secondary-btn\",children:\"\\uD83D\\uDD04 \\u91CD\\u65B0\\u5F00\\u59CB\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handlePreview,disabled:loading,className:\"primary-btn\",children:loading?'处理中...':'👀 预览确认'})]})]}),step===3&&editedProblem&&/*#__PURE__*/_jsxs(\"div\",{className:\"step-content\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83D\\uDD0D AI\\u9A8C\\u8BC1\\u548C\\u6700\\u7EC8\\u786E\\u8BA4\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"final-preview\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"preview-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCCB \\u9898\\u76EE\\u9884\\u89C8\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"preview-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"preview-item\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u9898\\u76EE\\u540D\\u79F0\\uFF1A\"}),/*#__PURE__*/_jsx(\"span\",{children:editedProblem.title})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"preview-item\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u96BE\\u5EA6\\u7B49\\u7EA7\\uFF1A\"}),/*#__PURE__*/_jsx(\"span\",{className:\"difficulty-badge \".concat(editedProblem.difficulty),children:editedProblem.difficulty==='easy'?'简单':editedProblem.difficulty==='medium'?'中等':'困难'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"preview-item\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u65F6\\u95F4/\\u5185\\u5B58\\u9650\\u5236\\uFF1A\"}),/*#__PURE__*/_jsxs(\"span\",{children:[editedProblem.time_limit,\"ms / \",editedProblem.memory_limit,\"MB\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"preview-item\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u9898\\u76EE\\u63CF\\u8FF0\\uFF1A\"}),/*#__PURE__*/_jsx(\"pre\",{className:\"description-preview\",children:editedProblem.description})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"preview-item\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u6D4B\\u8BD5\\u7528\\u4F8B\\uFF1A\"}),/*#__PURE__*/_jsx(\"div\",{className:\"test-cases-preview\",children:testCases.map((tc,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"preview-test-case\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"preview-test-case-header\",children:/*#__PURE__*/_jsxs(\"strong\",{children:[\"\\u6D4B\\u8BD5\\u7528\\u4F8B \",index+1,\":\"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"preview-test-case-content\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u8F93\\u5165:\"}),\" \",tc.input||'(无输入)']}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u671F\\u671B\\u8F93\\u51FA:\"}),\" \",tc.output]})]})]},index))})]})]})]}),validationResult&&/*#__PURE__*/_jsxs(\"div\",{className:\"validation-result\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[/*#__PURE__*/_jsx(WhaleIcon,{size:24}),\" AI\\u9A8C\\u8BC1\\u7ED3\\u679C\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"validation-content\",children:/*#__PURE__*/_jsx(\"pre\",{children:validationResult})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"action-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setStep(2),className:\"secondary-btn\",children:\"\\u2190 \\u8FD4\\u56DE\\u4FEE\\u6539\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleRestart,className:\"secondary-btn\",children:\"\\uD83D\\uDD04 \\u91CD\\u65B0\\u5F00\\u59CB\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleCreateProblem(false),disabled:loading,className:\"primary-btn\",children:loading?'创建中...':'✅ 创建题目'}),validationResult&&!validationResult.includes('验证通过')&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleCreateProblem(true),disabled:loading,className:\"warning-btn\",children:\"\\u26A0\\uFE0F \\u5F3A\\u5236\\u521B\\u5EFA\"})]})]}),showFormatModal&&/*#__PURE__*/_jsx(\"div\",{className:\"format-modal-overlay \".concat(isClosingModal?'closing':''),onClick:closeFormatModal,children:/*#__PURE__*/_jsxs(\"div\",{className:\"format-modal\",onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"format-modal-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCCB \\u683C\\u5F0F\\u6A21\\u677F\\u53C2\\u8003\"}),/*#__PURE__*/_jsx(\"button\",{className:\"close-btn\",onClick:closeFormatModal,children:\"\\xD7\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"format-modal-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"format-tabs\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"format-tab \".concat(activeFormatTab==='full'?'active':''),onClick:()=>setActiveFormatTab('full'),children:\"\\u5B8C\\u6574\\u6A21\\u677F\"}),/*#__PURE__*/_jsx(\"button\",{className:\"format-tab \".concat(activeFormatTab==='testcase'?'active':''),onClick:()=>setActiveFormatTab('testcase'),children:\"\\u6D4B\\u8BD5\\u7528\\u4F8B\\u683C\\u5F0F\"})]}),activeFormatTab==='full'&&/*#__PURE__*/_jsxs(\"div\",{className:\"format-tab-content\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uD83D\\uDCDD \\u5B8C\\u6574\\u9898\\u76EE\\u751F\\u6210\\u6A21\\u677F\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"template-examples\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"template-example\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"\\u6570\\u7EC4\\u6392\\u5E8F\\u9898\\u76EE\"}),/*#__PURE__*/_jsx(\"pre\",{children:\"\\u751F\\u6210\\u4E00\\u4E2A\\u6570\\u7EC4\\u6392\\u5E8F\\u9898\\u76EE\\uFF0C\\u8981\\u6C42\\uFF1A\\n- \\u96BE\\u5EA6\\uFF1A\\u7B80\\u5355\\n- \\u6D4B\\u8BD5\\u7528\\u4F8B\\uFF1A3-5\\u4E2A\\n- \\u8F93\\u5165\\u683C\\u5F0F\\uFF1A\\u7B2C\\u4E00\\u884C\\u6570\\u5B57n\\uFF0C\\u7B2C\\u4E8C\\u884Cn\\u4E2A\\u6574\\u6570\\n- \\u8F93\\u51FA\\u683C\\u5F0F\\uFF1A\\u6392\\u5E8F\\u540E\\u7684\\u6570\\u7EC4\\n- \\u8FB9\\u754C\\u60C5\\u51B5\\uFF1A\\u5305\\u542B\\u7A7A\\u6570\\u7EC4\\u3001\\u5355\\u4E2A\\u5143\\u7D20\\u3001\\u91CD\\u590D\\u5143\\u7D20\\n- \\u7279\\u6B8A\\u8981\\u6C42\\uFF1A\\u65F6\\u95F4\\u590D\\u6742\\u5EA6O(n\\xB2)\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"template-example\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"\\u5B57\\u7B26\\u4E32\\u5904\\u7406\\u9898\\u76EE\"}),/*#__PURE__*/_jsx(\"pre\",{children:\"\\u751F\\u6210\\u4E00\\u4E2A\\u5B57\\u7B26\\u4E32\\u53CD\\u8F6C\\u9898\\u76EE\\uFF0C\\u8981\\u6C42\\uFF1A\\n- \\u96BE\\u5EA6\\uFF1A\\u7B80\\u5355  \\n- \\u6D4B\\u8BD5\\u7528\\u4F8B\\uFF1A4\\u4E2A\\n- \\u8F93\\u5165\\u683C\\u5F0F\\uFF1A\\u6BCF\\u884C\\u4E00\\u4E2A\\u5B57\\u7B26\\u4E32\\n- \\u8F93\\u51FA\\u683C\\u5F0F\\uFF1A\\u53CD\\u8F6C\\u540E\\u7684\\u5B57\\u7B26\\u4E32\\n- \\u8FB9\\u754C\\u60C5\\u51B5\\uFF1A\\u7A7A\\u5B57\\u7B26\\u4E32\\u3001\\u5355\\u5B57\\u7B26\\u3001\\u957F\\u5B57\\u7B26\\u4E32\\n- \\u7279\\u6B8A\\u8981\\u6C42\\uFF1A\\u652F\\u6301\\u4E2D\\u6587\\u5B57\\u7B26\"})]})]})]}),activeFormatTab==='testcase'&&/*#__PURE__*/_jsxs(\"div\",{className:\"format-tab-content\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uD83E\\uDDEA \\u6D4B\\u8BD5\\u7528\\u4F8B\\u683C\\u5F0F\\u8981\\u6C42\\uFF08\\u53EF\\u76F4\\u63A5\\u590D\\u5236\\u4F7F\\u7528\\uFF09\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"testcase-format\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"format-section\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"\\u57FA\\u7840\\u683C\\u5F0F\"}),/*#__PURE__*/_jsx(\"pre\",{children:\"\\u6D4B\\u8BD5\\u7528\\u4F8B1:\\n\\u8F93\\u5165\\uFF1A[]\\n\\u8F93\\u51FA\\uFF1A[]\\n\\n\\u6D4B\\u8BD5\\u7528\\u4F8B2:\\n\\u8F93\\u5165\\uFF1A1\\n42\\n\\u8F93\\u51FA\\uFF1A42\\n\\n\\u6D4B\\u8BD5\\u7528\\u4F8B3:\\n\\u8F93\\u5165\\uFF1A3\\n3 1 2\\n\\u8F93\\u51FA\\uFF1A1 2 3\"}),/*#__PURE__*/_jsx(\"button\",{className:\"copy-btn\",onClick:()=>copyToClipboard(\"\\u6D4B\\u8BD5\\u7528\\u4F8B1:\\n\\u8F93\\u5165\\uFF1A[]\\n\\u8F93\\u51FA\\uFF1A[]\\n\\n\\u6D4B\\u8BD5\\u7528\\u4F8B2:\\n\\u8F93\\u5165\\uFF1A1\\n42\\n\\u8F93\\u51FA\\uFF1A42\\n\\n\\u6D4B\\u8BD5\\u7528\\u4F8B3:\\n\\u8F93\\u5165\\uFF1A3\\n3 1 2\\n\\u8F93\\u51FA\\uFF1A1 2 3\"),children:\"\\uD83D\\uDCCB \\u590D\\u5236\\u683C\\u5F0F\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"format-section\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"\\u5B57\\u7B26\\u4E32\\u683C\\u5F0F\"}),/*#__PURE__*/_jsx(\"pre\",{children:\"\\u6D4B\\u8BD5\\u7528\\u4F8B1:\\n\\u8F93\\u5165\\uFF1A\\n\\u8F93\\u51FA\\uFF1A\\n\\n\\u6D4B\\u8BD5\\u7528\\u4F8B2:\\n\\u8F93\\u5165\\uFF1Aa\\n\\u8F93\\u51FA\\uFF1Aa\\n\\n\\u6D4B\\u8BD5\\u7528\\u4F8B3:\\n\\u8F93\\u5165\\uFF1Ahello\\n\\u8F93\\u51FA\\uFF1Aolleh\"}),/*#__PURE__*/_jsx(\"button\",{className:\"copy-btn\",onClick:()=>copyToClipboard(\"\\u6D4B\\u8BD5\\u7528\\u4F8B1:\\n\\u8F93\\u5165\\uFF1A\\n\\u8F93\\u51FA\\uFF1A\\n\\n\\u6D4B\\u8BD5\\u7528\\u4F8B2:\\n\\u8F93\\u5165\\uFF1Aa\\n\\u8F93\\u51FA\\uFF1Aa\\n\\n\\u6D4B\\u8BD5\\u7528\\u4F8B3:\\n\\u8F93\\u5165\\uFF1Ahello\\n\\u8F93\\u51FA\\uFF1Aolleh\"),children:\"\\uD83D\\uDCCB \\u590D\\u5236\\u683C\\u5F0F\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"format-section\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"\\u6570\\u5B66\\u8BA1\\u7B97\\u683C\\u5F0F\"}),/*#__PURE__*/_jsx(\"pre\",{children:\"\\u6D4B\\u8BD5\\u7528\\u4F8B1:\\n\\u8F93\\u5165\\uFF1A0 0\\n\\u8F93\\u51FA\\uFF1A0\\n\\n\\u6D4B\\u8BD5\\u7528\\u4F8B2:\\n\\u8F93\\u5165\\uFF1A1 2\\n\\u8F93\\u51FA\\uFF1A3\\n\\n\\u6D4B\\u8BD5\\u7528\\u4F8B3:\\n\\u8F93\\u5165\\uFF1A-5 3\\n\\u8F93\\u51FA\\uFF1A-2\"}),/*#__PURE__*/_jsx(\"button\",{className:\"copy-btn\",onClick:()=>copyToClipboard(\"\\u6D4B\\u8BD5\\u7528\\u4F8B1:\\n\\u8F93\\u5165\\uFF1A0 0\\n\\u8F93\\u51FA\\uFF1A0\\n\\n\\u6D4B\\u8BD5\\u7528\\u4F8B2:\\n\\u8F93\\u5165\\uFF1A1 2\\n\\u8F93\\u51FA\\uFF1A3\\n\\n\\u6D4B\\u8BD5\\u7528\\u4F8B3:\\n\\u8F93\\u5165\\uFF1A-5 3\\n\\u8F93\\u51FA\\uFF1A-2\"),children:\"\\uD83D\\uDCCB \\u590D\\u5236\\u683C\\u5F0F\"})]})]})]})]})]})})]});};export default AIProblemGenerationPage;","map":{"version":3,"names":["React","useState","aiGenerateProblem","aiPreviewProblem","aiValidateAndCreateProblem","getProblems","WhaleIcon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AIProblemGenerationPage","step","setStep","loading","setLoading","error","setError","requirements","setRequirements","generatedProblem","setGeneratedProblem","editedProblem","setEditedProblem","validationResult","setValidationResult","debugInfo","setDebugInfo","testCases","setTestCases","input","output","showFormatModal","setShowFormatModal","activeFormatTab","setActiveFormatTab","isClosingModal","setIsClosingModal","parseGeneratedTestCases","testCasesText","expectedOutputText","console","log","parsed","JSON","parse","Array","isArray","map","tc","e","structuredResult","parseStructuredFormat","length","lines","split","filter","line","trim","smartResult","smartLineSplit","inputContent","outputContent","includes","parts","replace","midPoint","Math","ceil","slice","join","_needsManualReview","result","newFormatPattern","match","exec","index","parseInt","push","concat","inputPattern","outputPattern","inputs","outputs","Object","keys","maxIndex","max","k","i","currentInput","currentOutput","inInputSection","testCaseIndex","hasInputOutputPattern","some","toLowerCase","splitByContentFeatures","isInputOutputBoundary","splitPoint","findOptimalSplitPoint","inputLines","outputLines","splitIntoMultipleTestCases","hasContentBefore","hasContentAfter","prevLine","currentLine","test","closeFormatModal","setTimeout","copyToClipboard","text","navigator","clipboard","writeText","alert","err","textArea","document","createElement","value","body","appendChild","select","execCommand","removeChild","inputNumbers","outputNumbers","currentIndex","allLines","lineLower","nextLines","l","nextLine","handleGenerate","token","localStorage","getItem","user","substring","username","success","problem","_objectSpread","parsedCases","test_cases","expected_output","_error$response","_error$response2","_error$response3","_error$response3$data","response","data","errorMessage","status","mockProblem","title","description","difficulty","time_limit","memory_limit","ai_generated","original_requirements","generated_at","Date","toISOString","message","handlePreview","updatedProblem","_error$response4","_error$response4$data","handleCreateProblem","forceCreate","arguments","undefined","testCasesJson","stringify","problemData","force_create","problemsData","setItem","window","dispatchEvent","CustomEvent","detail","parent","postMessage","type","warn","validation_result","_error$response5","errorData","handleInputChange","field","prev","handleRestart","addTestCase","removeTestCase","_","updateTestCase","newTestCases","className","children","size","style","background","padding","margin","borderRadius","fontSize","onChange","target","placeholder","rows","marginLeft","onClick","disabled","idx","testCase","stopPropagation"],"sources":["/Volumes/坞城/OJ_1/frontend/src/pages/AIProblemGenerationPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { \n  aiGenerateProblem, \n  aiPreviewProblem, \n  aiValidateAndCreateProblem,\n  getProblems\n} from '../services/api';\nimport './AIProblemGenerationPage.css';\nimport WhaleIcon from '../components/WhaleIcon';\n\nconst AIProblemGenerationPage = () => {\n  const [step, setStep] = useState(1); // 1: 输入需求, 2: 预览修改, 3: 最终确认\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [requirements, setRequirements] = useState('');\n  const [generatedProblem, setGeneratedProblem] = useState(null);\n  const [editedProblem, setEditedProblem] = useState(null);\n  const [validationResult, setValidationResult] = useState('');\n\n  // 添加调试信息\n  const [debugInfo, setDebugInfo] = useState('');\n\n  // 测试用例管理\n  const [testCases, setTestCases] = useState([{ input: '', output: '' }]);\n  \n  // 格式模板弹窗状态\n  const [showFormatModal, setShowFormatModal] = useState(false);\n  const [activeFormatTab, setActiveFormatTab] = useState('testcase');\n  const [isClosingModal, setIsClosingModal] = useState(false);\n\n  // 解析测试用例（从AI生成的格式转换为结构化格式）\n  const parseGeneratedTestCases = (testCasesText, expectedOutputText) => {\n    if (!testCasesText || !expectedOutputText) return [{ input: '', output: '' }];\n    \n    // 添加调试日志\n    console.log('开始解析测试用例:');\n    console.log('testCasesText:', testCasesText);\n    console.log('expectedOutputText:', expectedOutputText);\n    \n    try {\n      // 尝试解析为JSON格式\n      const parsed = JSON.parse(testCasesText);\n      if (Array.isArray(parsed)) {\n        console.log('成功解析为JSON格式');\n        return parsed.map(tc => ({\n          input: tc.input || '',\n          output: tc.output || ''\n        }));\n      }\n    } catch (e) {\n      // 如果不是JSON，尝试解析文本格式\n      console.log('解析为JSON失败，尝试解析文本格式');\n    }\n\n    // 策略1：识别结构化格式（输入1：xxx 输出1：xxx）\n    console.log('尝试识别结构化格式');\n    const structuredResult = parseStructuredFormat(testCasesText);\n    if (structuredResult.length > 0) {\n      console.log('成功解析为结构化格式');\n      return structuredResult;\n    }\n\n    // 策略2：智能行分割（基于内容特征）\n    console.log('尝试智能行分割');\n    const lines = testCasesText.split('\\n').filter(line => line.trim());\n    if (lines.length > 0) {\n      const smartResult = smartLineSplit(lines);\n      if (smartResult.length > 0) {\n        console.log('使用智能行分割成功');\n        return smartResult;\n      }\n    }\n\n    // 策略3：回退到简化解析逻辑\n    console.log('使用简化解析逻辑');\n    \n    // 尝试从testCasesText中提取输入和输出\n    let inputContent = '';\n    let outputContent = '';\n    \n    // 如果AI生成了包含\"输入：\"和\"输出：\"的格式，尝试提取\n    if (testCasesText.includes('输入：') && testCasesText.includes('输出：')) {\n      const parts = testCasesText.split('输出：');\n      if (parts.length >= 2) {\n        inputContent = parts[0].replace('输入：', '').trim();\n        outputContent = parts[1].trim();\n      }\n    } else {\n      // 如果没有明确标记，尝试智能分割\n      const lines = testCasesText.split('\\n').filter(line => line.trim());\n      if (lines.length > 0) {\n        // 假设前一半是输入，后一半是输出\n        const midPoint = Math.ceil(lines.length / 2);\n        inputContent = lines.slice(0, midPoint).join('\\n');\n        outputContent = lines.slice(midPoint).join('\\n');\n      }\n    }\n    \n    // 如果从testCasesText没有提取到内容，尝试从expectedOutputText\n    if (!inputContent && !outputContent && expectedOutputText) {\n      outputContent = expectedOutputText.trim();\n    }\n    \n    console.log('提取的输入内容:', inputContent);\n    console.log('提取的输出内容:', outputContent);\n    \n    // 返回一个包含提取内容的测试用例，让教师手动调整\n    if (inputContent || outputContent) {\n      return [{\n        input: inputContent,\n        output: outputContent,\n        _needsManualReview: true // 标记需要手动检查\n      }];\n    }\n    \n    // 如果什么都没提取到，返回空的测试用例\n    return [{ input: '', output: '' }];\n  };\n\n  // 解析结构化格式的函数\n  const parseStructuredFormat = (testCasesText) => {\n    const result = [];\n    \n    // 策略1：匹配新格式：测试用例X: 输入：xxx 输出：xxx\n    const newFormatPattern = /测试用例(\\d+):\\s*\\n输入：\\s*([\\s\\S]*?)(?=\\n输出：|$)\\n输出：\\s*([\\s\\S]*?)(?=\\n测试用例\\d+:|$)/g;\n    \n    let match;\n    while ((match = newFormatPattern.exec(testCasesText)) !== null) {\n      const index = parseInt(match[1]);\n      const input = match[2].trim();\n      const output = match[3].trim();\n      \n      result.push({\n        input: input,\n        output: output,\n        _needsManualReview: false\n      });\n    }\n    \n    if (result.length > 0) {\n      console.log(`新格式解析到 ${result.length} 个测试用例`);\n      return result;\n    }\n    \n    // 策略2：匹配旧格式：输入1：[内容] 输出1：[内容] 输入2：[内容] 输出2：[内容] ...\n    const inputPattern = /输入(\\d+)[：:]\\s*([\\s\\S]*?)(?=输出\\1[：:]|输入\\d+[：:]|$)/g;\n    const outputPattern = /输出(\\d+)[：:]\\s*([\\s\\S]*?)(?=输入\\d+[：:]|输出\\d+[：:]|$)/g;\n    \n    const inputs = {};\n    const outputs = {};\n    \n    // 提取所有输入\n    while ((match = inputPattern.exec(testCasesText)) !== null) {\n      const index = parseInt(match[1]);\n      inputs[index] = match[2].trim();\n    }\n    \n    // 提取所有输出\n    while ((match = outputPattern.exec(testCasesText)) !== null) {\n      const index = parseInt(match[1]);\n      outputs[index] = match[2].trim();\n    }\n    \n    // 如果找到结构化格式，按索引匹配\n    if (Object.keys(inputs).length > 0 || Object.keys(outputs).length > 0) {\n      const maxIndex = Math.max(\n        ...Object.keys(inputs).map(k => parseInt(k)),\n        ...Object.keys(outputs).map(k => parseInt(k))\n      );\n      \n      for (let i = 1; i <= maxIndex; i++) {\n        result.push({\n          input: inputs[i] || '',\n          output: outputs[i] || '',\n          _needsManualReview: !inputs[i] || !outputs[i] // 如果缺少输入或输出，标记需要检查\n        });\n      }\n      \n      console.log(`旧格式解析到 ${result.length} 个测试用例`);\n      return result;\n    }\n    \n    return [];\n  };\n\n  // 智能行分割函数\n  const smartLineSplit = (lines) => {\n    const result = [];\n    let currentInput = [];\n    let currentOutput = [];\n    let inInputSection = true;\n    let testCaseIndex = 1;\n    \n    // 预处理：识别可能的输入输出模式\n    const hasInputOutputPattern = lines.some(line => \n      line.toLowerCase().includes('输入') || line.toLowerCase().includes('输出')\n    );\n    \n    // 如果没有明确的输入输出标记，尝试基于内容特征分割\n    if (!hasInputOutputPattern) {\n      return splitByContentFeatures(lines);\n    }\n    \n    for (let i = 0; i < lines.length; i++) {\n      const line = lines[i];\n      \n      // 检测输入输出分界点\n      if (isInputOutputBoundary(line, lines, i)) {\n        // 保存当前的测试用例\n        if (currentInput.length > 0 || currentOutput.length > 0) {\n          result.push({\n            input: currentInput.join('\\n'),\n            output: currentOutput.join('\\n'),\n            _needsManualReview: currentInput.length === 0 || currentOutput.length === 0\n          });\n          testCaseIndex++;\n        }\n        \n        // 重置当前测试用例\n        currentInput = [];\n        currentOutput = [];\n        inInputSection = !inInputSection;\n      }\n      \n      // 根据当前状态添加到输入或输出\n      if (inInputSection) {\n        currentInput.push(line);\n      } else {\n        currentOutput.push(line);\n      }\n    }\n    \n    // 添加最后一个测试用例\n    if (currentInput.length > 0 || currentOutput.length > 0) {\n      result.push({\n        input: currentInput.join('\\n'),\n        output: currentOutput.join('\\n'),\n        _needsManualReview: currentInput.length === 0 || currentOutput.length === 0\n      });\n    }\n    \n    console.log(`智能行分割得到 ${result.length} 个测试用例`);\n    return result;\n  };\n\n  // 基于内容特征的分割函数\n  const splitByContentFeatures = (lines) => {\n    const result = [];\n    \n    // 尝试找到输入输出的分界点\n    let splitPoint = findOptimalSplitPoint(lines);\n    \n    if (splitPoint > 0) {\n      const inputLines = lines.slice(0, splitPoint);\n      const outputLines = lines.slice(splitPoint);\n      \n      // 尝试进一步分割为多个测试用例\n      const testCases = splitIntoMultipleTestCases(inputLines, outputLines);\n      \n      if (testCases.length > 1) {\n        return testCases;\n      } else {\n        return [{\n          input: inputLines.join('\\n'),\n          output: outputLines.join('\\n'),\n          _needsManualReview: false\n        }];\n      }\n    }\n    \n    // 如果找不到分界点，使用简单的前后分割\n    const midPoint = Math.ceil(lines.length / 2);\n    return [{\n      input: lines.slice(0, midPoint).join('\\n'),\n      output: lines.slice(midPoint).join('\\n'),\n      _needsManualReview: true\n    }];\n  };\n\n  // 找到最优分割点\n  const findOptimalSplitPoint = (lines) => {\n    // 策略1：寻找明显的分隔符\n    for (let i = 0; i < lines.length; i++) {\n      const line = lines[i].trim();\n      if (line === '---' || line === '===' || line === '***' || line === '') {\n        // 检查前后是否有内容\n        const hasContentBefore = i > 0 && lines[i-1].trim() !== '';\n        const hasContentAfter = i < lines.length - 1 && lines[i+1].trim() !== '';\n        \n        if (hasContentBefore && hasContentAfter) {\n          return i;\n        }\n      }\n    }\n    \n    // 策略2：基于数字模式识别\n    for (let i = 1; i < lines.length; i++) {\n      const prevLine = lines[i-1].trim();\n      const currentLine = lines[i].trim();\n      \n      // 如果前一行是单个数字，当前行也是数字，可能是新测试用例\n      if (/^\\d+$/.test(prevLine) && /^\\d+/.test(currentLine)) {\n        return i;\n      }\n    }\n    \n    // 策略3：基于空行分隔\n    for (let i = 1; i < lines.length - 1; i++) {\n      if (lines[i].trim() === '' && lines[i-1].trim() !== '' && lines[i+1].trim() !== '') {\n        return i + 1;\n      }\n    }\n    \n    return -1;\n  };\n\n  // 关闭弹窗函数（带动画）\n  const closeFormatModal = () => {\n    setIsClosingModal(true);\n    setTimeout(() => {\n      setShowFormatModal(false);\n      setIsClosingModal(false);\n    }, 300); // 等待动画完成\n  };\n\n  // 复制到剪贴板函数\n  const copyToClipboard = async (text) => {\n    try {\n      await navigator.clipboard.writeText(text);\n      // 可以添加一个简单的提示\n      alert('格式已复制到剪贴板！');\n    } catch (err) {\n      // 降级方案\n      const textArea = document.createElement('textarea');\n      textArea.value = text;\n      document.body.appendChild(textArea);\n      textArea.select();\n      document.execCommand('copy');\n      document.body.removeChild(textArea);\n      alert('格式已复制到剪贴板！');\n    }\n  };\n\n  // 分割为多个测试用例\n  const splitIntoMultipleTestCases = (inputLines, outputLines) => {\n    const result = [];\n    \n    // 尝试识别测试用例的数量\n    const inputNumbers = inputLines.filter(line => /^\\d+$/.test(line.trim()));\n    const outputNumbers = outputLines.filter(line => /^\\d+$/.test(line.trim()));\n    \n    if (inputNumbers.length === outputNumbers.length && inputNumbers.length > 1) {\n      // 按数字分组\n      let currentInput = [];\n      let currentOutput = [];\n      let currentIndex = 0;\n      \n      for (let i = 0; i < inputLines.length; i++) {\n        const line = inputLines[i];\n        if (/^\\d+$/.test(line.trim())) {\n          // 保存前一个测试用例\n          if (currentInput.length > 0 || currentOutput.length > 0) {\n            result.push({\n              input: currentInput.join('\\n'),\n              output: currentOutput.join('\\n'),\n              _needsManualReview: false\n            });\n          }\n          \n          currentInput = [line];\n          currentOutput = [];\n          currentIndex++;\n        } else {\n          currentInput.push(line);\n        }\n      }\n      \n      // 添加最后一个测试用例\n      if (currentInput.length > 0) {\n        result.push({\n          input: currentInput.join('\\n'),\n          output: currentOutput.join('\\n'),\n          _needsManualReview: false\n        });\n      }\n      \n      return result;\n    }\n    \n    // 如果无法识别多个测试用例，返回单个\n    return [{\n      input: inputLines.join('\\n'),\n      output: outputLines.join('\\n'),\n      _needsManualReview: false\n    }];\n  };\n\n  // 检测输入输出分界点的函数\n  const isInputOutputBoundary = (line, allLines, currentIndex) => {\n    const lineLower = line.toLowerCase();\n    \n    // 检测明显的分隔符\n    if (lineLower.includes('---') || lineLower.includes('===') || lineLower.includes('***')) {\n      return true;\n    }\n    \n    // 检测数字编号（如 \"1.\" \"2.\" 等）\n    if (/^\\d+\\./.test(line.trim())) {\n      return true;\n    }\n    \n    // 检测\"输入X：\"或\"输出X：\"格式\n    if (/^(输入|输出)\\d+[：:]/.test(line.trim())) {\n      return true;\n    }\n    \n    // 检测空行后的新测试用例开始\n    if (currentIndex > 0 && allLines[currentIndex - 1].trim() === '') {\n      const nextLines = allLines.slice(currentIndex + 1, currentIndex + 3);\n      if (nextLines.some(l => l.toLowerCase().includes('输入') || l.toLowerCase().includes('输出'))) {\n        return true;\n      }\n    }\n    \n    // 检测连续空行（可能表示测试用例分隔）\n    if (currentIndex > 0 && currentIndex < allLines.length - 1) {\n      const prevLine = allLines[currentIndex - 1].trim();\n      const nextLine = allLines[currentIndex + 1].trim();\n      if (prevLine === '' && nextLine === '' && line.trim() === '') {\n        return true;\n      }\n    }\n    \n    return false;\n  };\n\n  // 步骤1: AI生成题目\n  const handleGenerate = async () => {\n    if (!requirements.trim()) {\n      setError('请输入生题需求');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError('');\n      \n      // 添加调试信息\n      const token = localStorage.getItem('token');\n      const user = localStorage.getItem('user');\n      setDebugInfo(`Token: ${token ? token.substring(0, 20) + '...' : 'No token'}, User: ${user ? JSON.parse(user).username : 'No user'}`);\n      \n      console.log('开始调用AI生题API...');\n      console.log('Token:', token);\n      console.log('Requirements:', requirements);\n      \n      const result = await aiGenerateProblem(requirements);\n      \n      console.log('API响应:', result);\n      \n      if (result.success) {\n        setGeneratedProblem(result.problem);\n        setEditedProblem({ ...result.problem }); // 复制一份用于编辑\n        \n        // 解析测试用例\n        const parsedCases = parseGeneratedTestCases(result.problem.test_cases, result.problem.expected_output);\n        setTestCases(parsedCases);\n        \n        setStep(2);\n      } else {\n        setError(result.error || 'AI生成失败');\n      }\n    } catch (error) {\n      console.error('AI生成错误详情:', error);\n      console.error('错误响应:', error.response);\n      console.error('错误数据:', error.response?.data);\n      \n      let errorMessage = '生成题目失败，请重试';\n      \n      if (error.response?.status === 401) {\n        errorMessage = '认证失败，使用测试模式...';\n        \n        // 使用模拟数据来测试前端功能\n        const mockProblem = {\n          title: '字符串反转（测试模式）',\n          description: '给定一个字符串，请将其反转后输出。\\n\\n输入格式：一行包含一个字符串\\n输出格式：输出反转后的字符串',\n          test_cases: '输入1：hello\\n输出1：olleh\\n\\n输入2：world\\n输出2：dlrow\\n\\n输入3：test\\n输出3：tset',\n          expected_output: 'olleh\\ndlrow\\ntset',\n          difficulty: 'easy',\n          time_limit: 1000,\n          memory_limit: 128,\n          ai_generated: true,\n          original_requirements: requirements,\n          generated_at: new Date().toISOString()\n        };\n        \n        setGeneratedProblem(mockProblem);\n        setEditedProblem({ ...mockProblem });\n        \n        // 解析测试用例\n        const parsedCases = parseGeneratedTestCases(mockProblem.test_cases, mockProblem.expected_output);\n        setTestCases(parsedCases);\n        \n        setStep(2);\n        setError(''); // 清除错误信息\n        return;\n      } else if (error.response?.data?.error) {\n        errorMessage = error.response.data.error;\n      } else if (error.message) {\n        errorMessage = error.message;\n      }\n      \n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 步骤2: 预览修改\n  const handlePreview = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      \n      // 将测试用例转换为字符串格式，保持向后兼容\n      const testCasesText = testCases.map(tc => \n        `输入：${tc.input}\\n输出：${tc.output}`\n      ).join('\\n\\n');\n      \n      const expectedOutputText = testCases.map(tc => tc.output).join('\\n');\n      \n      const updatedProblem = {\n        ...editedProblem,\n        test_cases: testCasesText,\n        expected_output: expectedOutputText\n      };\n      \n      setEditedProblem(updatedProblem);\n      \n      const result = await aiPreviewProblem(updatedProblem);\n      \n      if (result.success) {\n        setStep(3);\n      } else {\n        setError('预览失败');\n      }\n    } catch (error) {\n      setError(error.response?.data?.error || '预览失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 步骤3: 最终创建\n  const handleCreateProblem = async (forceCreate = false) => {\n    try {\n      setLoading(true);\n      setError('');\n      \n      // 将测试用例转换为JSON格式\n      const testCasesJson = JSON.stringify(testCases.map(tc => ({\n        input: tc.input || '',\n        output: tc.output || ''\n      })));\n      \n      const problemData = {\n        ...editedProblem,\n        test_cases: testCasesJson,\n        expected_output: testCases.map(tc => tc.output || '').join('\\n'), // 保持向后兼容\n        force_create: forceCreate\n      };\n      \n      const result = await aiValidateAndCreateProblem(problemData);\n      \n      if (result.success) {\n        alert('题目创建成功！');\n        \n        // 尝试刷新题目列表\n        try {\n          const problemsData = await getProblems(1, 50);\n          console.log('题目创建成功，新题目数据:', problemsData);\n          \n          // 尝试通过多种方式通知父组件刷新\n          // 方法1: localStorage标记\n          localStorage.setItem('refreshProblems', 'true');\n          localStorage.setItem('lastProblemCreated', new Date().toISOString());\n          \n          // 方法2: 自定义事件\n          window.dispatchEvent(new CustomEvent('problemCreated', { \n            detail: { problemData: problemsData } \n          }));\n          \n          // 方法3: 如果当前页面在iframe中，通知父页面\n          if (window.parent && window.parent !== window) {\n            try {\n              window.parent.postMessage({ \n                type: 'PROBLEM_CREATED', \n                data: problemsData \n              }, '*');\n            } catch (e) {\n              console.log('无法通知父页面:', e);\n            }\n          }\n          \n        } catch (error) {\n          console.warn('无法刷新题目列表:', error);\n        }\n        \n        // 重置状态\n        setStep(1);\n        setRequirements('');\n        setGeneratedProblem(null);\n        setEditedProblem(null);\n        setValidationResult('');\n        setTestCases([{ input: '', output: '' }]);\n      } else {\n        setValidationResult(result.validation_result);\n        setError(result.message);\n      }\n    } catch (error) {\n      const errorData = error.response?.data;\n      if (errorData?.validation_result) {\n        setValidationResult(errorData.validation_result);\n      }\n      setError(errorData?.message || '创建题目失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 处理输入变化\n  const handleInputChange = (field, value) => {\n    setEditedProblem(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  // 重新开始\n  const handleRestart = () => {\n    setStep(1);\n    setRequirements('');\n    setGeneratedProblem(null);\n    setEditedProblem(null);\n    setValidationResult('');\n    setError('');\n    setTestCases([{ input: '', output: '' }]);\n  };\n\n  // 测试用例管理\n  const addTestCase = () => {\n    setTestCases([...testCases, { input: '', output: '' }]);\n  };\n\n  const removeTestCase = (index) => {\n    setTestCases(testCases.filter((_, i) => i !== index));\n  };\n\n  const updateTestCase = (index, field, value) => {\n    const newTestCases = [...testCases];\n    newTestCases[index][field] = value;\n    setTestCases(newTestCases);\n  };\n\n  return (\n    <div className=\"ai-problem-generation\">\n      <div className=\"page-header\">\n        <h1><WhaleIcon size={32} /> AI智能生题</h1>\n        <div className=\"step-indicator\">\n          <div className={`step ${step >= 1 ? 'active' : ''}`}>1. 输入需求</div>\n          <div className={`step ${step >= 2 ? 'active' : ''}`}>2. 预览修改</div>\n          <div className={`step ${step >= 3 ? 'active' : ''}`}>3. 最终确认</div>\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"error-message\">\n          <span className=\"error-icon\">⚠️</span>\n          {error}\n        </div>\n      )}\n\n      {/* 调试信息 */}\n      {debugInfo && (\n        <div className=\"debug-info\" style={{background: '#f0f8ff', padding: '10px', margin: '10px 0', borderRadius: '5px', fontSize: '12px'}}>\n          <strong>调试信息:</strong> {debugInfo}\n        </div>\n      )}\n\n      {/* 步骤1: 输入需求 */}\n      {step === 1 && (\n        <div className=\"step-content\">\n          <h2>📝 描述您的题目需求</h2>\n          <div className=\"requirements-section\">\n            <textarea\n              value={requirements}\n              onChange={(e) => setRequirements(e.target.value)}\n              placeholder=\"请详细描述您想要生成的题目，例如：&#10;&#10;生成一个关于数组排序的简单题目，适合初学者：&#10;- 难度：简单&#10;- 包含3-5个测试用例&#10;- 要求使用冒泡排序或选择排序&#10;&#10;💡 为了提高AI生成质量，建议在描述中明确指定：&#10;• 测试用例数量（如：3-5个）&#10;• 输入输出格式要求（如：每行一个数字、空格分隔等）&#10;• 边界情况（如：空数组、单个元素、大量数据等）&#10;• 特殊要求（如：时间限制、内存限制等）&#10;&#10;AI会按照规范格式生成测试用例，系统会自动识别和分割，减少手动调整工作。\"\n              rows={8}\n              className=\"requirements-input\"\n            />\n            <div className=\"input-tips\">\n              <h4>💡 生题建议：</h4>\n              <ul>\n                <li>明确指定题目类型（如：数组、字符串、算法等）</li>\n                <li>说明难度等级（简单/中等/困难）</li>\n                <li>指定测试用例数量</li>\n                <li>描述特殊要求或限制条件</li>\n                <li><strong>工作流程：</strong></li>\n                <li style={{marginLeft: '20px'}}>• AI生成基本的输入输出样例</li>\n                <li style={{marginLeft: '20px'}}>• 教师在预览阶段手动调整测试用例</li>\n                <li style={{marginLeft: '20px'}}>• 支持多行输入和输出</li>\n                <li style={{marginLeft: '20px'}}>• 支持空输入（如排序题目）</li>\n              </ul>\n              \n              <div className=\"format-template\">\n                <h4>📋 格式模板参考：</h4>\n                <p>点击下方按钮查看详细的格式模板和测试用例格式要求</p>\n                <button \n                  type=\"button\" \n                  onClick={() => setShowFormatModal(true)}\n                  className=\"format-modal-btn\"\n                >\n                  📋 查看格式模板\n                </button>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"action-buttons\">\n            <button \n              onClick={handleGenerate}\n              disabled={loading || !requirements.trim()}\n              className=\"primary-btn\"\n            >\n              {loading ? '🔄 AI生成中...' : '🚀 开始生成'}\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* 步骤2: 预览修改 */}\n      {step === 2 && editedProblem && (\n        <div className=\"step-content\">\n          <h2>✏️ 预览和修改生成的题目</h2>\n          \n          <div className=\"problem-editor\">\n            <div className=\"editor-section\">\n              <label>题目名称：</label>\n              <input\n                type=\"text\"\n                value={editedProblem.title || ''}\n                onChange={(e) => handleInputChange('title', e.target.value)}\n                className=\"title-input\"\n              />\n            </div>\n\n            <div className=\"editor-section\">\n              <label>题目描述：</label>\n              <textarea\n                value={editedProblem.description || ''}\n                onChange={(e) => handleInputChange('description', e.target.value)}\n                rows={6}\n                className=\"description-input\"\n              />\n            </div>\n\n            <div className=\"editor-section\">\n              <label>测试用例管理：</label>\n              <div className=\"test-case-manager\">\n                <div className=\"test-case-header\">\n                  <span>测试用例列表</span>\n                  <button \n                    type=\"button\" \n                    onClick={addTestCase}\n                    className=\"add-test-case-btn\"\n                  >\n                    + 添加测试用例\n                  </button>\n                </div>\n                \n                {testCases.length === 0 ? (\n                  <div className=\"no-test-cases\">\n                    <p>暂无测试用例，请点击\"添加测试用例\"按钮添加</p>\n                  </div>\n                ) : (\n                  <>\n                    {/* 智能提示区域 */}\n                    {testCases.some(tc => tc._needsManualReview) && (\n                      <div className=\"parsing-warnings\">\n                        <h4>⚠️ 检测到以下问题，请检查：</h4>\n                        <ul>\n                          {testCases.map((tc, idx) => {\n                            if (tc._needsManualReview) {\n                              if (!tc.input && !tc.output) {\n                                return <li key={idx}>测试用例 {idx + 1} 输入和输出都为空，请补充</li>;\n                              } else if (!tc.input) {\n                                return <li key={idx}>测试用例 {idx + 1} 缺少输入数据</li>;\n                              } else if (!tc.output) {\n                                return <li key={idx}>测试用例 {idx + 1} 缺少期望输出</li>;\n                              } else if (tc.input.includes('输出') || tc.output.includes('输入')) {\n                                return <li key={idx}>测试用例 {idx + 1} 可能存在输入输出混淆，请检查</li>;\n                              }\n                            }\n                            return null;\n                          })}\n                        </ul>\n                      </div>\n                    )}\n                    \n                    <div className=\"test-cases-list\">\n                      {testCases.map((testCase, index) => (\n                        <div key={index} className={`test-case-item ${testCase._needsManualReview ? 'needs-review' : ''}`}>\n                          <div className=\"test-case-header-row\">\n                            <span className=\"test-case-number\">\n                              测试用例 {index + 1}\n                              {testCase._needsManualReview && <span className=\"review-badge\">⚠️ 需检查</span>}\n                            </span>\n                            <button\n                              type=\"button\"\n                              onClick={() => removeTestCase(index)}\n                              className=\"remove-test-case-btn\"\n                              title=\"删除此测试用例\"\n                            >\n                              ×\n                            </button>\n                          </div>\n                          <div className=\"test-case-content\">\n                            <div className=\"input-section\">\n                              <label>输入：</label>\n                              <textarea\n                                value={testCase.input}\n                                onChange={(e) => updateTestCase(index, 'input', e.target.value)}\n                                placeholder=\"输入数据（可以为空）\"\n                                rows={2}\n                                className=\"test-case-input\"\n                              />\n                            </div>\n                            <div className=\"output-section\">\n                              <label>期望输出：</label>\n                              <textarea\n                                value={testCase.output}\n                                onChange={(e) => updateTestCase(index, 'output', e.target.value)}\n                                placeholder=\"期望输出\"\n                                rows={2}\n                                className=\"test-case-output\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </>\n                )}\n              </div>\n            </div>\n\n            <div className=\"editor-section\">\n              <label>难度等级：</label>\n              <select\n                value={editedProblem.difficulty || 'easy'}\n                onChange={(e) => handleInputChange('difficulty', e.target.value)}\n                className=\"difficulty-select\"\n              >\n                <option value=\"easy\">简单</option>\n                <option value=\"medium\">中等</option>\n                <option value=\"hard\">困难</option>\n              </select>\n            </div>\n\n            <div className=\"editor-row\">\n              <div className=\"editor-section\">\n                <label>时间限制(ms)：</label>\n                <input\n                  type=\"number\"\n                  value={editedProblem.time_limit || 1000}\n                  onChange={(e) => handleInputChange('time_limit', parseInt(e.target.value))}\n                  className=\"time-limit-input\"\n                />\n              </div>\n\n              <div className=\"editor-section\">\n                <label>内存限制(MB)：</label>\n                <input\n                  type=\"number\"\n                  value={editedProblem.memory_limit || 128}\n                  onChange={(e) => handleInputChange('memory_limit', parseInt(e.target.value))}\n                  className=\"memory-limit-input\"\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"action-buttons\">\n            <button onClick={handleRestart} className=\"secondary-btn\">\n              🔄 重新开始\n            </button>\n            <button \n              onClick={handlePreview}\n              disabled={loading}\n              className=\"primary-btn\"\n            >\n              {loading ? '处理中...' : '👀 预览确认'}\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* 步骤3: 最终确认 */}\n      {step === 3 && editedProblem && (\n        <div className=\"step-content\">\n          <h2>🔍 AI验证和最终确认</h2>\n          \n          <div className=\"final-preview\">\n            <div className=\"preview-card\">\n              <h3>📋 题目预览</h3>\n              <div className=\"preview-content\">\n                <div className=\"preview-item\">\n                  <strong>题目名称：</strong>\n                  <span>{editedProblem.title}</span>\n                </div>\n                <div className=\"preview-item\">\n                  <strong>难度等级：</strong>\n                  <span className={`difficulty-badge ${editedProblem.difficulty}`}>\n                    {editedProblem.difficulty === 'easy' ? '简单' : \n                     editedProblem.difficulty === 'medium' ? '中等' : '困难'}\n                  </span>\n                </div>\n                <div className=\"preview-item\">\n                  <strong>时间/内存限制：</strong>\n                  <span>{editedProblem.time_limit}ms / {editedProblem.memory_limit}MB</span>\n                </div>\n                <div className=\"preview-item\">\n                  <strong>题目描述：</strong>\n                  <pre className=\"description-preview\">{editedProblem.description}</pre>\n                </div>\n                <div className=\"preview-item\">\n                  <strong>测试用例：</strong>\n                  <div className=\"test-cases-preview\">\n                    {testCases.map((tc, index) => (\n                      <div key={index} className=\"preview-test-case\">\n                        <div className=\"preview-test-case-header\">\n                          <strong>测试用例 {index + 1}:</strong>\n                        </div>\n                        <div className=\"preview-test-case-content\">\n                          <div><strong>输入:</strong> {tc.input || '(无输入)'}</div>\n                          <div><strong>期望输出:</strong> {tc.output}</div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {validationResult && (\n              <div className=\"validation-result\">\n                <h3><WhaleIcon size={24} /> AI验证结果</h3>\n                <div className=\"validation-content\">\n                  <pre>{validationResult}</pre>\n                </div>\n              </div>\n            )}\n          </div>\n\n          <div className=\"action-buttons\">\n            <button onClick={() => setStep(2)} className=\"secondary-btn\">\n              ← 返回修改\n            </button>\n            <button onClick={handleRestart} className=\"secondary-btn\">\n              🔄 重新开始\n            </button>\n            <button \n              onClick={() => handleCreateProblem(false)}\n              disabled={loading}\n              className=\"primary-btn\"\n            >\n              {loading ? '创建中...' : '✅ 创建题目'}\n            </button>\n            {validationResult && !validationResult.includes('验证通过') && (\n              <button \n                onClick={() => handleCreateProblem(true)}\n                disabled={loading}\n                className=\"warning-btn\"\n              >\n                ⚠️ 强制创建\n              </button>\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* 格式模板弹窗 */}\n      {showFormatModal && (\n        <div className={`format-modal-overlay ${isClosingModal ? 'closing' : ''}`} onClick={closeFormatModal}>\n          <div className=\"format-modal\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"format-modal-header\">\n              <h3>📋 格式模板参考</h3>\n              <button \n                className=\"close-btn\"\n                onClick={closeFormatModal}\n              >\n                ×\n              </button>\n            </div>\n            \n            <div className=\"format-modal-content\">\n              <div className=\"format-tabs\">\n                <button \n                  className={`format-tab ${activeFormatTab === 'full' ? 'active' : ''}`}\n                  onClick={() => setActiveFormatTab('full')}\n                >\n                  完整模板\n                </button>\n                <button \n                  className={`format-tab ${activeFormatTab === 'testcase' ? 'active' : ''}`}\n                  onClick={() => setActiveFormatTab('testcase')}\n                >\n                  测试用例格式\n                </button>\n              </div>\n              \n              {activeFormatTab === 'full' && (\n                <div className=\"format-tab-content\">\n                  <h4>📝 完整题目生成模板</h4>\n                  <div className=\"template-examples\">\n                    <div className=\"template-example\">\n                      <h5>数组排序题目</h5>\n                      <pre>{`生成一个数组排序题目，要求：\n- 难度：简单\n- 测试用例：3-5个\n- 输入格式：第一行数字n，第二行n个整数\n- 输出格式：排序后的数组\n- 边界情况：包含空数组、单个元素、重复元素\n- 特殊要求：时间复杂度O(n²)`}</pre>\n                    </div>\n                    \n                    <div className=\"template-example\">\n                      <h5>字符串处理题目</h5>\n                      <pre>{`生成一个字符串反转题目，要求：\n- 难度：简单  \n- 测试用例：4个\n- 输入格式：每行一个字符串\n- 输出格式：反转后的字符串\n- 边界情况：空字符串、单字符、长字符串\n- 特殊要求：支持中文字符`}</pre>\n                    </div>\n                  </div>\n                </div>\n              )}\n              \n              {activeFormatTab === 'testcase' && (\n                <div className=\"format-tab-content\">\n                  <h4>🧪 测试用例格式要求（可直接复制使用）</h4>\n                  <div className=\"testcase-format\">\n                    <div className=\"format-section\">\n                      <h5>基础格式</h5>\n                      <pre>{`测试用例1:\n输入：[]\n输出：[]\n\n测试用例2:\n输入：1\n42\n输出：42\n\n测试用例3:\n输入：3\n3 1 2\n输出：1 2 3`}</pre>\n                      <button \n                        className=\"copy-btn\"\n                        onClick={() => copyToClipboard(`测试用例1:\n输入：[]\n输出：[]\n\n测试用例2:\n输入：1\n42\n输出：42\n\n测试用例3:\n输入：3\n3 1 2\n输出：1 2 3`)}\n                      >\n                        📋 复制格式\n                      </button>\n                    </div>\n                    \n                    <div className=\"format-section\">\n                      <h5>字符串格式</h5>\n                      <pre>{`测试用例1:\n输入：\n输出：\n\n测试用例2:\n输入：a\n输出：a\n\n测试用例3:\n输入：hello\n输出：olleh`}</pre>\n                      <button \n                        className=\"copy-btn\"\n                        onClick={() => copyToClipboard(`测试用例1:\n输入：\n输出：\n\n测试用例2:\n输入：a\n输出：a\n\n测试用例3:\n输入：hello\n输出：olleh`)}\n                      >\n                        📋 复制格式\n                      </button>\n                    </div>\n                    \n                    <div className=\"format-section\">\n                      <h5>数学计算格式</h5>\n                      <pre>{`测试用例1:\n输入：0 0\n输出：0\n\n测试用例2:\n输入：1 2\n输出：3\n\n测试用例3:\n输入：-5 3\n输出：-2`}</pre>\n                      <button \n                        className=\"copy-btn\"\n                        onClick={() => copyToClipboard(`测试用例1:\n输入：0 0\n输出：0\n\n测试用例2:\n输入：1 2\n输出：3\n\n测试用例3:\n输入：-5 3\n输出：-2`)}\n                      >\n                        📋 复制格式\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AIProblemGenerationPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _objectSpread from\"/Volumes/\\u575E\\u57CE/OJ_1/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{getUsers,getSchools,getMajors,getClasses,batchImportStudents,getProblems,createProblem,updateProblem,deleteProblem,updateUser,deleteUser,registerStudent,getTeacherCourses,getCourseAssignments,createAssignment,updateAssignment,deleteAssignment,getCourseStudents,addStudentToCourse,removeStudentFromCourse}from'../services/api';import'./TeacherDashboardPage.css';import AIProblemGenerationPage from'./AIProblemGenerationPage';import{mockCourses,mockAssignments,formatDate}from'../testData/courses';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const TeacherDashboardPage=()=>{const[activeTab,setActiveTab]=useState('students');const[activeSubTab,setActiveSubTab]=useState('list');// 子标签页\nconst[users,setUsers]=useState([]);const[problems,setProblems]=useState([]);const[schools,setSchools]=useState([]);const[majors,setMajors]=useState([]);const[classes,setClasses]=useState([]);const[loading,setLoading]=useState(false);const[error,setError]=useState('');const[success,setSuccess]=useState('');// 批量导入相关状态\nconst[importData,setImportData]=useState('');const[selectedSchool,setSelectedSchool]=useState('');const[selectedMajor,setSelectedMajor]=useState('');const[selectedClass,setSelectedClass]=useState('');// 手动创建题目相关状态\nconst[problemForm,setProblemForm]=useState({title:'',description:'',type:'programming',// 题目类型：programming(编程题), choice(选择题), judge(判断题), short_answer(简答题)\ntest_cases:'',expected_output:'',difficulty:'easy',time_limit:1000,memory_limit:128,// 选择题相关字段\noptions:[],// 选项数组\ncorrect_answers:[],// 正确答案数组（支持多选）\nis_multiple_choice:false,// 是否多选\n// 简答题相关字段\nanswer:''// 简答题答案\n});// 编辑题目状态\nconst[editingProblem,setEditingProblem]=useState(null);const[isEditing,setIsEditing]=useState(false);// 添加学生相关状态（按新规则：学号、姓名、密码必填）\nconst[addStudentForm,setAddStudentForm]=useState({student_no:'',name:'',password:'',email:'',phone:'',school_id:'',major_id:'',class_id:''});// 学生编辑相关状态\nconst[editingUser,setEditingUser]=useState(null);const[editForm,setEditForm]=useState({email:'',phone:'',school_id:'',major_id:'',class_id:'',new_password:''});// 课程相关状态（只读，用于查看）\nconst[courses,setCourses]=useState([]);const[editingCourse,setEditingCourse]=useState(null);// 作业相关状态\nconst[assignments,setAssignments]=useState([]);const[assignmentForm,setAssignmentForm]=useState({name:'',description:'',requirements:'',due_date:'',course_id:'',problem_ids:[]});// 编辑作业状态\nconst[editingAssignment,setEditingAssignment]=useState(null);const[isEditingAssignment,setIsEditingAssignment]=useState(false);const[editingAssignmentContext,setEditingAssignmentContext]=useState('');// 记录编辑作业时的上下文\n// 添加学生到课程的状态\nconst[addingStudentContext,setAddingStudentContext]=useState('');// 记录添加学生时的上下文\n// 学生-教学班关联关系状态\nconst[studentClassRelations,setStudentClassRelations]=useState([]);// 存储学生与教学班的关联关系\nuseEffect(()=>{fetchInitialData();},[]);// eslint-disable-line react-hooks/exhaustive-deps\n// 从API加载学生-课程关联关系\nuseEffect(()=>{const loadCourseStudents=async()=>{if(editingCourse&&editingCourse.id){console.log('开始加载课程学生数据，课程ID:',editingCourse.id);try{const courseStudentsData=await getCourseStudents(editingCourse.id);console.log('从API获取的课程学生数据:',courseStudentsData);if(courseStudentsData&&courseStudentsData.length>0){const apiRelations=courseStudentsData.map(student=>({student_id:student.student_id,class_id:student.class_id,course_id:editingCourse.id,student_name:student.student_name,student_no:student.student_no,added_at:student.added_at||new Date().toISOString()}));setStudentClassRelations(apiRelations);console.log('成功加载课程学生数据:',apiRelations);}else{setStudentClassRelations([]);console.log('该课程暂无学生');}}catch(error){console.error('加载课程学生数据失败:',error);setStudentClassRelations([]);}}};loadCourseStudents();},[editingCourse]);// eslint-disable-line react-hooks/exhaustive-deps\nconst fetchInitialData=async()=>{try{setLoading(true);setError('');setSuccess('');const[schoolsData,usersData,problemsData]=await Promise.all([getSchools(),getUsers(1,50,'student'),getProblems(1,50)]);setSchools(schoolsData);setUsers(usersData.users);setProblems(problemsData.problems);// 调试信息：打印题目数据\nconsole.log('从API获取的题目数据:',problemsData.problems);if(problemsData.problems&&problemsData.problems.length>0){problemsData.problems.forEach((problem,index)=>{console.log(\"\\u9898\\u76EE \".concat(index+1,\":\"),{id:problem.id,title:problem.title,type:problem.type,difficulty:problem.difficulty});});}// 获取课程和作业数据（使用测试数据）\ntry{const[coursesData,assignmentsData]=await Promise.all([getTeacherCourses(),getCourseAssignments()]);setCourses(coursesData.courses||mockCourses);setAssignments(assignmentsData.assignments||mockAssignments);}catch(error){console.warn('获取课程或作业数据失败，使用测试数据:',error);setCourses(mockCourses);setAssignments(mockAssignments);}// 学生-课程关联关系数据将在进入课程详情页时从API加载\n}catch(error){var _error$response,_error$response$data;setError((error===null||error===void 0?void 0:(_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||'获取数据失败');console.error('Error fetching data:',error);}finally{setLoading(false);}};const handleSchoolChange=async schoolId=>{setSelectedSchool(schoolId);setSelectedMajor('');setSelectedClass('');if(schoolId){try{const majorsData=await getMajors(schoolId);setMajors(majorsData);}catch(error){console.error('Error fetching majors:',error);}}else{setMajors([]);}};const handleMajorChange=async majorId=>{setSelectedMajor(majorId);setSelectedClass('');if(majorId){try{const classesData=await getClasses(majorId);setClasses(classesData);}catch(error){console.error('Error fetching classes:',error);}}else{setClasses([]);}};const handleBatchImport=async()=>{if(!importData.trim()){setError('请输入要导入的学生数据');setSuccess('');return;}if(!selectedSchool||!selectedMajor||!selectedClass){setError('请选择学校、专业和班级');setSuccess('');return;}// 解析CSV数据为学生对象数组\nconst lines=importData.split(/\\r?\\n/).map(l=>l.trim()).filter(l=>l&&!/^\\s*#/.test(l));const students=[];for(const line of lines){const parts=line.split(',').map(s=>s.trim());if(parts.length<3)continue;// 至少: 学号,姓名,密码\nconst[studentNo,name,password,email,phone]=parts;students.push({username:studentNo,name,password,email:email||undefined,phone:phone||undefined,school_id:selectedSchool,major_id:selectedMajor,class_id:selectedClass,role:'student'});}if(students.length===0){setError('没有有效的学生数据行。请按 CSV: 学号,姓名,密码[,邮箱][,手机号]');setSuccess('');return;}try{var _resp$success_count,_resp$failed_count;setLoading(true);setError('');setSuccess('');const resp=await batchImportStudents({students});const msg=(resp===null||resp===void 0?void 0:resp.message)||\"\\u6279\\u91CF\\u5BFC\\u5165\\u5B8C\\u6210: \\u6210\\u529F \".concat((_resp$success_count=resp===null||resp===void 0?void 0:resp.success_count)!==null&&_resp$success_count!==void 0?_resp$success_count:students.length,\" \\u4E2A, \\u5931\\u8D25 \").concat((_resp$failed_count=resp===null||resp===void 0?void 0:resp.failed_count)!==null&&_resp$failed_count!==void 0?_resp$failed_count:0,\" \\u4E2A\");setSuccess(msg);if(resp!==null&&resp!==void 0&&resp.errors&&resp.errors.length>0){const preview=resp.errors.slice(0,5).join('；');setError(\"\\u90E8\\u5206\\u5BFC\\u5165\\u5931\\u8D25\\uFF1A\".concat(preview).concat(resp.errors.length>5?' 等':''));}// 刷新用户列表\nconst usersData=await getUsers(1,50,'student');setUsers(usersData.users);setImportData('');}catch(error){var _error$response2,_error$response2$data;setError(((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.error)||'批量导入失败');}finally{setLoading(false);}};const handleCreateProblem=async()=>{try{setLoading(true);setError('');setSuccess('');// 添加调试信息\nconsole.log('提交的题目数据:',problemForm);console.log('题目类型:',problemForm.type);console.log('完整表单数据:',JSON.stringify(problemForm,null,2));if(isEditing&&editingProblem){console.log('更新题目，ID:',editingProblem.id);await updateProblem(editingProblem.id,problemForm);setSuccess('题目更新成功！');}else{console.log('创建新题目');await createProblem(problemForm);setSuccess('题目创建成功！');}// 重置表单\nsetProblemForm({title:'',description:'',type:'programming',test_cases:'',expected_output:'',difficulty:'easy',time_limit:1000,memory_limit:128,options:[],correct_answers:[],is_multiple_choice:false,answer:''});setIsEditing(false);setEditingProblem(null);// 刷新题目列表\nconst problemsData=await getProblems(1,50);setProblems(problemsData.problems);// 切换到题目列表\nsetActiveSubTab('list');}catch(error){var _error$response3,_error$response3$data;console.error('题目操作失败:',error);console.error('错误响应:',error.response);setError(((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.error)||(isEditing?'更新题目失败':'创建题目失败'));}finally{setLoading(false);}};const handleEditProblem=problem=>{setEditingProblem(problem);setProblemForm({title:problem.title,description:problem.description,type:problem.type||'programming',test_cases:problem.test_cases||'',expected_output:problem.expected_output||'',difficulty:problem.difficulty,time_limit:problem.time_limit||1000,memory_limit:problem.memory_limit||128,options:problem.type==='judge'?[{id:'judge_correct',text:'正确',is_correct:false},{id:'judge_incorrect',text:'错误',is_correct:false}]:problem.options||[],correct_answers:problem.correct_answers||[],is_multiple_choice:problem.is_multiple_choice||false,answer:problem.answer||''});// 如果是判断题，需要根据原有的正确答案设置选项状态\nif(problem.type==='judge'&&problem.correct_answers&&problem.correct_answers.length>0){setProblemForm(prev=>_objectSpread(_objectSpread({},prev),{},{options:[{id:'judge_correct',text:'正确',is_correct:problem.correct_answers.includes('正确')},{id:'judge_incorrect',text:'错误',is_correct:problem.correct_answers.includes('错误')}]}));}setIsEditing(true);setActiveSubTab('create');};const handleDeleteProblem=async problemId=>{if(!window.confirm('确定要删除这个题目吗？此操作不可恢复。')){return;}try{setLoading(true);setError('');setSuccess('');await deleteProblem(problemId);setSuccess('题目删除成功！');// 刷新题目列表\nconst problemsData=await getProblems(1,50);setProblems(problemsData.problems);}catch(error){var _error$response4,_error$response4$data;setError(((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.error)||'删除题目失败');}finally{setLoading(false);}};// 根据题目特征推断题目类型\nconst inferProblemType=problem=>{console.log('开始推断题目类型，题目数据:',problem);// 检查所有可能的选项字段\nconst options=problem.options||problem.choices||problem.alternatives||problem.option_list||[];console.log('检查到的选项:',options);// 如果有选项，判断是选择题还是判断题\nif(Array.isArray(options)&&options.length>0){console.log('发现选项，数量:',options.length);// 检查是否是判断题（只有两个选项：正确、错误）\nif(options.length===2){const optionTexts=options.map(opt=>{const text=opt.text||opt.option_text||opt.content||opt.label||'';console.log('选项文本:',text);return text;});if(optionTexts.includes('正确')&&optionTexts.includes('错误')){console.log('推断为判断题');return'judge';}}console.log('推断为选择题');return'choice';}// 检查所有可能的答案字段\nconst answer=problem.answer||problem.solution||problem.correct_answer||problem.answer_text||'';console.log('检查到的答案:',answer);if(answer&&answer.trim()){console.log('推断为简答题');return'short_answer';}// 检查编程题相关字段\nconst testCases=problem.test_cases||problem.test_cases_text||problem.test_input||'';const expectedOutput=problem.expected_output||problem.expected_result||problem.expected_answer||'';console.log('检查到的测试用例:',testCases);console.log('检查到的期望输出:',expectedOutput);if(testCases&&expectedOutput){console.log('推断为编程题');return'programming';}// 如果都无法推断，默认返回编程题\nconsole.log('无法推断类型，默认返回编程题');return'programming';};const handleCancelEdit=()=>{setIsEditing(false);setEditingProblem(null);setProblemForm({title:'',description:'',type:'programming',test_cases:'',expected_output:'',difficulty:'easy',time_limit:1000,memory_limit:128,options:[],correct_answers:[],is_multiple_choice:false,answer:''});setActiveSubTab('list');};// 课程相关处理函数（只读功能）\nconst handleViewCourseDetail=courseId=>{const course=courses.find(c=>c.id===courseId);if(course){setActiveTab('courses');setActiveSubTab('detail');setEditingCourse(course);}};// 作业相关处理函数\nconst handleCreateAssignment=async()=>{try{setLoading(true);setError('');setSuccess('');// 如果在课程详情页面创建作业，自动设置课程ID\nconst assignmentData=_objectSpread({},assignmentForm);if(activeSubTab==='create-assignment'&&editingCourse){assignmentData.course_id=editingCourse.id;}if(isEditingAssignment&&editingAssignment){await updateAssignment(editingAssignment.id,assignmentData);setSuccess('作业更新成功！');}else{await createAssignment(assignmentData);setSuccess('作业布置成功！');}// 重置表单\nsetAssignmentForm({name:'',description:'',requirements:'',due_date:'',course_id:'',problem_ids:[]});setIsEditingAssignment(false);setEditingAssignment(null);// 刷新作业列表\nconst assignmentsData=await getCourseAssignments();setAssignments(assignmentsData.assignments||[]);// 如果在课程详情页面，返回到课程详情；否则返回到课程列表\nif(activeSubTab==='create-assignment'){setActiveSubTab('detail');}else{setActiveSubTab('list');}}catch(error){var _error$response5,_error$response5$data;setError(((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.error)||(isEditingAssignment?'更新作业失败':'布置作业失败'));}finally{setLoading(false);}};const handleEditAssignment=assignment=>{setEditingAssignment(assignment);setAssignmentForm({name:assignment.name,description:assignment.description||'',requirements:assignment.requirements||'',due_date:assignment.due_date||'',course_id:assignment.course_id||'',problem_ids:assignment.problem_ids||[]});setIsEditingAssignment(true);// 记录编辑作业时的上下文\nif(activeSubTab==='detail'&&editingCourse){setEditingAssignmentContext('course-detail');}else{setEditingAssignmentContext('course-list');}// 切换到作业创建模式\nsetActiveSubTab('create-assignment');};const handleDeleteAssignment=async assignmentId=>{if(!window.confirm('确定要删除该作业吗？此操作不可恢复。'))return;try{setLoading(true);setError('');setSuccess('');await deleteAssignment(assignmentId);setSuccess('作业已删除');// 刷新作业列表\nconst assignmentsData=await getCourseAssignments();setAssignments(assignmentsData.assignments||[]);}catch(error){var _error$response6,_error$response6$data;setError(((_error$response6=error.response)===null||_error$response6===void 0?void 0:(_error$response6$data=_error$response6.data)===null||_error$response6$data===void 0?void 0:_error$response6$data.error)||'删除作业失败');}finally{setLoading(false);}};// 学生-课程关联关系处理函数\nconst handleAddStudentToCourse=async()=>{if(!editingCourse)return;try{setLoading(true);setError('');setSuccess('');// 查找学生是否已存在\nconst existingStudent=users.find(user=>user.username===addStudentForm.student_no&&user.role==='student');if(!existingStudent){setError('学生不存在，请先创建学生账号');return;}// 使用API添加学生到课程\ntry{await addStudentToCourse(editingCourse.id,{student_id:existingStudent.id,class_id:editingCourse.class_id});setSuccess('学生已成功添加到课程！');// 重新加载课程学生数据\nconst courseStudentsData=await getCourseStudents(editingCourse.id);if(courseStudentsData&&courseStudentsData.length>0){const apiRelations=courseStudentsData.map(student=>({student_id:student.student_id,class_id:student.class_id,course_id:editingCourse.id,student_name:student.student_name,student_no:student.student_no,added_at:student.added_at||new Date().toISOString()}));setStudentClassRelations(apiRelations);}}catch(apiError){var _apiError$response,_apiError$response$da;console.error('添加学生到课程失败:',apiError);setError(((_apiError$response=apiError.response)===null||_apiError$response===void 0?void 0:(_apiError$response$da=_apiError$response.data)===null||_apiError$response$da===void 0?void 0:_apiError$response$da.error)||'添加学生失败');return;}// 重置表单\nsetAddStudentForm({student_no:'',name:'',password:'',email:'',phone:'',school_id:'',major_id:'',class_id:''});// 返回到课程详情页\nsetActiveSubTab('detail');}catch(error){var _error$response7,_error$response7$data;setError(((_error$response7=error.response)===null||_error$response7===void 0?void 0:(_error$response7$data=_error$response7.data)===null||_error$response7$data===void 0?void 0:_error$response7$data.error)||'添加学生失败');}finally{setLoading(false);}};const handleRemoveStudentFromCourse=async relationId=>{if(!window.confirm('确定要从该课程中移除该学生吗？'))return;try{// 解析relationId获取学生ID和课程ID\nconst[studentId]=relationId.split('_');// 使用API从课程中移除学生\ntry{await removeStudentFromCourse(editingCourse.id,studentId);setSuccess('学生已从课程中移除');// 重新加载课程学生数据\nconst courseStudentsData=await getCourseStudents(editingCourse.id);if(courseStudentsData&&courseStudentsData.length>0){const apiRelations=courseStudentsData.map(student=>({student_id:student.student_id,class_id:student.class_id,course_id:editingCourse.id,student_name:student.student_name,student_no:student.student_no,added_at:student.added_at||new Date().toISOString()}));setStudentClassRelations(apiRelations);}else{setStudentClassRelations([]);}}catch(apiError){var _apiError$response2,_apiError$response2$d;console.error('从课程中移除学生失败:',apiError);setError(((_apiError$response2=apiError.response)===null||_apiError$response2===void 0?void 0:(_apiError$response2$d=_apiError$response2.data)===null||_apiError$response2$d===void 0?void 0:_apiError$response2$d.error)||'移除学生失败');return;}}catch(error){setError('移除学生失败');}};// 学生管理标签页渲染函数\nconst renderStudentsTab=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"tab-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sub-tabs\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"sub-tab-btn \".concat(activeSubTab==='list'?'active':''),onClick:()=>setActiveSubTab('list'),children:\"\\u5B66\\u751F\\u5217\\u8868\"}),/*#__PURE__*/_jsx(\"button\",{className:\"sub-tab-btn \".concat(activeSubTab==='add'?'active':''),onClick:()=>setActiveSubTab('add'),children:\"\\u6DFB\\u52A0\\u5B66\\u751F\"}),/*#__PURE__*/_jsx(\"button\",{className:\"sub-tab-btn \".concat(activeSubTab==='import'?'active':''),onClick:()=>setActiveSubTab('import'),children:\"\\u6279\\u91CF\\u5BFC\\u5165\"})]}),activeSubTab==='list'&&/*#__PURE__*/_jsxs(\"div\",{className:\"section-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u5B66\\u751F\\u5217\\u8868\"}),/*#__PURE__*/_jsx(\"button\",{className:\"add-btn\",onClick:()=>setActiveSubTab('add'),children:\"\\u6DFB\\u52A0\\u5B66\\u751F\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"students-table\",children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u5B66\\u53F7\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u59D3\\u540D\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u90AE\\u7BB1\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u624B\\u673A\\u53F7\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u5B66\\u6821\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u4E13\\u4E1A\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u73ED\\u7EA7\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u64CD\\u4F5C\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:users.map(user=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:user.id}),/*#__PURE__*/_jsx(\"td\",{children:user.username}),/*#__PURE__*/_jsx(\"td\",{children:user.name}),/*#__PURE__*/_jsx(\"td\",{children:user.email||'-'}),/*#__PURE__*/_jsx(\"td\",{children:user.phone||'-'}),/*#__PURE__*/_jsx(\"td\",{children:user.school_id||'-'}),/*#__PURE__*/_jsx(\"td\",{children:user.major_id||'-'}),/*#__PURE__*/_jsx(\"td\",{children:user.class_id||'-'}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"action-btn edit\",onClick:()=>handleEditStudentClick(user),children:\"\\u7F16\\u8F91\"}),/*#__PURE__*/_jsx(\"button\",{className:\"action-btn delete\",onClick:()=>handleDeleteStudent(user.id),children:\"\\u5220\\u9664\"})]})]},user.id))})]})})]}),activeSubTab==='add'&&/*#__PURE__*/_jsxs(\"div\",{className:\"section-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u2795 \\u6DFB\\u52A0\\u5B66\\u751F\"}),/*#__PURE__*/_jsx(\"button\",{className:\"secondary-btn\",onClick:()=>setActiveSubTab('list'),children:\"\\u2190 \\u8FD4\\u56DE\\u5B66\\u751F\\u5217\\u8868\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"add-student-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u5B66\\u53F7\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u5B66\\u53F7\",value:addStudentForm.student_no,onChange:e=>setAddStudentForm(prev=>_objectSpread(_objectSpread({},prev),{},{student_no:e.target.value}))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u59D3\\u540D\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u5B66\\u751F\\u59D3\\u540D\",value:addStudentForm.name,onChange:e=>setAddStudentForm(prev=>_objectSpread(_objectSpread({},prev),{},{name:e.target.value}))})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u5BC6\\u7801\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u521D\\u59CB\\u5BC6\\u7801\",value:addStudentForm.password,onChange:e=>setAddStudentForm(prev=>_objectSpread(_objectSpread({},prev),{},{password:e.target.value}))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u90AE\\u7BB1\\uFF1A\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u90AE\\u7BB1\\u5730\\u5740\",value:addStudentForm.email,onChange:e=>setAddStudentForm(prev=>_objectSpread(_objectSpread({},prev),{},{email:e.target.value}))})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u624B\\u673A\\u53F7\\uFF1A\"}),/*#__PURE__*/_jsx(\"input\",{type:\"tel\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u624B\\u673A\\u53F7\\u7801\",value:addStudentForm.phone,onChange:e=>setAddStudentForm(prev=>_objectSpread(_objectSpread({},prev),{},{phone:e.target.value}))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u5B66\\u6821\\uFF1A\"}),/*#__PURE__*/_jsxs(\"select\",{value:addStudentForm.school_id,onChange:e=>handleAddStudentSchoolChange(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\u8BF7\\u9009\\u62E9\\u5B66\\u6821\\uFF08\\u53EF\\u9009\\uFF09\"}),schools.map(school=>/*#__PURE__*/_jsx(\"option\",{value:school.id,children:school.name},school.id))]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u4E13\\u4E1A\\uFF1A\"}),/*#__PURE__*/_jsxs(\"select\",{value:addStudentForm.major_id,onChange:e=>handleAddStudentMajorChange(e.target.value),disabled:!addStudentForm.school_id,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\u8BF7\\u9009\\u62E9\\u4E13\\u4E1A\\uFF08\\u53EF\\u9009\\uFF09\"}),majors.map(major=>/*#__PURE__*/_jsx(\"option\",{value:major.id,children:major.name},major.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u73ED\\u7EA7\\uFF1A\"}),/*#__PURE__*/_jsxs(\"select\",{value:addStudentForm.class_id,onChange:e=>setAddStudentForm(prev=>_objectSpread(_objectSpread({},prev),{},{class_id:e.target.value})),disabled:!addStudentForm.major_id,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\u8BF7\\u9009\\u62E9\\u73ED\\u7EA7\\uFF08\\u53EF\\u9009\\uFF09\"}),classes.map(classItem=>/*#__PURE__*/_jsx(\"option\",{value:classItem.id,children:classItem.name},classItem.id))]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"submit-btn\",onClick:handleAddStudent,disabled:loading||!addStudentForm.student_no||!addStudentForm.name||!addStudentForm.password,children:loading?'创建中...':'创建学生账号'})})]})]}),activeSubTab==='import'&&/*#__PURE__*/_jsxs(\"div\",{className:\"section-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83D\\uDCE5 \\u6279\\u91CF\\u5BFC\\u5165\\u5B66\\u751F\"}),/*#__PURE__*/_jsx(\"button\",{className:\"secondary-btn\",onClick:()=>setActiveSubTab('list'),children:\"\\u2190 \\u8FD4\\u56DE\\u5B66\\u751F\\u5217\\u8868\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"import-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-help\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u5BFC\\u5165\\u8BF4\\u660E\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u8BF7\\u6309\\u4EE5\\u4E0B\\u683C\\u5F0F\\u51C6\\u5907CSV\\u6570\\u636E\\uFF1A\"}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"code\",{children:\"\\u5B66\\u53F7,\\u59D3\\u540D,\\u5BC6\\u7801[,\\u90AE\\u7BB1][,\\u624B\\u673A\\u53F7]\"})}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u4F8B\\u5982\\uFF1A\"}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"code\",{children:\"2021001,\\u5F20\\u4E09,123456,zhangsan@example.com,13800138000\"})}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"code\",{children:\"2021002,\\u674E\\u56DB,123456\"})}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u6CE8\\u610F\\uFF1A\\u5B66\\u53F7\\u3001\\u59D3\\u540D\\u3001\\u5BC6\\u7801\\u4E3A\\u5FC5\\u586B\\u9879\\uFF0C\\u90AE\\u7BB1\\u548C\\u624B\\u673A\\u53F7\\u4E3A\\u53EF\\u9009\\u9879\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u5B66\\u6821\\u3001\\u4E13\\u4E1A\\u3001\\u73ED\\u7EA7\\u4FE1\\u606F\\u53EF\\u5728\\u4E0B\\u65B9\\u9009\\u62E9\\uFF0C\\u5C06\\u5E94\\u7528\\u5230\\u6240\\u6709\\u5BFC\\u5165\\u7684\\u5B66\\u751F\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u5B66\\u6821\\uFF1A\"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedSchool,onChange:e=>handleSchoolChange(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\u8BF7\\u9009\\u62E9\\u5B66\\u6821\\uFF08\\u53EF\\u9009\\uFF09\"}),schools.map(school=>/*#__PURE__*/_jsx(\"option\",{value:school.id,children:school.name},school.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u4E13\\u4E1A\\uFF1A\"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedMajor,onChange:e=>handleMajorChange(e.target.value),disabled:!selectedSchool,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\u8BF7\\u9009\\u62E9\\u4E13\\u4E1A\\uFF08\\u53EF\\u9009\\uFF09\"}),majors.map(major=>/*#__PURE__*/_jsx(\"option\",{value:major.id,children:major.name},major.id))]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u73ED\\u7EA7\\uFF1A\"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedClass,onChange:e=>setSelectedClass(e.target.value),disabled:!selectedMajor,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\u8BF7\\u9009\\u62E9\\u73ED\\u7EA7\\uFF08\\u53EF\\u9009\\uFF09\"}),classes.map(classItem=>/*#__PURE__*/_jsx(\"option\",{value:classItem.id,children:classItem.name},classItem.id))]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u5B66\\u751F\\u6570\\u636E\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"\\u8BF7\\u7C98\\u8D34CSV\\u683C\\u5F0F\\u7684\\u5B66\\u751F\\u6570\\u636E\\uFF0C\\u6BCF\\u884C\\u4E00\\u4E2A\\u5B66\\u751F\",value:importData,onChange:e=>setImportData(e.target.value),rows:10})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"submit-btn\",onClick:handleBatchImport,disabled:loading||!importData.trim(),children:loading?'导入中...':'开始导入'})})]})]})]});// 题目管理标签页渲染函数\nconst renderProblemsTab=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"tab-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sub-tabs\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"sub-tab-btn \".concat(activeSubTab==='list'?'active':''),onClick:()=>setActiveSubTab('list'),children:\"\\u9898\\u76EE\\u5217\\u8868\"}),/*#__PURE__*/_jsx(\"button\",{className:\"sub-tab-btn \".concat(activeSubTab==='create'?'active':''),onClick:()=>setActiveSubTab('create'),children:\"\\u521B\\u5EFA\\u9898\\u76EE\"}),/*#__PURE__*/_jsx(\"button\",{className:\"sub-tab-btn \".concat(activeSubTab==='ai'?'active':''),onClick:()=>setActiveSubTab('ai'),children:\"AI\\u751F\\u9898\"})]}),activeSubTab==='list'&&/*#__PURE__*/_jsxs(\"div\",{className:\"section-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u9898\\u76EE\\u5217\\u8868\"}),/*#__PURE__*/_jsx(\"button\",{className:\"add-btn\",onClick:()=>setActiveSubTab('create'),children:\"\\u521B\\u5EFA\\u9898\\u76EE\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"problems-table\",children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u6807\\u9898\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u7C7B\\u578B\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u96BE\\u5EA6\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u65F6\\u95F4\\u9650\\u5236\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u5185\\u5B58\\u9650\\u5236\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u64CD\\u4F5C\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:problems.map(problem=>{// 调试信息：打印每个题目的类型\nconsole.log(\"=== \\u9898\\u76EE \".concat(problem.id,\" \\u8C03\\u8BD5\\u4FE1\\u606F ===\"));console.log('题目标题:',problem.title);console.log('原始类型:',problem.type);console.log('完整题目对象:',problem);console.log('所有字段名:',Object.keys(problem));console.log('选项字段:',problem.options);console.log('答案字段:',problem.answer);console.log('测试用例字段:',problem.test_cases);console.log('期望输出字段:',problem.expected_output);const inferredType=inferProblemType(problem);console.log('推断类型:',inferredType);console.log('=== 调试信息结束 ===');return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:problem.id}),/*#__PURE__*/_jsx(\"td\",{children:problem.title}),/*#__PURE__*/_jsxs(\"td\",{children:[(()=>{const inferredType=inferProblemType(problem);const displayType=inferredType==='choice'?'选择题':inferredType==='judge'?'判断题':inferredType==='short_answer'?'简答题':'编程题';return/*#__PURE__*/_jsx(\"span\",{className:\"type-badge \".concat(inferredType),children:displayType});})(),/*#__PURE__*/_jsxs(\"small\",{style:{display:'block',color:'#999',fontSize:'10px'},children:[\"\\u539F\\u59CB\\u7C7B\\u578B: \",problem.type||'undefined',\" | \\u63A8\\u65AD\\u7C7B\\u578B: \",inferProblemType(problem)]})]}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"span\",{className:\"difficulty-badge \".concat(problem.difficulty),children:problem.difficulty==='easy'?'简单':problem.difficulty==='medium'?'中等':'困难'})}),/*#__PURE__*/_jsxs(\"td\",{children:[problem.time_limit||'-',\"ms\"]}),/*#__PURE__*/_jsxs(\"td\",{children:[problem.memory_limit||'-',\"MB\"]}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"action-btn edit\",onClick:()=>handleEditProblem(problem),children:\"\\u7F16\\u8F91\"}),/*#__PURE__*/_jsx(\"button\",{className:\"action-btn delete\",onClick:()=>handleDeleteProblem(problem.id),children:\"\\u5220\\u9664\"})]})]},problem.id);})})]})})]}),activeSubTab==='create'&&/*#__PURE__*/_jsxs(\"div\",{className:\"section-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:isEditing?'✏️ 编辑题目':'➕ 创建题目'}),/*#__PURE__*/_jsx(\"button\",{className:\"secondary-btn\",onClick:handleCancelEdit,children:\"\\u2190 \\u8FD4\\u56DE\\u9898\\u76EE\\u5217\\u8868\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"problem-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u9898\\u76EE\\u6807\\u9898\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u9898\\u76EE\\u6807\\u9898\",value:problemForm.title,onChange:e=>setProblemForm(prev=>_objectSpread(_objectSpread({},prev),{},{title:e.target.value}))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u9898\\u76EE\\u7C7B\\u578B\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsxs(\"select\",{value:problemForm.type,onChange:e=>handleProblemTypeChange(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"programming\",children:\"\\u7F16\\u7A0B\\u9898\"}),/*#__PURE__*/_jsx(\"option\",{value:\"choice\",children:\"\\u9009\\u62E9\\u9898\"}),/*#__PURE__*/_jsx(\"option\",{value:\"judge\",children:\"\\u5224\\u65AD\\u9898\"}),/*#__PURE__*/_jsx(\"option\",{value:\"short_answer\",children:\"\\u7B80\\u7B54\\u9898\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u96BE\\u5EA6\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsxs(\"select\",{value:problemForm.difficulty,onChange:e=>setProblemForm(prev=>_objectSpread(_objectSpread({},prev),{},{difficulty:e.target.value})),children:[/*#__PURE__*/_jsx(\"option\",{value:\"easy\",children:\"\\u7B80\\u5355\"}),/*#__PURE__*/_jsx(\"option\",{value:\"medium\",children:\"\\u4E2D\\u7B49\"}),/*#__PURE__*/_jsx(\"option\",{value:\"hard\",children:\"\\u56F0\\u96BE\"})]})]}),problemForm.type==='choice'&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u9009\\u62E9\\u7C7B\\u578B\\uFF1A\"}),/*#__PURE__*/_jsx(\"div\",{className:\"checkbox-group\",children:/*#__PURE__*/_jsxs(\"label\",{className:\"checkbox-label\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:problemForm.is_multiple_choice,onChange:e=>setProblemForm(prev=>_objectSpread(_objectSpread({},prev),{},{is_multiple_choice:e.target.checked}))}),/*#__PURE__*/_jsx(\"span\",{children:\"\\u591A\\u9009\\u9898\"})]})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u9898\\u76EE\\u63CF\\u8FF0\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"\\u8BF7\\u8F93\\u5165\\u9898\\u76EE\\u63CF\\u8FF0\",value:problemForm.description,onChange:e=>setProblemForm(prev=>_objectSpread(_objectSpread({},prev),{},{description:e.target.value})),rows:6})]}),problemForm.type==='choice'&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u9009\\u9879\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"choice-options\",children:[problemForm.options.map((option,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"choice-option\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"option-header\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"option-label\",children:[\"\\u9009\\u9879 \",String.fromCharCode(65+index)]}),/*#__PURE__*/_jsxs(\"div\",{className:\"option-controls\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"checkbox-label\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:option.is_correct,onChange:()=>toggleChoiceOptionCorrect(option.id)}),/*#__PURE__*/_jsx(\"span\",{children:\"\\u6B63\\u786E\\u7B54\\u6848\"})]}),problemForm.options.length>2&&/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"remove-option-btn\",onClick:()=>removeChoiceOption(option.id),children:\"\\u5220\\u9664\"})]})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u9009\\u9879 \".concat(String.fromCharCode(65+index),\" \\u7684\\u5185\\u5BB9\"),value:option.text,onChange:e=>updateChoiceOption(option.id,'text',e.target.value),className:\"option-input\"})]},option.id)),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"add-option-btn\",onClick:addChoiceOption,children:\"+ \\u6DFB\\u52A0\\u9009\\u9879\"})]}),/*#__PURE__*/_jsx(\"small\",{children:\"\\u81F3\\u5C11\\u9700\\u89812\\u4E2A\\u9009\\u9879\\uFF0C\\u6700\\u591A\\u652F\\u630110\\u4E2A\\u9009\\u9879\"})]}),problemForm.type==='judge'&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u9009\\u9879\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"choice-options\",children:problemForm.options.map((option,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"choice-option\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"option-header\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"option-label\",children:[\"\\u9009\\u9879 \",index+1]}),/*#__PURE__*/_jsx(\"div\",{className:\"option-controls\",children:/*#__PURE__*/_jsxs(\"label\",{className:\"checkbox-label\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:option.is_correct,onChange:()=>toggleChoiceOptionCorrect(option.id)}),/*#__PURE__*/_jsx(\"span\",{children:\"\\u6B63\\u786E\\u7B54\\u6848\"})]})})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:option.text,onChange:e=>updateChoiceOption(option.id,'text',e.target.value),className:\"option-input\",readOnly:true}),/*#__PURE__*/_jsx(\"small\",{className:\"option-hint\",children:\"\\u5224\\u65AD\\u9898\\u9009\\u9879\\u4E0D\\u53EF\\u7F16\\u8F91\"})]},option.id))}),/*#__PURE__*/_jsx(\"small\",{children:\"\\u5224\\u65AD\\u9898\\u56FA\\u5B9A\\u4E3A\\\"\\u6B63\\u786E\\\"\\u548C\\\"\\u9519\\u8BEF\\\"\\u4E24\\u4E2A\\u9009\\u9879\\uFF0C\\u8BF7\\u9009\\u62E9\\u5176\\u4E2D\\u4E00\\u4E2A\\u4F5C\\u4E3A\\u6B63\\u786E\\u7B54\\u6848\"})]}),problemForm.type==='short_answer'&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u7B54\\u6848\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"\\u8BF7\\u8F93\\u5165\\u7B80\\u7B54\\u9898\\u7684\\u6807\\u51C6\\u7B54\\u6848\",value:problemForm.answer,onChange:e=>setProblemForm(prev=>_objectSpread(_objectSpread({},prev),{},{answer:e.target.value})),rows:6}),/*#__PURE__*/_jsx(\"small\",{children:\"\\u8BF7\\u63D0\\u4F9B\\u8BE6\\u7EC6\\u7684\\u7B54\\u6848\\u5185\\u5BB9\\uFF0C\\u4F9B\\u5B66\\u751F\\u53C2\\u8003\\u548C\\u6559\\u5E08\\u8BC4\\u5206\\u4F7F\\u7528\"})]}),problemForm.type==='programming'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u6D4B\\u8BD5\\u7528\\u4F8B\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"\\u8BF7\\u8F93\\u5165\\u6D4B\\u8BD5\\u7528\\u4F8B\\uFF0C\\u6BCF\\u884C\\u4E00\\u4E2A\",value:problemForm.test_cases,onChange:e=>setProblemForm(prev=>_objectSpread(_objectSpread({},prev),{},{test_cases:e.target.value})),rows:4})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u671F\\u671B\\u8F93\\u51FA\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"\\u8BF7\\u8F93\\u5165\\u671F\\u671B\\u8F93\\u51FA\\uFF0C\\u6BCF\\u884C\\u4E00\\u4E2A\",value:problemForm.expected_output,onChange:e=>setProblemForm(prev=>_objectSpread(_objectSpread({},prev),{},{expected_output:e.target.value})),rows:4})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u65F6\\u95F4\\u9650\\u5236\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u65F6\\u95F4\\u9650\\u5236\\uFF08\\u6BEB\\u79D2\\uFF09\",value:problemForm.time_limit,onChange:e=>setProblemForm(prev=>_objectSpread(_objectSpread({},prev),{},{time_limit:parseInt(e.target.value)||1000})),min:\"100\",max:\"10000\"}),/*#__PURE__*/_jsx(\"small\",{children:\"\\u5355\\u4F4D\\uFF1A\\u6BEB\\u79D2\\uFF0C\\u8303\\u56F4\\uFF1A100-10000\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u5185\\u5B58\\u9650\\u5236\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u5185\\u5B58\\u9650\\u5236\\uFF08MB\\uFF09\",value:problemForm.memory_limit,onChange:e=>setProblemForm(prev=>_objectSpread(_objectSpread({},prev),{},{memory_limit:parseInt(e.target.value)||128})),min:\"16\",max:\"512\"}),/*#__PURE__*/_jsx(\"small\",{children:\"\\u5355\\u4F4D\\uFF1AMB\\uFF0C\\u8303\\u56F4\\uFF1A16-512\"})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"submit-btn\",onClick:handleCreateProblem,disabled:loading||!problemForm.title||!problemForm.description||problemForm.type==='programming'&&(!problemForm.test_cases||!problemForm.expected_output)||problemForm.type==='choice'&&(problemForm.options.length<2||problemForm.options.some(option=>!option.text)||problemForm.correct_answers.length===0)||problemForm.type==='judge'&&problemForm.correct_answers.length!==1||problemForm.type==='short_answer'&&!problemForm.answer,children:loading?isEditing?'更新中...':'创建中...':isEditing?'更新题目':'创建题目'})})]})]}),activeSubTab==='ai'&&/*#__PURE__*/_jsx(AIProblemGenerationPage,{})]});// 课程查看标签页渲染函数（只读功能）\nconst renderCoursesTab=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"tab-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sub-tabs\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"sub-tab-btn \".concat(activeSubTab==='list'?'active':''),onClick:()=>{setActiveSubTab('list');// 如果当前在课程详情页，清除课程详情状态\nif(activeSubTab==='detail'){setEditingCourse(null);}// 清除添加学生上下文\nsetAddingStudentContext('');},children:\"\\u8BFE\\u7A0B\\u5217\\u8868\"}),/*#__PURE__*/_jsx(\"button\",{className:\"sub-tab-btn \".concat(activeSubTab==='detail'?'active':''),onClick:()=>setActiveSubTab('detail'),style:{display:editingCourse&&activeSubTab==='detail'?'inline-block':'none'},children:\"\\u8BFE\\u7A0B\\u8BE6\\u60C5\"}),/*#__PURE__*/_jsx(\"button\",{className:\"sub-tab-btn \".concat(activeSubTab==='add-student-to-course'?'active':''),onClick:()=>setActiveSubTab('add-student-to-course'),style:{display:editingCourse&&activeSubTab==='detail'?'inline-block':'none'},children:\"\\u6DFB\\u52A0\\u5B66\\u751F\"})]}),activeSubTab==='list'&&/*#__PURE__*/_jsxs(\"div\",{className:\"section-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u6211\\u7684\\u8BFE\\u7A0B\"}),/*#__PURE__*/_jsx(\"div\",{className:\"section-info\",children:/*#__PURE__*/_jsx(\"p\",{children:\"\\u60A8\\u53EF\\u4EE5\\u5728\\u8BFE\\u7A0B\\u8BE6\\u60C5\\u9875\\u4E2D\\u67E5\\u770B\\u5B66\\u751F\\u4FE1\\u606F\\u3001\\u6DFB\\u52A0\\u5B66\\u751F\\u548C\\u5E03\\u7F6E\\u4F5C\\u4E1A\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"courses-grid\",children:courses.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"empty-state\",children:/*#__PURE__*/_jsx(\"p\",{children:\"\\u6682\\u65E0\\u8BFE\\u7A0B\\uFF0C\\u8BF7\\u8054\\u7CFB\\u7BA1\\u7406\\u5458\\u6DFB\\u52A0\\u8BFE\\u7A0B\"})}):courses.map(course=>/*#__PURE__*/_jsxs(\"div\",{className:\"course-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"course-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:course.name}),/*#__PURE__*/_jsx(\"span\",{className:\"course-status active\",children:\"\\u8FDB\\u884C\\u4E2D\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"course-info\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u6559\\u5B66\\u73ED\\uFF1A\"}),course.class_name]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u4E13\\u4E1A\\uFF1A\"}),course.major_name]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u5B66\\u6821\\uFF1A\"}),course.school_name]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u5B66\\u751F\\u6570\\u91CF\\uFF1A\"}),course.student_count||0,\"\\u4EBA\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u521B\\u5EFA\\u65F6\\u95F4\\uFF1A\"}),formatDate(course.created_at)]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"course-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"action-btn primary\",onClick:()=>handleViewCourseDetail(course.id),children:\"\\u67E5\\u770B\\u8BE6\\u60C5\"})})]},course.id))})]}),activeSubTab==='detail'&&editingCourse&&/*#__PURE__*/_jsxs(\"div\",{className:\"section-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"\\uD83D\\uDCDA \\u8BFE\\u7A0B\\u8BE6\\u60C5\\uFF1A\",editingCourse.name]}),/*#__PURE__*/_jsx(\"button\",{className:\"secondary-btn\",onClick:()=>{setActiveSubTab('list');setEditingCourse(null);},children:\"\\u2190 \\u8FD4\\u56DE\\u8BFE\\u7A0B\\u5217\\u8868\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"course-detail\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"course-info-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u8BFE\\u7A0B\\u57FA\\u672C\\u4FE1\\u606F\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u8BFE\\u7A0B\\u540D\\u79F0\\uFF1A\"}),/*#__PURE__*/_jsx(\"span\",{children:editingCourse.name})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u8BFE\\u7A0B\\u63CF\\u8FF0\\uFF1A\"}),/*#__PURE__*/_jsx(\"span\",{children:editingCourse.description})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u6559\\u5B66\\u73ED\\uFF1A\"}),/*#__PURE__*/_jsx(\"span\",{children:editingCourse.class_name})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u4E13\\u4E1A\\uFF1A\"}),/*#__PURE__*/_jsx(\"span\",{children:editingCourse.major_name})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u5B66\\u6821\\uFF1A\"}),/*#__PURE__*/_jsx(\"span\",{children:editingCourse.school_name})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u5B66\\u751F\\u6570\\u91CF\\uFF1A\"}),/*#__PURE__*/_jsxs(\"span\",{children:[editingCourse.student_count||0,\"\\u4EBA\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u521B\\u5EFA\\u65F6\\u95F4\\uFF1A\"}),/*#__PURE__*/_jsx(\"span\",{children:formatDate(editingCourse.created_at)})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"course-students-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u6559\\u5B66\\u73ED\\u5B66\\u751F\"}),/*#__PURE__*/_jsx(\"button\",{className:\"add-btn\",onClick:()=>{// 设置添加学生上下文为课程详情页\nsetAddingStudentContext('course-detail');setActiveSubTab('add-student-to-course');},children:\"\\u6DFB\\u52A0\\u5B66\\u751F\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"students-table\",children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"\\u5B66\\u53F7\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u59D3\\u540D\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u90AE\\u7BB1\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u72B6\\u6001\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u64CD\\u4F5C\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:(()=>{// 获取当前课程的所有学生\nconst courseStudents=[];// 1. 添加原本属于该教学班的学生\nconst originalStudents=users.filter(user=>user.class_id===editingCourse.class_id&&user.role==='student');courseStudents.push(...originalStudents);// 2. 添加通过关联关系添加的学生\nconst relatedStudents=studentClassRelations.filter(relation=>relation.course_id===editingCourse.id).map(relation=>{// 查找学生的完整信息\nconst studentInfo=users.find(user=>user.id===relation.student_id);return _objectSpread(_objectSpread({},studentInfo),{},{// 使用关联关系中的信息作为后备\nname:studentInfo?studentInfo.name:relation.student_name,username:studentInfo?studentInfo.username:relation.student_no,// 标记这是通过关联关系添加的学生\nisRelatedStudent:true,relationId:\"\".concat(relation.student_id,\"_\").concat(relation.course_id)});});courseStudents.push(...relatedStudents);if(courseStudents.length===0){return/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{colSpan:\"5\",children:/*#__PURE__*/_jsx(\"div\",{className:\"empty-state\",children:/*#__PURE__*/_jsx(\"p\",{children:\"\\u8BE5\\u6559\\u5B66\\u73ED\\u6682\\u65E0\\u5B66\\u751F\"})})})});}return courseStudents.map(student=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:student.username}),/*#__PURE__*/_jsx(\"td\",{children:student.name}),/*#__PURE__*/_jsx(\"td\",{children:student.email||'-'}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"span\",{className:\"status-badge \".concat(student.isRelatedStudent?'related':'original'),children:student.isRelatedStudent?'已添加':'原班级'})}),/*#__PURE__*/_jsx(\"td\",{children:student.isRelatedStudent&&/*#__PURE__*/_jsx(\"button\",{className:\"action-btn delete\",onClick:()=>handleRemoveStudentFromCourse(student.relationId),children:\"\\u79FB\\u9664\"})})]},student.id||student.relationId));})()})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"course-assignments-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u5DF2\\u5E03\\u7F6E\\u4F5C\\u4E1A\"}),/*#__PURE__*/_jsx(\"button\",{className:\"add-btn\",onClick:()=>{// 自动设置当前课程ID到作业表单\nsetAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{course_id:editingCourse.id}));// 设置编辑作业上下文为课程详情页\nsetEditingAssignmentContext('course-detail');setActiveSubTab('create-assignment');},children:\"\\u5E03\\u7F6E\\u4F5C\\u4E1A\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"assignments-table\",children:[/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"\\u4F5C\\u4E1A\\u540D\\u79F0\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u63CF\\u8FF0\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u622A\\u6B62\\u65F6\\u95F4\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u72B6\\u6001\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u64CD\\u4F5C\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:assignments.filter(assignment=>assignment.course_id===editingCourse.id).map(assignment=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:assignment.name}),/*#__PURE__*/_jsx(\"td\",{children:assignment.description}),/*#__PURE__*/_jsx(\"td\",{children:formatDate(assignment.due_date)}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"span\",{className:\"status-badge \".concat(assignment.is_active?'active':'inactive'),children:assignment.is_active?'进行中':'已结束'})}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"action-btn edit\",onClick:()=>handleEditAssignment(assignment),children:\"\\u7F16\\u8F91\"}),/*#__PURE__*/_jsx(\"button\",{className:\"action-btn delete\",onClick:()=>handleDeleteAssignment(assignment.id),children:\"\\u5220\\u9664\"})]})]},assignment.id))})]}),assignments.filter(assignment=>assignment.course_id===editingCourse.id).length===0&&/*#__PURE__*/_jsx(\"div\",{className:\"empty-state\",children:/*#__PURE__*/_jsx(\"p\",{children:\"\\u8BE5\\u8BFE\\u7A0B\\u6682\\u65E0\\u4F5C\\u4E1A\"})})]})]}),activeSubTab==='create-assignment'&&/*#__PURE__*/_jsxs(\"div\",{className:\"course-assignment-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\uD83D\\uDCDD \\u5E03\\u7F6E\\u4F5C\\u4E1A\\uFF08\",editingCourse.name,\"\\uFF09\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"secondary-btn\",onClick:()=>setActiveSubTab('detail'),children:\"\\u2190 \\u8FD4\\u56DE\\u8BFE\\u7A0B\\u8BE6\\u60C5\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"assignment-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u4F5C\\u4E1A\\u540D\\u79F0\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u4F5C\\u4E1A\\u540D\\u79F0\",value:assignmentForm.name,onChange:e=>setAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{name:e.target.value}))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u8BFE\\u7A0B\\uFF1A\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:editingCourse.name,disabled:true,className:\"disabled-input\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u4F5C\\u4E1A\\u63CF\\u8FF0\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"\\u8BF7\\u8F93\\u5165\\u4F5C\\u4E1A\\u63CF\\u8FF0\",value:assignmentForm.description,onChange:e=>setAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{description:e.target.value})),rows:4})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u4F5C\\u4E1A\\u8981\\u6C42\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"\\u8BF7\\u8F93\\u5165\\u4F5C\\u4E1A\\u8981\\u6C42\",value:assignmentForm.requirements,onChange:e=>setAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{requirements:e.target.value})),rows:4})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u622A\\u6B62\\u65F6\\u95F4\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"datetime-local\",value:assignmentForm.due_date,onChange:e=>setAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{due_date:e.target.value}))})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u9009\\u62E9\\u9898\\u76EE\\uFF1A\"}),/*#__PURE__*/_jsx(\"div\",{className:\"problem-selection\",children:problems.map(problem=>/*#__PURE__*/_jsxs(\"label\",{className:\"problem-checkbox\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",value:problem.id,checked:assignmentForm.problem_ids.includes(problem.id),onChange:e=>{if(e.target.checked){setAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{problem_ids:[...prev.problem_ids,problem.id]}));}else{setAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{problem_ids:prev.problem_ids.filter(id=>id!==problem.id)}));}}}),/*#__PURE__*/_jsx(\"span\",{className:\"problem-title\",children:problem.title}),/*#__PURE__*/_jsx(\"span\",{className:\"difficulty-badge \".concat(problem.difficulty),children:problem.difficulty==='easy'?'简单':problem.difficulty==='medium'?'中等':'困难'})]},problem.id))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"submit-btn\",onClick:handleCreateAssignment,disabled:loading||!assignmentForm.name||!assignmentForm.description||!assignmentForm.requirements||!assignmentForm.due_date||!assignmentForm.course_id,children:loading?'创建中...':'布置作业'})})]})]}),activeSubTab==='add-student-to-course'&&editingCourse&&/*#__PURE__*/_jsxs(\"div\",{className:\"section-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\uD83D\\uDC65 \\u6DFB\\u52A0\\u5B66\\u751F\\u5230\\u8BFE\\u7A0B\\uFF1A\",editingCourse.name]}),/*#__PURE__*/_jsx(\"button\",{className:\"secondary-btn\",onClick:()=>setActiveSubTab('detail'),children:\"\\u2190 \\u8FD4\\u56DE\\u8BFE\\u7A0B\\u8BE6\\u60C5\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"add-student-to-course-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-help\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\u8BF7\\u9009\\u62E9\\u8981\\u6DFB\\u52A0\\u5230\\u8BE5\\u8BFE\\u7A0B\\u7684\\u5B66\\u751F\\uFF1A\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u6CE8\\u610F\\uFF1A\\u53EA\\u80FD\\u6DFB\\u52A0\\u5DF2\\u5B58\\u5728\\u7684\\u5B66\\u751F\\u8D26\\u53F7\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u5B66\\u53F7\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u5B66\\u53F7\",value:addStudentForm.student_no,onChange:e=>setAddStudentForm(prev=>_objectSpread(_objectSpread({},prev),{},{student_no:e.target.value}))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u59D3\\u540D\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u5B66\\u751F\\u59D3\\u540D\",value:addStudentForm.name,onChange:e=>setAddStudentForm(prev=>_objectSpread(_objectSpread({},prev),{},{name:e.target.value}))})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"submit-btn\",onClick:handleAddStudentToCourse,disabled:loading||!addStudentForm.student_no||!addStudentForm.name,children:loading?'添加中...':'添加学生到课程'})})]})]})]})]})]});// 学生相关处理函数\nconst handleAddStudent=async()=>{try{setLoading(true);setError('');setSuccess('');await registerStudent(addStudentForm);setSuccess('学生账号创建成功！');// 重置表单\nsetAddStudentForm({student_no:'',name:'',password:'',email:'',phone:'',school_id:'',major_id:'',class_id:''});// 刷新用户列表\nconst usersData=await getUsers(1,50,'student');setUsers(usersData.users);// 切换到学生列表\nsetActiveSubTab('list');}catch(error){var _error$response8,_error$response8$data;setError(((_error$response8=error.response)===null||_error$response8===void 0?void 0:(_error$response8$data=_error$response8.data)===null||_error$response8$data===void 0?void 0:_error$response8$data.error)||'创建学生账号失败');}finally{setLoading(false);}};const handleEditStudentClick=user=>{setEditingUser(user);setEditForm({email:user.email||'',phone:user.phone||'',school_id:user.school_id||'',major_id:user.major_id||'',class_id:user.class_id||'',new_password:''});setError('');setSuccess('');};const handleSaveStudent=async()=>{if(!editingUser)return;try{setLoading(true);setError('');setSuccess('');await updateUser(editingUser.id,editForm);setSuccess('学生信息已更新');// 刷新列表\nconst usersData=await getUsers(1,50,'student');setUsers(usersData.users);setEditingUser(null);}catch(error){var _error$response9,_error$response9$data;setError(((_error$response9=error.response)===null||_error$response9===void 0?void 0:(_error$response9$data=_error$response9.data)===null||_error$response9$data===void 0?void 0:_error$response9$data.error)||'更新学生信息失败');}finally{setLoading(false);}};const handleCancelEditStudent=()=>{setEditingUser(null);setEditForm({email:'',phone:'',school_id:'',major_id:'',class_id:'',new_password:''});};const handleDeleteStudent=async userId=>{if(!window.confirm('确定要删除该学生吗？此操作不可恢复。'))return;try{setLoading(true);setError('');setSuccess('');await deleteUser(userId);setSuccess('学生已删除');const usersData=await getUsers(1,50,'student');setUsers(usersData.users);}catch(error){var _error$response0,_error$response0$data;setError(((_error$response0=error.response)===null||_error$response0===void 0?void 0:(_error$response0$data=_error$response0.data)===null||_error$response0$data===void 0?void 0:_error$response0$data.error)||'删除学生失败');}finally{setLoading(false);}};const handleAddStudentSchoolChange=async schoolId=>{setAddStudentForm(prev=>_objectSpread(_objectSpread({},prev),{},{school_id:schoolId,major_id:'',class_id:''}));if(schoolId){try{const majorsData=await getMajors(schoolId);setMajors(majorsData);}catch(error){console.error('Error fetching majors:',error);}}else{setMajors([]);setClasses([]);}};const handleAddStudentMajorChange=async majorId=>{setAddStudentForm(prev=>_objectSpread(_objectSpread({},prev),{},{major_id:majorId,class_id:''}));if(majorId){try{const classesData=await getClasses(majorId);setClasses(classesData);}catch(error){console.error('Error fetching classes:',error);}}else{setClasses([]);}};// 选择题选项管理函数\nconst addChoiceOption=()=>{setProblemForm(prev=>_objectSpread(_objectSpread({},prev),{},{options:[...prev.options,{id:Date.now(),text:'',is_correct:false}]}));};const removeChoiceOption=optionId=>{setProblemForm(prev=>_objectSpread(_objectSpread({},prev),{},{options:prev.options.filter(option=>option.id!==optionId)}));};const updateChoiceOption=(optionId,field,value)=>{setProblemForm(prev=>_objectSpread(_objectSpread({},prev),{},{options:prev.options.map(option=>option.id===optionId?_objectSpread(_objectSpread({},option),{},{[field]:value}):option)}));};const toggleChoiceOptionCorrect=optionId=>{setProblemForm(prev=>{let updatedOptions;if(prev.type==='judge'){// 判断题：单选模式，点击一个选项时取消其他选项\nupdatedOptions=prev.options.map(option=>_objectSpread(_objectSpread({},option),{},{is_correct:option.id===optionId?!option.is_correct:false}));}else{// 选择题：多选模式，可以同时选择多个选项\nupdatedOptions=prev.options.map(option=>option.id===optionId?_objectSpread(_objectSpread({},option),{},{is_correct:!option.is_correct}):option);}// 更新正确答案数组\nlet correctAnswers;if(prev.type==='judge'){// 判断题：使用选项文本作为正确答案\ncorrectAnswers=updatedOptions.filter(option=>option.is_correct).map(option=>option.text);}else{// 选择题：使用选项ID作为正确答案\ncorrectAnswers=updatedOptions.filter(option=>option.is_correct).map(option=>option.id);}return _objectSpread(_objectSpread({},prev),{},{options:updatedOptions,correct_answers:correctAnswers});});};const handleProblemTypeChange=type=>{setProblemForm(prev=>{if(type==='choice'){// 切换到选择题时，初始化至少两个选项\nreturn _objectSpread(_objectSpread({},prev),{},{type,options:[{id:Date.now(),text:'',is_correct:false},{id:Date.now()+1,text:'',is_correct:false}],correct_answers:[],is_multiple_choice:false});}else if(type==='judge'){// 切换到判断题时，初始化两个固定选项\nreturn _objectSpread(_objectSpread({},prev),{},{type,options:[{id:'judge_correct',text:'正确',is_correct:false},{id:'judge_incorrect',text:'错误',is_correct:false}],correct_answers:[],is_multiple_choice:false});}else if(type==='short_answer'){// 切换到简答题时，清空选项相关字段，添加答案字段\nreturn _objectSpread(_objectSpread({},prev),{},{type,options:[],correct_answers:[],is_multiple_choice:false,answer:''// 简答题答案\n});}else{// 切换到其他题型时，清空选择题相关字段\nreturn _objectSpread(_objectSpread({},prev),{},{type,options:[],correct_answers:[],is_multiple_choice:false});}});};return/*#__PURE__*/_jsxs(\"div\",{className:\"teacher-dashboard\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"dashboard-header\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"\\u6559\\u5E08\\u7BA1\\u7406\\u63A7\\u5236\\u53F0\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-tabs\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"tab-btn \".concat(activeTab==='students'?'active':''),onClick:()=>{setActiveTab('students');setActiveSubTab('list');},children:\"\\u5B66\\u751F\\u7BA1\\u7406\"}),/*#__PURE__*/_jsx(\"button\",{className:\"tab-btn \".concat(activeTab==='problems'?'active':''),onClick:()=>{setActiveTab('problems');setActiveSubTab('list');},children:\"\\u9898\\u76EE\\u7BA1\\u7406\"}),/*#__PURE__*/_jsx(\"button\",{className:\"tab-btn \".concat(activeTab==='courses'?'active':''),onClick:()=>{setActiveTab('courses');setActiveSubTab('list');// 清除课程详情状态\nsetEditingCourse(null);setEditingAssignmentContext('');setAddingStudentContext('');},children:\"\\u6211\\u7684\\u8BFE\\u7A0B\"})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),success&&/*#__PURE__*/_jsx(\"div\",{className:\"success-message\",children:success}),activeTab==='students'&&renderStudentsTab(),activeTab==='problems'&&renderProblemsTab(),activeTab==='courses'&&renderCoursesTab(),activeTab==='courses'&&activeSubTab==='create-assignment'&&editingCourse&&/*#__PURE__*/_jsxs(\"div\",{className:\"tab-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\uD83D\\uDCDD \\u5E03\\u7F6E\\u4F5C\\u4E1A\\uFF08\",editingCourse.name,\"\\uFF09\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"secondary-btn\",onClick:()=>setActiveSubTab('detail'),children:\"\\u2190 \\u8FD4\\u56DE\\u8BFE\\u7A0B\\u8BE6\\u60C5\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"assignment-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u4F5C\\u4E1A\\u540D\\u79F0\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u4F5C\\u4E1A\\u540D\\u79F0\",value:assignmentForm.name,onChange:e=>setAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{name:e.target.value}))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u8BFE\\u7A0B\\uFF1A\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:editingCourse.name,disabled:true,className:\"disabled-input\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u4F5C\\u4E1A\\u63CF\\u8FF0\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"\\u8BF7\\u8F93\\u5165\\u4F5C\\u4E1A\\u63CF\\u8FF0\",value:assignmentForm.description,onChange:e=>setAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{description:e.target.value})),rows:4})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u4F5C\\u4E1A\\u8981\\u6C42\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"\\u8BF7\\u8F93\\u5165\\u4F5C\\u4E1A\\u8981\\u6C42\",value:assignmentForm.requirements,onChange:e=>setAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{requirements:e.target.value})),rows:4})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u622A\\u6B62\\u65F6\\u95F4\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"datetime-local\",value:assignmentForm.due_date,onChange:e=>setAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{due_date:e.target.value}))})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u9009\\u62E9\\u9898\\u76EE\\uFF1A\"}),/*#__PURE__*/_jsx(\"div\",{className:\"problem-selection\",children:problems.map(problem=>/*#__PURE__*/_jsxs(\"label\",{className:\"problem-checkbox\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",value:problem.id,checked:assignmentForm.problem_ids.includes(problem.id),onChange:e=>{if(e.target.checked){setAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{problem_ids:[...prev.problem_ids,problem.id]}));}else{setAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{problem_ids:prev.problem_ids.filter(id=>id!==problem.id)}));}}}),/*#__PURE__*/_jsx(\"span\",{className:\"problem-title\",children:problem.title}),/*#__PURE__*/_jsx(\"span\",{className:\"difficulty-badge \".concat(problem.difficulty),children:problem.difficulty==='easy'?'简单':problem.difficulty==='medium'?'中等':'困难'})]},problem.id))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"submit-btn\",onClick:handleCreateAssignment,disabled:loading||!assignmentForm.name||!assignmentForm.description||!assignmentForm.requirements||!assignmentForm.due_date||!assignmentForm.course_id,children:loading?'创建中...':'布置作业'})})]})]}),activeTab==='courses'&&activeSubTab==='add-student-to-course'&&editingCourse&&/*#__PURE__*/_jsxs(\"div\",{className:\"tab-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\uD83D\\uDC65 \\u6DFB\\u52A0\\u5B66\\u751F\\u5230\\u8BFE\\u7A0B\\uFF1A\",editingCourse.name]}),/*#__PURE__*/_jsx(\"button\",{className:\"secondary-btn\",onClick:()=>setActiveSubTab('detail'),children:\"\\u2190 \\u8FD4\\u56DE\\u8BFE\\u7A0B\\u8BE6\\u60C5\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"add-student-to-course-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-help\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\u8BF7\\u9009\\u62E9\\u8981\\u6DFB\\u52A0\\u5230\\u8BE5\\u8BFE\\u7A0B\\u7684\\u5B66\\u751F\\uFF1A\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u6CE8\\u610F\\uFF1A\\u53EA\\u80FD\\u6DFB\\u52A0\\u5DF2\\u5B58\\u5728\\u7684\\u5B66\\u751F\\u8D26\\u53F7\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u5B66\\u53F7\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u5B66\\u53F7\",value:addStudentForm.student_no,onChange:e=>setAddStudentForm(prev=>_objectSpread(_objectSpread({},prev),{},{student_no:e.target.value}))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u59D3\\u540D\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u5B66\\u751F\\u59D3\\u540D\",value:addStudentForm.name,onChange:e=>setAddStudentForm(prev=>_objectSpread(_objectSpread({},prev),{},{name:e.target.value}))})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"submit-btn\",onClick:handleAddStudentToCourse,disabled:loading||!addStudentForm.student_no||!addStudentForm.name,children:loading?'添加中...':'添加学生到课程'})})]})]}),editingUser&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"modal-header\",children:/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\u7F16\\u8F91\\u5B66\\u751F\\uFF1A\",editingUser.name,\"\\uFF08\\u5B66\\u53F7\",editingUser.username,\"\\uFF09\"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-body\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u90AE\\u7BB1\\uFF1A\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:editForm.email,onChange:e=>setEditForm(prev=>_objectSpread(_objectSpread({},prev),{},{email:e.target.value}))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u624B\\u673A\\u53F7\\uFF1A\"}),/*#__PURE__*/_jsx(\"input\",{type:\"tel\",value:editForm.phone,onChange:e=>setEditForm(prev=>_objectSpread(_objectSpread({},prev),{},{phone:e.target.value}))})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u5B66\\u6821\\uFF1A\"}),/*#__PURE__*/_jsxs(\"select\",{value:editForm.school_id,onChange:async e=>{const val=e.target.value;setEditForm(prev=>_objectSpread(_objectSpread({},prev),{},{school_id:val,major_id:'',class_id:''}));if(val){const majorsData=await getMajors(val);setMajors(majorsData);}else{setMajors([]);setClasses([]);}},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\u8BF7\\u9009\\u62E9\\u5B66\\u6821\"}),schools.map(s=>/*#__PURE__*/_jsx(\"option\",{value:s.id,children:s.name},s.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u4E13\\u4E1A\\uFF1A\"}),/*#__PURE__*/_jsxs(\"select\",{value:editForm.major_id,onChange:async e=>{const val=e.target.value;setEditForm(prev=>_objectSpread(_objectSpread({},prev),{},{major_id:val,class_id:''}));if(val){const classesData=await getClasses(val);setClasses(classesData);}else{setClasses([]);}},disabled:!editForm.school_id,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\u8BF7\\u9009\\u62E9\\u4E13\\u4E1A\"}),majors.map(m=>/*#__PURE__*/_jsx(\"option\",{value:m.id,children:m.name},m.id))]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u73ED\\u7EA7\\uFF1A\"}),/*#__PURE__*/_jsxs(\"select\",{value:editForm.class_id,onChange:e=>setEditForm(prev=>_objectSpread(_objectSpread({},prev),{},{class_id:e.target.value})),disabled:!editForm.major_id,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\u8BF7\\u9009\\u62E9\\u73ED\\u7EA7\"}),classes.map(c=>/*#__PURE__*/_jsx(\"option\",{value:c.id,children:c.name},c.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u91CD\\u7F6E\\u5BC6\\u7801\\uFF08\\u53EF\\u9009\\uFF09\\uFF1A\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:editForm.new_password,onChange:e=>setEditForm(prev=>_objectSpread(_objectSpread({},prev),{},{new_password:e.target.value}))})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-footer\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"secondary-btn\",onClick:handleCancelEditStudent,children:\"\\u53D6\\u6D88\"}),/*#__PURE__*/_jsx(\"button\",{className:\"submit-btn\",onClick:handleSaveStudent,disabled:loading,children:loading?'保存中...':'保存'})]})]})})]});};export default TeacherDashboardPage;","map":{"version":3,"names":["React","useState","useEffect","getUsers","getSchools","getMajors","getClasses","batchImportStudents","getProblems","createProblem","updateProblem","deleteProblem","updateUser","deleteUser","registerStudent","getTeacherCourses","getCourseAssignments","createAssignment","updateAssignment","deleteAssignment","getCourseStudents","addStudentToCourse","removeStudentFromCourse","AIProblemGenerationPage","mockCourses","mockAssignments","formatDate","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TeacherDashboardPage","activeTab","setActiveTab","activeSubTab","setActiveSubTab","users","setUsers","problems","setProblems","schools","setSchools","majors","setMajors","classes","setClasses","loading","setLoading","error","setError","success","setSuccess","importData","setImportData","selectedSchool","setSelectedSchool","selectedMajor","setSelectedMajor","selectedClass","setSelectedClass","problemForm","setProblemForm","title","description","type","test_cases","expected_output","difficulty","time_limit","memory_limit","options","correct_answers","is_multiple_choice","answer","editingProblem","setEditingProblem","isEditing","setIsEditing","addStudentForm","setAddStudentForm","student_no","name","password","email","phone","school_id","major_id","class_id","editingUser","setEditingUser","editForm","setEditForm","new_password","courses","setCourses","editingCourse","setEditingCourse","assignments","setAssignments","assignmentForm","setAssignmentForm","requirements","due_date","course_id","problem_ids","editingAssignment","setEditingAssignment","isEditingAssignment","setIsEditingAssignment","editingAssignmentContext","setEditingAssignmentContext","addingStudentContext","setAddingStudentContext","studentClassRelations","setStudentClassRelations","fetchInitialData","loadCourseStudents","id","console","log","courseStudentsData","length","apiRelations","map","student","student_id","student_name","added_at","Date","toISOString","schoolsData","usersData","problemsData","Promise","all","forEach","problem","index","concat","coursesData","assignmentsData","warn","_error$response","_error$response$data","response","data","handleSchoolChange","schoolId","majorsData","handleMajorChange","majorId","classesData","handleBatchImport","trim","lines","split","l","filter","test","students","line","parts","s","studentNo","push","username","undefined","role","_resp$success_count","_resp$failed_count","resp","msg","message","success_count","failed_count","errors","preview","slice","join","_error$response2","_error$response2$data","handleCreateProblem","JSON","stringify","_error$response3","_error$response3$data","handleEditProblem","text","is_correct","prev","_objectSpread","includes","handleDeleteProblem","problemId","window","confirm","_error$response4","_error$response4$data","inferProblemType","choices","alternatives","option_list","Array","isArray","optionTexts","opt","option_text","content","label","solution","correct_answer","answer_text","testCases","test_cases_text","test_input","expectedOutput","expected_result","expected_answer","handleCancelEdit","handleViewCourseDetail","courseId","course","find","c","handleCreateAssignment","assignmentData","_error$response5","_error$response5$data","handleEditAssignment","assignment","handleDeleteAssignment","assignmentId","_error$response6","_error$response6$data","handleAddStudentToCourse","existingStudent","user","apiError","_apiError$response","_apiError$response$da","_error$response7","_error$response7$data","handleRemoveStudentFromCourse","relationId","studentId","_apiError$response2","_apiError$response2$d","renderStudentsTab","className","children","onClick","handleEditStudentClick","handleDeleteStudent","placeholder","value","onChange","e","target","handleAddStudentSchoolChange","school","handleAddStudentMajorChange","disabled","major","classItem","handleAddStudent","rows","renderProblemsTab","Object","keys","inferredType","displayType","style","display","color","fontSize","handleProblemTypeChange","checked","option","String","fromCharCode","toggleChoiceOptionCorrect","removeChoiceOption","updateChoiceOption","addChoiceOption","readOnly","parseInt","min","max","some","renderCoursesTab","class_name","major_name","school_name","student_count","created_at","courseStudents","originalStudents","relatedStudents","relation","studentInfo","isRelatedStudent","colSpan","is_active","_error$response8","_error$response8$data","handleSaveStudent","_error$response9","_error$response9$data","handleCancelEditStudent","userId","_error$response0","_error$response0$data","now","optionId","field","updatedOptions","correctAnswers","val","m"],"sources":["/Volumes/坞城/OJ_1/frontend/src/pages/TeacherDashboardPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getUsers, getSchools, getMajors, getClasses, batchImportStudents, getProblems, createProblem, updateProblem, deleteProblem, updateUser, deleteUser, registerStudent, getTeacherCourses, getCourseAssignments, createAssignment, updateAssignment, deleteAssignment, getCourseStudents, addStudentToCourse, removeStudentFromCourse } from '../services/api';\nimport './TeacherDashboardPage.css';\nimport AIProblemGenerationPage from './AIProblemGenerationPage';\nimport { mockCourses, mockAssignments, formatDate } from '../testData/courses';\n\nconst TeacherDashboardPage = () => {\n  const [activeTab, setActiveTab] = useState('students');\n  const [activeSubTab, setActiveSubTab] = useState('list'); // 子标签页\n  const [users, setUsers] = useState([]);\n  const [problems, setProblems] = useState([]);\n  const [schools, setSchools] = useState([]);\n  const [majors, setMajors] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  // 批量导入相关状态\n  const [importData, setImportData] = useState('');\n  const [selectedSchool, setSelectedSchool] = useState('');\n  const [selectedMajor, setSelectedMajor] = useState('');\n  const [selectedClass, setSelectedClass] = useState('');\n\n  // 手动创建题目相关状态\n  const [problemForm, setProblemForm] = useState({\n    title: '',\n    description: '',\n    type: 'programming', // 题目类型：programming(编程题), choice(选择题), judge(判断题), short_answer(简答题)\n    test_cases: '',\n    expected_output: '',\n    difficulty: 'easy',\n    time_limit: 1000,\n    memory_limit: 128,\n    // 选择题相关字段\n    options: [], // 选项数组\n    correct_answers: [], // 正确答案数组（支持多选）\n    is_multiple_choice: false, // 是否多选\n    // 简答题相关字段\n    answer: '' // 简答题答案\n  });\n\n  // 编辑题目状态\n  const [editingProblem, setEditingProblem] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n\n  // 添加学生相关状态（按新规则：学号、姓名、密码必填）\n  const [addStudentForm, setAddStudentForm] = useState({\n    student_no: '',\n    name: '',\n    password: '',\n    email: '',\n    phone: '',\n    school_id: '',\n    major_id: '',\n    class_id: ''\n  });\n\n  // 学生编辑相关状态\n  const [editingUser, setEditingUser] = useState(null);\n  const [editForm, setEditForm] = useState({\n    email: '',\n    phone: '',\n    school_id: '',\n    major_id: '',\n    class_id: '',\n    new_password: ''\n  });\n\n  // 课程相关状态（只读，用于查看）\n  const [courses, setCourses] = useState([]);\n  const [editingCourse, setEditingCourse] = useState(null);\n\n  // 作业相关状态\n  const [assignments, setAssignments] = useState([]);\n  const [assignmentForm, setAssignmentForm] = useState({\n    name: '',\n    description: '',\n    requirements: '',\n    due_date: '',\n    course_id: '',\n    problem_ids: []\n  });\n\n  // 编辑作业状态\n  const [editingAssignment, setEditingAssignment] = useState(null);\n  const [isEditingAssignment, setIsEditingAssignment] = useState(false);\n  const [editingAssignmentContext, setEditingAssignmentContext] = useState(''); // 记录编辑作业时的上下文\n  \n  // 添加学生到课程的状态\n  const [addingStudentContext, setAddingStudentContext] = useState(''); // 记录添加学生时的上下文\n  \n  // 学生-教学班关联关系状态\n  const [studentClassRelations, setStudentClassRelations] = useState([]); // 存储学生与教学班的关联关系\n\n  useEffect(() => {\n    fetchInitialData();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // 从API加载学生-课程关联关系\n  useEffect(() => {\n    const loadCourseStudents = async () => {\n      if (editingCourse && editingCourse.id) {\n        console.log('开始加载课程学生数据，课程ID:', editingCourse.id);\n        \n        try {\n          const courseStudentsData = await getCourseStudents(editingCourse.id);\n          console.log('从API获取的课程学生数据:', courseStudentsData);\n          \n          if (courseStudentsData && courseStudentsData.length > 0) {\n            const apiRelations = courseStudentsData.map(student => ({\n              student_id: student.student_id,\n              class_id: student.class_id,\n              course_id: editingCourse.id,\n              student_name: student.student_name,\n              student_no: student.student_no,\n              added_at: student.added_at || new Date().toISOString()\n            }));\n            setStudentClassRelations(apiRelations);\n            console.log('成功加载课程学生数据:', apiRelations);\n          } else {\n            setStudentClassRelations([]);\n            console.log('该课程暂无学生');\n          }\n        } catch (error) {\n          console.error('加载课程学生数据失败:', error);\n          setStudentClassRelations([]);\n        }\n      }\n    };\n    \n    loadCourseStudents();\n  }, [editingCourse]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const fetchInitialData = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      setSuccess('');\n      const [schoolsData, usersData, problemsData] = await Promise.all([\n        getSchools(),\n        getUsers(1, 50, 'student'),\n        getProblems(1, 50)\n      ]);\n      \n      setSchools(schoolsData);\n      setUsers(usersData.users);\n      setProblems(problemsData.problems);\n      \n      // 调试信息：打印题目数据\n      console.log('从API获取的题目数据:', problemsData.problems);\n      if (problemsData.problems && problemsData.problems.length > 0) {\n        problemsData.problems.forEach((problem, index) => {\n          console.log(`题目 ${index + 1}:`, {\n            id: problem.id,\n            title: problem.title,\n            type: problem.type,\n            difficulty: problem.difficulty\n          });\n        });\n      }\n      \n      // 获取课程和作业数据（使用测试数据）\n      try {\n        const [coursesData, assignmentsData] = await Promise.all([\n          getTeacherCourses(),\n          getCourseAssignments()\n        ]);\n        \n        setCourses(coursesData.courses || mockCourses);\n        setAssignments(assignmentsData.assignments || mockAssignments);\n      } catch (error) {\n        console.warn('获取课程或作业数据失败，使用测试数据:', error);\n        setCourses(mockCourses);\n        setAssignments(mockAssignments);\n      }\n      \n      // 学生-课程关联关系数据将在进入课程详情页时从API加载\n    } catch (error) {\n      setError(error?.response?.data?.error || '获取数据失败');\n      console.error('Error fetching data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSchoolChange = async (schoolId) => {\n    setSelectedSchool(schoolId);\n    setSelectedMajor('');\n    setSelectedClass('');\n    \n    if (schoolId) {\n      try {\n        const majorsData = await getMajors(schoolId);\n        setMajors(majorsData);\n      } catch (error) {\n        console.error('Error fetching majors:', error);\n      }\n    } else {\n      setMajors([]);\n    }\n  };\n\n  const handleMajorChange = async (majorId) => {\n    setSelectedMajor(majorId);\n    setSelectedClass('');\n    \n    if (majorId) {\n      try {\n        const classesData = await getClasses(majorId);\n        setClasses(classesData);\n      } catch (error) {\n        console.error('Error fetching classes:', error);\n      }\n    } else {\n      setClasses([]);\n    }\n  };\n\n  const handleBatchImport = async () => {\n    if (!importData.trim()) {\n      setError('请输入要导入的学生数据');\n      setSuccess('');\n      return;\n    }\n\n    if (!selectedSchool || !selectedMajor || !selectedClass) {\n      setError('请选择学校、专业和班级');\n      setSuccess('');\n      return;\n    }\n\n    // 解析CSV数据为学生对象数组\n    const lines = importData\n      .split(/\\r?\\n/)\n      .map(l => l.trim())\n      .filter(l => l && !/^\\s*#/.test(l));\n    const students = [];\n    for (const line of lines) {\n      const parts = line.split(',').map(s => s.trim());\n      if (parts.length < 3) continue; // 至少: 学号,姓名,密码\n      const [studentNo, name, password, email, phone] = parts;\n      students.push({\n        username: studentNo,\n        name,\n        password,\n        email: email || undefined,\n        phone: phone || undefined,\n        school_id: selectedSchool,\n        major_id: selectedMajor,\n        class_id: selectedClass,\n        role: 'student'\n      });\n    }\n\n    if (students.length === 0) {\n      setError('没有有效的学生数据行。请按 CSV: 学号,姓名,密码[,邮箱][,手机号]');\n      setSuccess('');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError('');\n      setSuccess('');\n      \n      const resp = await batchImportStudents({ students });\n      \n      const msg = resp?.message || `批量导入完成: 成功 ${resp?.success_count ?? students.length} 个, 失败 ${resp?.failed_count ?? 0} 个`;\n      setSuccess(msg);\n      if (resp?.errors && resp.errors.length > 0) {\n        const preview = resp.errors.slice(0, 5).join('；');\n        setError(`部分导入失败：${preview}${resp.errors.length > 5 ? ' 等' : ''}`);\n      }\n      \n      // 刷新用户列表\n      const usersData = await getUsers(1, 50, 'student');\n      setUsers(usersData.users);\n      setImportData('');\n    } catch (error) {\n      setError(error.response?.data?.error || '批量导入失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCreateProblem = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      setSuccess('');\n      \n      // 添加调试信息\n      console.log('提交的题目数据:', problemForm);\n      console.log('题目类型:', problemForm.type);\n      console.log('完整表单数据:', JSON.stringify(problemForm, null, 2));\n      \n      if (isEditing && editingProblem) {\n        console.log('更新题目，ID:', editingProblem.id);\n        await updateProblem(editingProblem.id, problemForm);\n        setSuccess('题目更新成功！');\n      } else {\n        console.log('创建新题目');\n        await createProblem(problemForm);\n        setSuccess('题目创建成功！');\n      }\n      \n      // 重置表单\n      setProblemForm({\n        title: '',\n        description: '',\n        type: 'programming',\n        test_cases: '',\n        expected_output: '',\n        difficulty: 'easy',\n        time_limit: 1000,\n        memory_limit: 128,\n        options: [],\n        correct_answers: [],\n        is_multiple_choice: false,\n        answer: ''\n      });\n      \n      setIsEditing(false);\n      setEditingProblem(null);\n      \n      // 刷新题目列表\n      const problemsData = await getProblems(1, 50);\n      setProblems(problemsData.problems);\n      \n      // 切换到题目列表\n      setActiveSubTab('list');\n      \n    } catch (error) {\n      console.error('题目操作失败:', error);\n      console.error('错误响应:', error.response);\n      setError(error.response?.data?.error || (isEditing ? '更新题目失败' : '创建题目失败'));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleEditProblem = (problem) => {\n    setEditingProblem(problem);\n    setProblemForm({\n      title: problem.title,\n      description: problem.description,\n      type: problem.type || 'programming',\n      test_cases: problem.test_cases || '',\n      expected_output: problem.expected_output || '',\n      difficulty: problem.difficulty,\n      time_limit: problem.time_limit || 1000,\n      memory_limit: problem.memory_limit || 128,\n      options: problem.type === 'judge' ? [\n        { id: 'judge_correct', text: '正确', is_correct: false },\n        { id: 'judge_incorrect', text: '错误', is_correct: false }\n      ] : (problem.options || []),\n      correct_answers: problem.correct_answers || [],\n      is_multiple_choice: problem.is_multiple_choice || false,\n      answer: problem.answer || ''\n    });\n    \n    // 如果是判断题，需要根据原有的正确答案设置选项状态\n    if (problem.type === 'judge' && problem.correct_answers && problem.correct_answers.length > 0) {\n      setProblemForm(prev => ({\n        ...prev,\n        options: [\n          { id: 'judge_correct', text: '正确', is_correct: problem.correct_answers.includes('正确') },\n          { id: 'judge_incorrect', text: '错误', is_correct: problem.correct_answers.includes('错误') }\n        ]\n      }));\n    }\n    \n    setIsEditing(true);\n    setActiveSubTab('create');\n  };\n\n  const handleDeleteProblem = async (problemId) => {\n    if (!window.confirm('确定要删除这个题目吗？此操作不可恢复。')) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError('');\n      setSuccess('');\n      await deleteProblem(problemId);\n      setSuccess('题目删除成功！');\n      \n      // 刷新题目列表\n      const problemsData = await getProblems(1, 50);\n      setProblems(problemsData.problems);\n    } catch (error) {\n      setError(error.response?.data?.error || '删除题目失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 根据题目特征推断题目类型\n  const inferProblemType = (problem) => {\n    console.log('开始推断题目类型，题目数据:', problem);\n    \n    // 检查所有可能的选项字段\n    const options = problem.options || problem.choices || problem.alternatives || problem.option_list || [];\n    console.log('检查到的选项:', options);\n    \n    // 如果有选项，判断是选择题还是判断题\n    if (Array.isArray(options) && options.length > 0) {\n      console.log('发现选项，数量:', options.length);\n      \n      // 检查是否是判断题（只有两个选项：正确、错误）\n      if (options.length === 2) {\n        const optionTexts = options.map(opt => {\n          const text = opt.text || opt.option_text || opt.content || opt.label || '';\n          console.log('选项文本:', text);\n          return text;\n        });\n        \n        if (optionTexts.includes('正确') && optionTexts.includes('错误')) {\n          console.log('推断为判断题');\n          return 'judge';\n        }\n      }\n      \n      console.log('推断为选择题');\n      return 'choice';\n    }\n    \n    // 检查所有可能的答案字段\n    const answer = problem.answer || problem.solution || problem.correct_answer || problem.answer_text || '';\n    console.log('检查到的答案:', answer);\n    \n    if (answer && answer.trim()) {\n      console.log('推断为简答题');\n      return 'short_answer';\n    }\n    \n    // 检查编程题相关字段\n    const testCases = problem.test_cases || problem.test_cases_text || problem.test_input || '';\n    const expectedOutput = problem.expected_output || problem.expected_result || problem.expected_answer || '';\n    console.log('检查到的测试用例:', testCases);\n    console.log('检查到的期望输出:', expectedOutput);\n    \n    if (testCases && expectedOutput) {\n      console.log('推断为编程题');\n      return 'programming';\n    }\n    \n    // 如果都无法推断，默认返回编程题\n    console.log('无法推断类型，默认返回编程题');\n    return 'programming';\n  };\n\n  const handleCancelEdit = () => {\n    setIsEditing(false);\n    setEditingProblem(null);\n    setProblemForm({\n      title: '',\n      description: '',\n      type: 'programming',\n      test_cases: '',\n      expected_output: '',\n      difficulty: 'easy',\n      time_limit: 1000,\n      memory_limit: 128,\n      options: [],\n      correct_answers: [],\n      is_multiple_choice: false,\n      answer: ''\n    });\n    setActiveSubTab('list');\n  };\n\n  // 课程相关处理函数（只读功能）\n  const handleViewCourseDetail = (courseId) => {\n    const course = courses.find(c => c.id === courseId);\n    if (course) {\n      setActiveTab('courses');\n      setActiveSubTab('detail');\n      setEditingCourse(course);\n    }\n  };\n\n  // 作业相关处理函数\n  const handleCreateAssignment = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      setSuccess('');\n      \n      // 如果在课程详情页面创建作业，自动设置课程ID\n      const assignmentData = { ...assignmentForm };\n      if (activeSubTab === 'create-assignment' && editingCourse) {\n        assignmentData.course_id = editingCourse.id;\n      }\n      \n      if (isEditingAssignment && editingAssignment) {\n        await updateAssignment(editingAssignment.id, assignmentData);\n        setSuccess('作业更新成功！');\n      } else {\n        await createAssignment(assignmentData);\n        setSuccess('作业布置成功！');\n      }\n      \n      // 重置表单\n      setAssignmentForm({\n        name: '',\n        description: '',\n        requirements: '',\n        due_date: '',\n        course_id: '',\n        problem_ids: []\n      });\n      \n      setIsEditingAssignment(false);\n      setEditingAssignment(null);\n      \n      // 刷新作业列表\n      const assignmentsData = await getCourseAssignments();\n      setAssignments(assignmentsData.assignments || []);\n      \n      // 如果在课程详情页面，返回到课程详情；否则返回到课程列表\n      if (activeSubTab === 'create-assignment') {\n        setActiveSubTab('detail');\n      } else {\n        setActiveSubTab('list');\n      }\n      \n    } catch (error) {\n      setError(error.response?.data?.error || (isEditingAssignment ? '更新作业失败' : '布置作业失败'));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleEditAssignment = (assignment) => {\n    setEditingAssignment(assignment);\n    setAssignmentForm({\n      name: assignment.name,\n      description: assignment.description || '',\n      requirements: assignment.requirements || '',\n      due_date: assignment.due_date || '',\n      course_id: assignment.course_id || '',\n      problem_ids: assignment.problem_ids || []\n    });\n    setIsEditingAssignment(true);\n    \n    // 记录编辑作业时的上下文\n    if (activeSubTab === 'detail' && editingCourse) {\n      setEditingAssignmentContext('course-detail');\n    } else {\n      setEditingAssignmentContext('course-list');\n    }\n    \n    // 切换到作业创建模式\n    setActiveSubTab('create-assignment');\n  };\n\n  const handleDeleteAssignment = async (assignmentId) => {\n    if (!window.confirm('确定要删除该作业吗？此操作不可恢复。')) return;\n    try {\n      setLoading(true);\n      setError('');\n      setSuccess('');\n      \n      await deleteAssignment(assignmentId);\n      setSuccess('作业已删除');\n      \n      // 刷新作业列表\n      const assignmentsData = await getCourseAssignments();\n      setAssignments(assignmentsData.assignments || []);\n      \n    } catch (error) {\n      setError(error.response?.data?.error || '删除作业失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 学生-课程关联关系处理函数\n  const handleAddStudentToCourse = async () => {\n    if (!editingCourse) return;\n    \n    try {\n      setLoading(true);\n      setError('');\n      setSuccess('');\n      \n      // 查找学生是否已存在\n      const existingStudent = users.find(user => \n        user.username === addStudentForm.student_no && user.role === 'student'\n      );\n      \n      if (!existingStudent) {\n        setError('学生不存在，请先创建学生账号');\n        return;\n      }\n      \n      // 使用API添加学生到课程\n      try {\n        await addStudentToCourse(editingCourse.id, {\n          student_id: existingStudent.id,\n          class_id: editingCourse.class_id\n        });\n        setSuccess('学生已成功添加到课程！');\n        \n        // 重新加载课程学生数据\n        const courseStudentsData = await getCourseStudents(editingCourse.id);\n        if (courseStudentsData && courseStudentsData.length > 0) {\n          const apiRelations = courseStudentsData.map(student => ({\n            student_id: student.student_id,\n            class_id: student.class_id,\n            course_id: editingCourse.id,\n            student_name: student.student_name,\n            student_no: student.student_no,\n            added_at: student.added_at || new Date().toISOString()\n          }));\n          setStudentClassRelations(apiRelations);\n        }\n      } catch (apiError) {\n        console.error('添加学生到课程失败:', apiError);\n        setError(apiError.response?.data?.error || '添加学生失败');\n        return;\n      }\n      \n      // 重置表单\n      setAddStudentForm({\n        student_no: '',\n        name: '',\n        password: '',\n        email: '',\n        phone: '',\n        school_id: '',\n        major_id: '',\n        class_id: ''\n      });\n      \n      // 返回到课程详情页\n      setActiveSubTab('detail');\n      \n    } catch (error) {\n      setError(error.response?.data?.error || '添加学生失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleRemoveStudentFromCourse = async (relationId) => {\n    if (!window.confirm('确定要从该课程中移除该学生吗？')) return;\n    \n    try {\n      // 解析relationId获取学生ID和课程ID\n      const [studentId] = relationId.split('_');\n      \n      // 使用API从课程中移除学生\n      try {\n        await removeStudentFromCourse(editingCourse.id, studentId);\n        setSuccess('学生已从课程中移除');\n        \n        // 重新加载课程学生数据\n        const courseStudentsData = await getCourseStudents(editingCourse.id);\n        if (courseStudentsData && courseStudentsData.length > 0) {\n          const apiRelations = courseStudentsData.map(student => ({\n            student_id: student.student_id,\n            class_id: student.class_id,\n            course_id: editingCourse.id,\n            student_name: student.student_name,\n            student_no: student.student_no,\n            added_at: student.added_at || new Date().toISOString()\n          }));\n          setStudentClassRelations(apiRelations);\n        } else {\n          setStudentClassRelations([]);\n        }\n      } catch (apiError) {\n        console.error('从课程中移除学生失败:', apiError);\n        setError(apiError.response?.data?.error || '移除学生失败');\n        return;\n      }\n    } catch (error) {\n      setError('移除学生失败');\n    }\n  };\n\n  // 学生管理标签页渲染函数\n  const renderStudentsTab = () => (\n    <div className=\"tab-content\">\n      <div className=\"sub-tabs\">\n        <button \n          className={`sub-tab-btn ${activeSubTab === 'list' ? 'active' : ''}`}\n          onClick={() => setActiveSubTab('list')}\n        >\n          学生列表\n        </button>\n        <button \n          className={`sub-tab-btn ${activeSubTab === 'add' ? 'active' : ''}`}\n          onClick={() => setActiveSubTab('add')}\n        >\n          添加学生\n        </button>\n        <button \n          className={`sub-tab-btn ${activeSubTab === 'import' ? 'active' : ''}`}\n          onClick={() => setActiveSubTab('import')}\n        >\n          批量导入\n        </button>\n      </div>\n\n      {activeSubTab === 'list' && (\n        <div className=\"section-content\">\n          <div className=\"section-header\">\n            <h2>学生列表</h2>\n            <button \n              className=\"add-btn\"\n              onClick={() => setActiveSubTab('add')}\n            >\n              添加学生\n            </button>\n          </div>\n          \n          <div className=\"students-table\">\n            <table>\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>学号</th>\n                  <th>姓名</th>\n                  <th>邮箱</th>\n                  <th>手机号</th>\n                  <th>学校</th>\n                  <th>专业</th>\n                  <th>班级</th>\n                  <th>操作</th>\n                </tr>\n              </thead>\n              <tbody>\n                {users.map(user => (\n                  <tr key={user.id}>\n                    <td>{user.id}</td>\n                    <td>{user.username}</td>\n                    <td>{user.name}</td>\n                    <td>{user.email || '-'}</td>\n                    <td>{user.phone || '-'}</td>\n                    <td>{user.school_id || '-'}</td>\n                    <td>{user.major_id || '-'}</td>\n                    <td>{user.class_id || '-'}</td>\n                    <td>\n                      <button \n                        className=\"action-btn edit\"\n                        onClick={() => handleEditStudentClick(user)}\n                      >\n                        编辑\n                      </button>\n                      <button \n                        className=\"action-btn delete\"\n                        onClick={() => handleDeleteStudent(user.id)}\n                      >\n                        删除\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n\n      {activeSubTab === 'add' && (\n        <div className=\"section-content\">\n          <div className=\"section-header\">\n            <h2>➕ 添加学生</h2>\n            <button \n              className=\"secondary-btn\"\n              onClick={() => setActiveSubTab('list')}\n            >\n              ← 返回学生列表\n            </button>\n          </div>\n          \n          <div className=\"add-student-form\">\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>学号：<span className=\"required-mark\">*</span></label>\n                <input \n                  type=\"text\" \n                  placeholder=\"请输入学号\"\n                  value={addStudentForm.student_no}\n                  onChange={(e) => setAddStudentForm(prev => ({ ...prev, student_no: e.target.value }))}\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label>姓名：<span className=\"required-mark\">*</span></label>\n                <input \n                  type=\"text\" \n                  placeholder=\"请输入学生姓名\"\n                  value={addStudentForm.name}\n                  onChange={(e) => setAddStudentForm(prev => ({ ...prev, name: e.target.value }))}\n                />\n              </div>\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>密码：<span className=\"required-mark\">*</span></label>\n                <input \n                  type=\"password\" \n                  placeholder=\"请输入初始密码\"\n                  value={addStudentForm.password}\n                  onChange={(e) => setAddStudentForm(prev => ({ ...prev, password: e.target.value }))}\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label>邮箱：</label>\n                <input \n                  type=\"email\" \n                  placeholder=\"请输入邮箱地址\"\n                  value={addStudentForm.email}\n                  onChange={(e) => setAddStudentForm(prev => ({ ...prev, email: e.target.value }))}\n                />\n              </div>\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>手机号：</label>\n                <input \n                  type=\"tel\" \n                  placeholder=\"请输入手机号码\"\n                  value={addStudentForm.phone}\n                  onChange={(e) => setAddStudentForm(prev => ({ ...prev, phone: e.target.value }))}\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label>学校：</label>\n                <select \n                  value={addStudentForm.school_id} \n                  onChange={(e) => handleAddStudentSchoolChange(e.target.value)}\n                >\n                  <option value=\"\">请选择学校（可选）</option>\n                  {schools.map(school => (\n                    <option key={school.id} value={school.id}>\n                      {school.name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>专业：</label>\n                <select \n                  value={addStudentForm.major_id} \n                  onChange={(e) => handleAddStudentMajorChange(e.target.value)}\n                  disabled={!addStudentForm.school_id}\n                >\n                  <option value=\"\">请选择专业（可选）</option>\n                  {majors.map(major => (\n                    <option key={major.id} value={major.id}>\n                      {major.name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              \n              <div className=\"form-group\">\n                <label>班级：</label>\n                <select \n                  value={addStudentForm.class_id} \n                  onChange={(e) => setAddStudentForm(prev => ({ ...prev, class_id: e.target.value }))}\n                  disabled={!addStudentForm.major_id}\n                >\n                  <option value=\"\">请选择班级（可选）</option>\n                  {classes.map(classItem => (\n                    <option key={classItem.id} value={classItem.id}>\n                      {classItem.name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n            \n            <div className=\"form-actions\">\n              <button \n                className=\"submit-btn\"\n                onClick={handleAddStudent}\n                disabled={loading || !addStudentForm.student_no || !addStudentForm.name || !addStudentForm.password}\n              >\n                {loading ? '创建中...' : '创建学生账号'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {activeSubTab === 'import' && (\n        <div className=\"section-content\">\n          <div className=\"section-header\">\n            <h2>📥 批量导入学生</h2>\n            <button \n              className=\"secondary-btn\"\n              onClick={() => setActiveSubTab('list')}\n            >\n              ← 返回学生列表\n            </button>\n          </div>\n          \n          <div className=\"import-form\">\n            <div className=\"form-help\">\n              <h3>导入说明</h3>\n              <p>请按以下格式准备CSV数据：</p>\n              <p><code>学号,姓名,密码[,邮箱][,手机号]</code></p>\n              <p>例如：</p>\n              <p><code>2021001,张三,123456,zhangsan@example.com,13800138000</code></p>\n              <p><code>2021002,李四,123456</code></p>\n              <p>注意：学号、姓名、密码为必填项，邮箱和手机号为可选项</p>\n              <p>学校、专业、班级信息可在下方选择，将应用到所有导入的学生</p>\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>学校：</label>\n                <select \n                  value={selectedSchool} \n                  onChange={(e) => handleSchoolChange(e.target.value)}\n                >\n                  <option value=\"\">请选择学校（可选）</option>\n                  {schools.map(school => (\n                    <option key={school.id} value={school.id}>\n                      {school.name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              \n              <div className=\"form-group\">\n                <label>专业：</label>\n                <select \n                  value={selectedMajor} \n                  onChange={(e) => handleMajorChange(e.target.value)}\n                  disabled={!selectedSchool}\n                >\n                  <option value=\"\">请选择专业（可选）</option>\n                  {majors.map(major => (\n                    <option key={major.id} value={major.id}>\n                      {major.name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>班级：</label>\n                <select \n                  value={selectedClass} \n                  onChange={(e) => setSelectedClass(e.target.value)}\n                  disabled={!selectedMajor}\n                >\n                  <option value=\"\">请选择班级（可选）</option>\n                  {classes.map(classItem => (\n                    <option key={classItem.id} value={classItem.id}>\n                      {classItem.name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n            \n            <div className=\"form-group\">\n              <label>学生数据：<span className=\"required-mark\">*</span></label>\n              <textarea\n                placeholder=\"请粘贴CSV格式的学生数据，每行一个学生\"\n                value={importData}\n                onChange={(e) => setImportData(e.target.value)}\n                rows={10}\n              />\n            </div>\n            \n            <div className=\"form-actions\">\n              <button \n                className=\"submit-btn\"\n                onClick={handleBatchImport}\n                disabled={loading || !importData.trim()}\n              >\n                {loading ? '导入中...' : '开始导入'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n\n  // 题目管理标签页渲染函数\n  const renderProblemsTab = () => (\n    <div className=\"tab-content\">\n      <div className=\"sub-tabs\">\n        <button \n          className={`sub-tab-btn ${activeSubTab === 'list' ? 'active' : ''}`}\n          onClick={() => setActiveSubTab('list')}\n        >\n          题目列表\n        </button>\n        <button \n          className={`sub-tab-btn ${activeSubTab === 'create' ? 'active' : ''}`}\n          onClick={() => setActiveSubTab('create')}\n        >\n          创建题目\n        </button>\n        <button \n          className={`sub-tab-btn ${activeSubTab === 'ai' ? 'active' : ''}`}\n          onClick={() => setActiveSubTab('ai')}\n        >\n          AI生题\n        </button>\n      </div>\n\n      {activeSubTab === 'list' && (\n        <div className=\"section-content\">\n          <div className=\"section-header\">\n            <h2>题目列表</h2>\n            <button \n              className=\"add-btn\"\n              onClick={() => setActiveSubTab('create')}\n            >\n              创建题目\n            </button>\n          </div>\n          \n          <div className=\"problems-table\">\n            <table>\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>标题</th>\n                  <th>类型</th>\n                  <th>难度</th>\n                  <th>时间限制</th>\n                  <th>内存限制</th>\n                  <th>操作</th>\n                </tr>\n              </thead>\n              <tbody>\n                {problems.map(problem => {\n                  // 调试信息：打印每个题目的类型\n                  console.log(`=== 题目 ${problem.id} 调试信息 ===`);\n                  console.log('题目标题:', problem.title);\n                  console.log('原始类型:', problem.type);\n                  console.log('完整题目对象:', problem);\n                  console.log('所有字段名:', Object.keys(problem));\n                  console.log('选项字段:', problem.options);\n                  console.log('答案字段:', problem.answer);\n                  console.log('测试用例字段:', problem.test_cases);\n                  console.log('期望输出字段:', problem.expected_output);\n                  \n                  const inferredType = inferProblemType(problem);\n                  console.log('推断类型:', inferredType);\n                  console.log('=== 调试信息结束 ===');\n                  \n                  return (\n                    <tr key={problem.id}>\n                      <td>{problem.id}</td>\n                      <td>{problem.title}</td>\n                      <td>\n                        {(() => {\n                          const inferredType = inferProblemType(problem);\n                          const displayType = inferredType === 'choice' ? '选择题' : \n                                            inferredType === 'judge' ? '判断题' : \n                                            inferredType === 'short_answer' ? '简答题' : '编程题';\n                          \n                          return (\n                            <span className={`type-badge ${inferredType}`}>\n                              {displayType}\n                            </span>\n                          );\n                        })()}\n                        {/* 调试信息 */}\n                        <small style={{display: 'block', color: '#999', fontSize: '10px'}}>\n                          原始类型: {problem.type || 'undefined'} | 推断类型: {inferProblemType(problem)}\n                        </small>\n                      </td>\n                      <td>\n                        <span className={`difficulty-badge ${problem.difficulty}`}>\n                          {problem.difficulty === 'easy' ? '简单' : \n                           problem.difficulty === 'medium' ? '中等' : '困难'}\n                        </span>\n                      </td>\n                      <td>{problem.time_limit || '-'}ms</td>\n                      <td>{problem.memory_limit || '-'}MB</td>\n                      <td>\n                        <button \n                          className=\"action-btn edit\"\n                          onClick={() => handleEditProblem(problem)}\n                        >\n                          编辑\n                        </button>\n                        <button \n                          className=\"action-btn delete\"\n                          onClick={() => handleDeleteProblem(problem.id)}\n                        >\n                          删除\n                        </button>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n\n      {activeSubTab === 'create' && (\n        <div className=\"section-content\">\n          <div className=\"section-header\">\n            <h2>{isEditing ? '✏️ 编辑题目' : '➕ 创建题目'}</h2>\n            <button \n              className=\"secondary-btn\"\n              onClick={handleCancelEdit}\n            >\n              ← 返回题目列表\n            </button>\n          </div>\n          \n          <div className=\"problem-form\">\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>题目标题：<span className=\"required-mark\">*</span></label>\n                <input \n                  type=\"text\" \n                  placeholder=\"请输入题目标题\"\n                  value={problemForm.title}\n                  onChange={(e) => setProblemForm(prev => ({ ...prev, title: e.target.value }))}\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label>题目类型：<span className=\"required-mark\">*</span></label>\n                <select \n                  value={problemForm.type}\n                  onChange={(e) => handleProblemTypeChange(e.target.value)}\n                >\n                  <option value=\"programming\">编程题</option>\n                  <option value=\"choice\">选择题</option>\n                  <option value=\"judge\">判断题</option>\n                  <option value=\"short_answer\">简答题</option>\n                </select>\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>难度：<span className=\"required-mark\">*</span></label>\n                <select \n                  value={problemForm.difficulty}\n                  onChange={(e) => setProblemForm(prev => ({ ...prev, difficulty: e.target.value }))}\n                >\n                  <option value=\"easy\">简单</option>\n                  <option value=\"medium\">中等</option>\n                  <option value=\"hard\">困难</option>\n                </select>\n              </div>\n              \n              {problemForm.type === 'choice' && (\n                <div className=\"form-group\">\n                  <label>选择类型：</label>\n                  <div className=\"checkbox-group\">\n                    <label className=\"checkbox-label\">\n                      <input \n                        type=\"checkbox\"\n                        checked={problemForm.is_multiple_choice}\n                        onChange={(e) => setProblemForm(prev => ({ \n                          ...prev, \n                          is_multiple_choice: e.target.checked \n                        }))}\n                      />\n                      <span>多选题</span>\n                    </label>\n                  </div>\n                </div>\n              )}\n            </div>\n            \n            <div className=\"form-group\">\n              <label>题目描述：<span className=\"required-mark\">*</span></label>\n              <textarea\n                placeholder=\"请输入题目描述\"\n                value={problemForm.description}\n                onChange={(e) => setProblemForm(prev => ({ ...prev, description: e.target.value }))}\n                rows={6}\n              />\n            </div>\n\n            {/* 选择题选项管理 */}\n            {problemForm.type === 'choice' && (\n              <div className=\"form-group\">\n                <label>选项：<span className=\"required-mark\">*</span></label>\n                <div className=\"choice-options\">\n                  {problemForm.options.map((option, index) => (\n                    <div key={option.id} className=\"choice-option\">\n                      <div className=\"option-header\">\n                        <span className=\"option-label\">选项 {String.fromCharCode(65 + index)}</span>\n                        <div className=\"option-controls\">\n                          <label className=\"checkbox-label\">\n                            <input \n                              type=\"checkbox\"\n                              checked={option.is_correct}\n                              onChange={() => toggleChoiceOptionCorrect(option.id)}\n                            />\n                            <span>正确答案</span>\n                          </label>\n                          {problemForm.options.length > 2 && (\n                            <button \n                              type=\"button\"\n                              className=\"remove-option-btn\"\n                              onClick={() => removeChoiceOption(option.id)}\n                            >\n                              删除\n                            </button>\n                          )}\n                        </div>\n                      </div>\n                      <input \n                        type=\"text\" \n                        placeholder={`请输入选项 ${String.fromCharCode(65 + index)} 的内容`}\n                        value={option.text}\n                        onChange={(e) => updateChoiceOption(option.id, 'text', e.target.value)}\n                        className=\"option-input\"\n                      />\n                    </div>\n                  ))}\n                  <button \n                    type=\"button\"\n                    className=\"add-option-btn\"\n                    onClick={addChoiceOption}\n                  >\n                    + 添加选项\n                  </button>\n                </div>\n                <small>至少需要2个选项，最多支持10个选项</small>\n              </div>\n            )}\n\n            {/* 判断题选项管理 */}\n            {problemForm.type === 'judge' && (\n              <div className=\"form-group\">\n                <label>选项：<span className=\"required-mark\">*</span></label>\n                <div className=\"choice-options\">\n                  {problemForm.options.map((option, index) => (\n                    <div key={option.id} className=\"choice-option\">\n                      <div className=\"option-header\">\n                        <span className=\"option-label\">选项 {index + 1}</span>\n                        <div className=\"option-controls\">\n                          <label className=\"checkbox-label\">\n                            <input \n                              type=\"checkbox\"\n                              checked={option.is_correct}\n                              onChange={() => toggleChoiceOptionCorrect(option.id)}\n                            />\n                            <span>正确答案</span>\n                          </label>\n                        </div>\n                      </div>\n                      <input \n                        type=\"text\" \n                        value={option.text}\n                        onChange={(e) => updateChoiceOption(option.id, 'text', e.target.value)}\n                        className=\"option-input\"\n                        readOnly\n                      />\n                      <small className=\"option-hint\">判断题选项不可编辑</small>\n                    </div>\n                  ))}\n                </div>\n                <small>判断题固定为\"正确\"和\"错误\"两个选项，请选择其中一个作为正确答案</small>\n              </div>\n            )}\n            \n            {/* 简答题答案 */}\n            {problemForm.type === 'short_answer' && (\n              <div className=\"form-group\">\n                <label>答案：<span className=\"required-mark\">*</span></label>\n                <textarea\n                  placeholder=\"请输入简答题的标准答案\"\n                  value={problemForm.answer}\n                  onChange={(e) => setProblemForm(prev => ({ ...prev, answer: e.target.value }))}\n                  rows={6}\n                />\n                <small>请提供详细的答案内容，供学生参考和教师评分使用</small>\n              </div>\n            )}\n            \n            {/* 编程题相关字段 */}\n            {problemForm.type === 'programming' && (\n              <>\n                <div className=\"form-row\">\n                  <div className=\"form-group\">\n                    <label>测试用例：<span className=\"required-mark\">*</span></label>\n                    <textarea\n                      placeholder=\"请输入测试用例，每行一个\"\n                      value={problemForm.test_cases}\n                      onChange={(e) => setProblemForm(prev => ({ ...prev, test_cases: e.target.value }))}\n                      rows={4}\n                    />\n                  </div>\n                  \n                  <div className=\"form-group\">\n                    <label>期望输出：<span className=\"required-mark\">*</span></label>\n                    <textarea\n                      placeholder=\"请输入期望输出，每行一个\"\n                      value={problemForm.expected_output}\n                      onChange={(e) => setProblemForm(prev => ({ ...prev, expected_output: e.target.value }))}\n                      rows={4}\n                    />\n                  </div>\n                </div>\n                \n                <div className=\"form-row\">\n                  <div className=\"form-group\">\n                    <label>时间限制：<span className=\"required-mark\">*</span></label>\n                    <input \n                      type=\"number\" \n                      placeholder=\"请输入时间限制（毫秒）\"\n                      value={problemForm.time_limit}\n                      onChange={(e) => setProblemForm(prev => ({ ...prev, time_limit: parseInt(e.target.value) || 1000 }))}\n                      min=\"100\"\n                      max=\"10000\"\n                    />\n                    <small>单位：毫秒，范围：100-10000</small>\n                  </div>\n                  \n                  <div className=\"form-group\">\n                    <label>内存限制：<span className=\"required-mark\">*</span></label>\n                    <input \n                      type=\"number\" \n                      placeholder=\"请输入内存限制（MB）\"\n                      value={problemForm.memory_limit}\n                      onChange={(e) => setProblemForm(prev => ({ ...prev, memory_limit: parseInt(e.target.value) || 128 }))}\n                      min=\"16\"\n                      max=\"512\"\n                    />\n                    <small>单位：MB，范围：16-512</small>\n                  </div>\n                </div>\n              </>\n            )}\n            \n            <div className=\"form-actions\">\n              <button \n                className=\"submit-btn\"\n                onClick={handleCreateProblem}\n                disabled={loading || !problemForm.title || !problemForm.description || \n                  (problemForm.type === 'programming' && (!problemForm.test_cases || !problemForm.expected_output)) ||\n                  (problemForm.type === 'choice' && (problemForm.options.length < 2 || \n                    problemForm.options.some(option => !option.text) || \n                    problemForm.correct_answers.length === 0)) ||\n                  (problemForm.type === 'judge' && problemForm.correct_answers.length !== 1) ||\n                  (problemForm.type === 'short_answer' && !problemForm.answer)}\n              >\n                {loading ? (isEditing ? '更新中...' : '创建中...') : (isEditing ? '更新题目' : '创建题目')}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {activeSubTab === 'ai' && (\n        <AIProblemGenerationPage />\n      )}\n    </div>\n  );\n\n  // 课程查看标签页渲染函数（只读功能）\n  const renderCoursesTab = () => (\n    <div className=\"tab-content\">\n      <div className=\"sub-tabs\">\n        <button \n          className={`sub-tab-btn ${activeSubTab === 'list' ? 'active' : ''}`}\n          onClick={() => {\n            setActiveSubTab('list');\n            // 如果当前在课程详情页，清除课程详情状态\n            if (activeSubTab === 'detail') {\n              setEditingCourse(null);\n            }\n            // 清除添加学生上下文\n            setAddingStudentContext('');\n          }}\n        >\n          课程列表\n        </button>\n        <button \n          className={`sub-tab-btn ${activeSubTab === 'detail' ? 'active' : ''}`}\n          onClick={() => setActiveSubTab('detail')}\n          style={{ display: (editingCourse && activeSubTab === 'detail') ? 'inline-block' : 'none' }}\n        >\n          课程详情\n        </button>\n        <button \n          className={`sub-tab-btn ${activeSubTab === 'add-student-to-course' ? 'active' : ''}`}\n          onClick={() => setActiveSubTab('add-student-to-course')}\n          style={{ display: (editingCourse && activeSubTab === 'detail') ? 'inline-block' : 'none' }}\n        >\n          添加学生\n        </button>\n      </div>\n\n      {activeSubTab === 'list' && (\n        <div className=\"section-content\">\n          <div className=\"section-header\">\n            <h2>我的课程</h2>\n            <div className=\"section-info\">\n              <p>您可以在课程详情页中查看学生信息、添加学生和布置作业</p>\n            </div>\n          </div>\n          \n          <div className=\"courses-grid\">\n            {courses.length === 0 ? (\n              <div className=\"empty-state\">\n                <p>暂无课程，请联系管理员添加课程</p>\n              </div>\n            ) : (\n              courses.map(course => (\n                <div key={course.id} className=\"course-card\">\n                  <div className=\"course-header\">\n                    <h3>{course.name}</h3>\n                    <span className=\"course-status active\">进行中</span>\n                  </div>\n                  <div className=\"course-info\">\n                    <p><strong>教学班：</strong>{course.class_name}</p>\n                    <p><strong>专业：</strong>{course.major_name}</p>\n                    <p><strong>学校：</strong>{course.school_name}</p>\n                    <p><strong>学生数量：</strong>{course.student_count || 0}人</p>\n                    <p><strong>创建时间：</strong>{formatDate(course.created_at)}</p>\n                  </div>\n                  <div className=\"course-actions\">\n                    <button \n                      className=\"action-btn primary\"\n                      onClick={() => handleViewCourseDetail(course.id)}\n                    >\n                      查看详情\n                    </button>\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n      )}\n\n      {activeSubTab === 'detail' && editingCourse && (\n        <div className=\"section-content\">\n          <div className=\"section-header\">\n            <h2>📚 课程详情：{editingCourse.name}</h2>\n            <button \n              className=\"secondary-btn\"\n              onClick={() => {\n                setActiveSubTab('list');\n                setEditingCourse(null);\n              }}\n            >\n              ← 返回课程列表\n            </button>\n          </div>\n          \n          <div className=\"course-detail\">\n            <div className=\"course-info-section\">\n              <h3>课程基本信息</h3>\n              <div className=\"info-grid\">\n                <div className=\"info-item\">\n                  <label>课程名称：</label>\n                  <span>{editingCourse.name}</span>\n                </div>\n                <div className=\"info-item\">\n                  <label>课程描述：</label>\n                  <span>{editingCourse.description}</span>\n                </div>\n                <div className=\"info-item\">\n                  <label>教学班：</label>\n                  <span>{editingCourse.class_name}</span>\n                </div>\n                <div className=\"info-item\">\n                  <label>专业：</label>\n                  <span>{editingCourse.major_name}</span>\n                </div>\n                <div className=\"info-item\">\n                  <label>学校：</label>\n                  <span>{editingCourse.school_name}</span>\n                </div>\n                <div className=\"info-item\">\n                  <label>学生数量：</label>\n                  <span>{editingCourse.student_count || 0}人</span>\n                </div>\n                <div className=\"info-item\">\n                  <label>创建时间：</label>\n                  <span>{formatDate(editingCourse.created_at)}</span>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"course-students-section\">\n              <div className=\"section-header\">\n                <h3>教学班学生</h3>\n                <button \n                  className=\"add-btn\"\n                  onClick={() => {\n                    // 设置添加学生上下文为课程详情页\n                    setAddingStudentContext('course-detail');\n                    setActiveSubTab('add-student-to-course');\n                  }}\n                >\n                  添加学生\n                </button>\n              </div>\n              <div className=\"students-table\">\n                <table>\n                  <thead>\n                    <tr>\n                      <th>学号</th>\n                      <th>姓名</th>\n                      <th>邮箱</th>\n                      <th>状态</th>\n                      <th>操作</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {(() => {\n                      // 获取当前课程的所有学生\n                      const courseStudents = [];\n                      \n                      // 1. 添加原本属于该教学班的学生\n                      const originalStudents = users.filter(user => \n                        user.class_id === editingCourse.class_id && user.role === 'student'\n                      );\n                      courseStudents.push(...originalStudents);\n                      \n                      // 2. 添加通过关联关系添加的学生\n                      const relatedStudents = studentClassRelations\n                        .filter(relation => relation.course_id === editingCourse.id)\n                        .map(relation => {\n                          // 查找学生的完整信息\n                          const studentInfo = users.find(user => user.id === relation.student_id);\n                          return {\n                            ...studentInfo,\n                            // 使用关联关系中的信息作为后备\n                            name: studentInfo ? studentInfo.name : relation.student_name,\n                            username: studentInfo ? studentInfo.username : relation.student_no,\n                            // 标记这是通过关联关系添加的学生\n                            isRelatedStudent: true,\n                            relationId: `${relation.student_id}_${relation.course_id}`\n                          };\n                        });\n                      courseStudents.push(...relatedStudents);\n                      \n                      if (courseStudents.length === 0) {\n                        return (\n                          <tr>\n                            <td colSpan=\"5\">\n                              <div className=\"empty-state\">\n                                <p>该教学班暂无学生</p>\n                              </div>\n                            </td>\n                          </tr>\n                        );\n                      }\n                      \n                      return courseStudents.map(student => (\n                        <tr key={student.id || student.relationId}>\n                          <td>{student.username}</td>\n                          <td>{student.name}</td>\n                          <td>{student.email || '-'}</td>\n                          <td>\n                            <span className={`status-badge ${student.isRelatedStudent ? 'related' : 'original'}`}>\n                              {student.isRelatedStudent ? '已添加' : '原班级'}\n                            </span>\n                          </td>\n                          <td>\n                            {student.isRelatedStudent && (\n                              <button \n                                className=\"action-btn delete\"\n                                onClick={() => handleRemoveStudentFromCourse(student.relationId)}\n                              >\n                                移除\n                              </button>\n                            )}\n                          </td>\n                        </tr>\n                      ));\n                    })()}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n\n            <div className=\"course-assignments-section\">\n              <div className=\"section-header\">\n                <h3>已布置作业</h3>\n                <button \n                  className=\"add-btn\"\n                  onClick={() => {\n                    // 自动设置当前课程ID到作业表单\n                    setAssignmentForm(prev => ({\n                      ...prev,\n                      course_id: editingCourse.id\n                    }));\n                    // 设置编辑作业上下文为课程详情页\n                    setEditingAssignmentContext('course-detail');\n                    setActiveSubTab('create-assignment');\n                  }}\n                >\n                  布置作业\n                </button>\n              </div>\n              <div className=\"assignments-table\">\n                <table>\n                  <thead>\n                    <tr>\n                      <th>作业名称</th>\n                      <th>描述</th>\n                      <th>截止时间</th>\n                      <th>状态</th>\n                      <th>操作</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {assignments.filter(assignment => assignment.course_id === editingCourse.id).map(assignment => (\n                      <tr key={assignment.id}>\n                        <td>{assignment.name}</td>\n                        <td>{assignment.description}</td>\n                        <td>{formatDate(assignment.due_date)}</td>\n                        <td>\n                          <span className={`status-badge ${assignment.is_active ? 'active' : 'inactive'}`}>\n                            {assignment.is_active ? '进行中' : '已结束'}\n                          </span>\n                        </td>\n                        <td>\n                          <button \n                            className=\"action-btn edit\"\n                            onClick={() => handleEditAssignment(assignment)}\n                          >\n                            编辑\n                          </button>\n                          <button \n                            className=\"action-btn delete\"\n                            onClick={() => handleDeleteAssignment(assignment.id)}\n                          >\n                            删除\n                          </button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n                {assignments.filter(assignment => assignment.course_id === editingCourse.id).length === 0 && (\n                  <div className=\"empty-state\">\n                    <p>该课程暂无作业</p>\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {/* 作业创建表单 */}\n            {activeSubTab === 'create-assignment' && (\n              <div className=\"course-assignment-form\">\n                <div className=\"section-header\">\n                  <h3>📝 布置作业（{editingCourse.name}）</h3>\n                  <button \n                    className=\"secondary-btn\"\n                    onClick={() => setActiveSubTab('detail')}\n                  >\n                    ← 返回课程详情\n                  </button>\n                </div>\n                \n                <div className=\"assignment-form\">\n                  <div className=\"form-row\">\n                    <div className=\"form-group\">\n                      <label>作业名称：<span className=\"required-mark\">*</span></label>\n                      <input \n                        type=\"text\" \n                        placeholder=\"请输入作业名称\"\n                        value={assignmentForm.name}\n                        onChange={(e) => setAssignmentForm(prev => ({ ...prev, name: e.target.value }))}\n                      />\n                    </div>\n                    \n                    <div className=\"form-group\">\n                      <label>课程：</label>\n                      <input \n                        type=\"text\" \n                        value={editingCourse.name}\n                        disabled\n                        className=\"disabled-input\"\n                      />\n                    </div>\n                  </div>\n                  \n                  <div className=\"form-group\">\n                    <label>作业描述：<span className=\"required-mark\">*</span></label>\n                    <textarea\n                      placeholder=\"请输入作业描述\"\n                      value={assignmentForm.description}\n                      onChange={(e) => setAssignmentForm(prev => ({ ...prev, description: e.target.value }))}\n                      rows={4}\n                    />\n                  </div>\n                  \n                  <div className=\"form-group\">\n                    <label>作业要求：<span className=\"required-mark\">*</span></label>\n                    <textarea\n                      placeholder=\"请输入作业要求\"\n                      value={assignmentForm.requirements}\n                      onChange={(e) => setAssignmentForm(prev => ({ ...prev, requirements: e.target.value }))}\n                      rows={4}\n                    />\n                  </div>\n                  \n                  <div className=\"form-row\">\n                    <div className=\"form-group\">\n                      <label>截止时间：<span className=\"required-mark\">*</span></label>\n                      <input \n                        type=\"datetime-local\" \n                        value={assignmentForm.due_date}\n                        onChange={(e) => setAssignmentForm(prev => ({ ...prev, due_date: e.target.value }))}\n                      />\n                    </div>\n                  </div>\n                  \n                  <div className=\"form-group\">\n                    <label>选择题目：</label>\n                    <div className=\"problem-selection\">\n                      {problems.map(problem => (\n                        <label key={problem.id} className=\"problem-checkbox\">\n                          <input \n                            type=\"checkbox\" \n                            value={problem.id}\n                            checked={assignmentForm.problem_ids.includes(problem.id)}\n                            onChange={(e) => {\n                              if (e.target.checked) {\n                                setAssignmentForm(prev => ({ \n                                  ...prev, \n                                  problem_ids: [...prev.problem_ids, problem.id] \n                                }));\n                              } else {\n                                setAssignmentForm(prev => ({ \n                                  ...prev, \n                                  problem_ids: prev.problem_ids.filter(id => id !== problem.id) \n                                }));\n                              }\n                            }}\n                          />\n                          <span className=\"problem-title\">{problem.title}</span>\n                          <span className={`difficulty-badge ${problem.difficulty}`}>\n                            {problem.difficulty === 'easy' ? '简单' : \n                             problem.difficulty === 'medium' ? '中等' : '困难'}\n                          </span>\n                        </label>\n                      ))}\n                    </div>\n                  </div>\n                  \n                  <div className=\"form-actions\">\n                    <button \n                      className=\"submit-btn\"\n                      onClick={handleCreateAssignment}\n                      disabled={loading || !assignmentForm.name || !assignmentForm.description || !assignmentForm.requirements || !assignmentForm.due_date || !assignmentForm.course_id}\n                    >\n                      {loading ? '创建中...' : '布置作业'}\n                    </button>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* 添加学生到课程的表单 */}\n            {activeSubTab === 'add-student-to-course' && editingCourse && (\n              <div className=\"section-content\">\n                <div className=\"section-header\">\n                  <h3>👥 添加学生到课程：{editingCourse.name}</h3>\n                  <button \n                    className=\"secondary-btn\"\n                    onClick={() => setActiveSubTab('detail')}\n                  >\n                    ← 返回课程详情\n                  </button>\n                </div>\n                \n                <div className=\"add-student-to-course-form\">\n                  <div className=\"form-help\">\n                    <p>请选择要添加到该课程的学生：</p>\n                    <p>注意：只能添加已存在的学生账号</p>\n                  </div>\n                  \n                  <div className=\"form-row\">\n                    <div className=\"form-group\">\n                      <label>学号：<span className=\"required-mark\">*</span></label>\n                      <input \n                        type=\"text\" \n                        placeholder=\"请输入学号\"\n                        value={addStudentForm.student_no}\n                        onChange={(e) => setAddStudentForm(prev => ({ ...prev, student_no: e.target.value }))}\n                      />\n                    </div>\n                    \n                    <div className=\"form-group\">\n                      <label>姓名：<span className=\"required-mark\">*</span></label>\n                      <input \n                        type=\"text\" \n                        placeholder=\"请输入学生姓名\"\n                        value={addStudentForm.name}\n                        onChange={(e) => setAddStudentForm(prev => ({ ...prev, name: e.target.value }))}\n                      />\n                    </div>\n                  </div>\n                  \n                  <div className=\"form-actions\">\n                    <button \n                      className=\"submit-btn\"\n                      onClick={handleAddStudentToCourse}\n                      disabled={loading || !addStudentForm.student_no || !addStudentForm.name}\n                    >\n                      {loading ? '添加中...' : '添加学生到课程'}\n                    </button>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n\n  // 学生相关处理函数\n  const handleAddStudent = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      setSuccess('');\n      \n      await registerStudent(addStudentForm);\n      setSuccess('学生账号创建成功！');\n      \n      // 重置表单\n      setAddStudentForm({\n        student_no: '',\n        name: '',\n        password: '',\n        email: '',\n        phone: '',\n        school_id: '',\n        major_id: '',\n        class_id: ''\n      });\n      \n      // 刷新用户列表\n      const usersData = await getUsers(1, 50, 'student');\n      setUsers(usersData.users);\n      \n      // 切换到学生列表\n      setActiveSubTab('list');\n      \n    } catch (error) {\n      setError(error.response?.data?.error || '创建学生账号失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleEditStudentClick = (user) => {\n    setEditingUser(user);\n    setEditForm({\n      email: user.email || '',\n      phone: user.phone || '',\n      school_id: user.school_id || '',\n      major_id: user.major_id || '',\n      class_id: user.class_id || '',\n      new_password: ''\n    });\n    setError('');\n    setSuccess('');\n  };\n\n  const handleSaveStudent = async () => {\n    if (!editingUser) return;\n    try {\n      setLoading(true);\n      setError('');\n      setSuccess('');\n      await updateUser(editingUser.id, editForm);\n      setSuccess('学生信息已更新');\n      // 刷新列表\n      const usersData = await getUsers(1, 50, 'student');\n      setUsers(usersData.users);\n      setEditingUser(null);\n    } catch (error) {\n      setError(error.response?.data?.error || '更新学生信息失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCancelEditStudent = () => {\n    setEditingUser(null);\n    setEditForm({ email: '', phone: '', school_id: '', major_id: '', class_id: '', new_password: '' });\n  };\n\n  const handleDeleteStudent = async (userId) => {\n    if (!window.confirm('确定要删除该学生吗？此操作不可恢复。')) return;\n    try {\n      setLoading(true);\n      setError('');\n      setSuccess('');\n      await deleteUser(userId);\n      setSuccess('学生已删除');\n      const usersData = await getUsers(1, 50, 'student');\n      setUsers(usersData.users);\n    } catch (error) {\n      setError(error.response?.data?.error || '删除学生失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAddStudentSchoolChange = async (schoolId) => {\n    setAddStudentForm(prev => ({ \n      ...prev, \n      school_id: schoolId, \n      major_id: '', \n      class_id: '' \n    }));\n    \n    if (schoolId) {\n      try {\n        const majorsData = await getMajors(schoolId);\n        setMajors(majorsData);\n      } catch (error) {\n        console.error('Error fetching majors:', error);\n      }\n    } else {\n      setMajors([]);\n      setClasses([]);\n    }\n  };\n\n  const handleAddStudentMajorChange = async (majorId) => {\n    setAddStudentForm(prev => ({ \n      ...prev, \n      major_id: majorId, \n      class_id: '' \n    }));\n    \n    if (majorId) {\n      try {\n        const classesData = await getClasses(majorId);\n        setClasses(classesData);\n      } catch (error) {\n        console.error('Error fetching classes:', error);\n      }\n    } else {\n      setClasses([]);\n    }\n  };\n\n  // 选择题选项管理函数\n  const addChoiceOption = () => {\n    setProblemForm(prev => ({\n      ...prev,\n      options: [...prev.options, { id: Date.now(), text: '', is_correct: false }]\n    }));\n  };\n\n  const removeChoiceOption = (optionId) => {\n    setProblemForm(prev => ({\n      ...prev,\n      options: prev.options.filter(option => option.id !== optionId)\n    }));\n  };\n\n  const updateChoiceOption = (optionId, field, value) => {\n    setProblemForm(prev => ({\n      ...prev,\n      options: prev.options.map(option => \n        option.id === optionId ? { ...option, [field]: value } : option\n      )\n    }));\n  };\n\n  const toggleChoiceOptionCorrect = (optionId) => {\n    setProblemForm(prev => {\n      let updatedOptions;\n      \n      if (prev.type === 'judge') {\n        // 判断题：单选模式，点击一个选项时取消其他选项\n        updatedOptions = prev.options.map(option => ({\n          ...option,\n          is_correct: option.id === optionId ? !option.is_correct : false\n        }));\n      } else {\n        // 选择题：多选模式，可以同时选择多个选项\n        updatedOptions = prev.options.map(option => \n          option.id === optionId ? { ...option, is_correct: !option.is_correct } : option\n        );\n      }\n      \n      // 更新正确答案数组\n      let correctAnswers;\n      if (prev.type === 'judge') {\n        // 判断题：使用选项文本作为正确答案\n        correctAnswers = updatedOptions\n          .filter(option => option.is_correct)\n          .map(option => option.text);\n      } else {\n        // 选择题：使用选项ID作为正确答案\n        correctAnswers = updatedOptions\n          .filter(option => option.is_correct)\n          .map(option => option.id);\n      }\n      \n      return {\n        ...prev,\n        options: updatedOptions,\n        correct_answers: correctAnswers\n      };\n    });\n  };\n\n  const handleProblemTypeChange = (type) => {\n    setProblemForm(prev => {\n      if (type === 'choice') {\n        // 切换到选择题时，初始化至少两个选项\n        return {\n          ...prev,\n          type,\n          options: [\n            { id: Date.now(), text: '', is_correct: false },\n            { id: Date.now() + 1, text: '', is_correct: false }\n          ],\n          correct_answers: [],\n          is_multiple_choice: false\n        };\n      } else if (type === 'judge') {\n        // 切换到判断题时，初始化两个固定选项\n        return {\n          ...prev,\n          type,\n          options: [\n            { id: 'judge_correct', text: '正确', is_correct: false },\n            { id: 'judge_incorrect', text: '错误', is_correct: false }\n          ],\n          correct_answers: [],\n          is_multiple_choice: false\n        };\n      } else if (type === 'short_answer') {\n        // 切换到简答题时，清空选项相关字段，添加答案字段\n        return {\n          ...prev,\n          type,\n          options: [],\n          correct_answers: [],\n          is_multiple_choice: false,\n          answer: '' // 简答题答案\n        };\n      } else {\n        // 切换到其他题型时，清空选择题相关字段\n        return {\n          ...prev,\n          type,\n          options: [],\n          correct_answers: [],\n          is_multiple_choice: false\n        };\n      }\n    });\n  };\n\n  return (\n    <div className=\"teacher-dashboard\">\n      <div className=\"dashboard-header\">\n        <h1>教师管理控制台</h1>\n      </div>\n      \n      <div className=\"dashboard-tabs\">\n        <button \n          className={`tab-btn ${activeTab === 'students' ? 'active' : ''}`}\n          onClick={() => {\n            setActiveTab('students');\n            setActiveSubTab('list');\n          }}\n        >\n          学生管理\n        </button>\n        <button \n          className={`tab-btn ${activeTab === 'problems' ? 'active' : ''}`}\n          onClick={() => {\n            setActiveTab('problems');\n            setActiveSubTab('list');\n          }}\n        >\n          题目管理\n        </button>\n        <button \n          className={`tab-btn ${activeTab === 'courses' ? 'active' : ''}`}\n          onClick={() => {\n            setActiveTab('courses');\n            setActiveSubTab('list');\n            // 清除课程详情状态\n            setEditingCourse(null);\n            setEditingAssignmentContext('');\n            setAddingStudentContext('');\n          }}\n        >\n          我的课程\n        </button>\n      </div>\n      \n      {error && <div className=\"error-message\">{error}</div>}\n      {success && <div className=\"success-message\">{success}</div>}\n      \n      {activeTab === 'students' && renderStudentsTab()}\n      {activeTab === 'problems' && renderProblemsTab()}\n      {activeTab === 'courses' && renderCoursesTab()}\n      \n      {/* 独立的布置作业表单面板 */}\n      {activeTab === 'courses' && activeSubTab === 'create-assignment' && editingCourse && (\n        <div className=\"tab-content\">\n          <div className=\"section-header\">\n            <h3>📝 布置作业（{editingCourse.name}）</h3>\n            <button \n              className=\"secondary-btn\"\n              onClick={() => setActiveSubTab('detail')}\n            >\n              ← 返回课程详情\n            </button>\n          </div>\n          \n          <div className=\"assignment-form\">\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>作业名称：<span className=\"required-mark\">*</span></label>\n                <input \n                  type=\"text\" \n                  placeholder=\"请输入作业名称\"\n                  value={assignmentForm.name}\n                  onChange={(e) => setAssignmentForm(prev => ({ ...prev, name: e.target.value }))}\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label>课程：</label>\n                <input \n                  type=\"text\" \n                  value={editingCourse.name}\n                  disabled\n                  className=\"disabled-input\"\n                />\n              </div>\n            </div>\n            \n            <div className=\"form-group\">\n              <label>作业描述：<span className=\"required-mark\">*</span></label>\n              <textarea\n                placeholder=\"请输入作业描述\"\n                value={assignmentForm.description}\n                onChange={(e) => setAssignmentForm(prev => ({ ...prev, description: e.target.value }))}\n                rows={4}\n              />\n            </div>\n            \n            <div className=\"form-group\">\n              <label>作业要求：<span className=\"required-mark\">*</span></label>\n              <textarea\n                placeholder=\"请输入作业要求\"\n                value={assignmentForm.requirements}\n                onChange={(e) => setAssignmentForm(prev => ({ ...prev, requirements: e.target.value }))}\n                rows={4}\n              />\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>截止时间：<span className=\"required-mark\">*</span></label>\n                <input \n                  type=\"datetime-local\" \n                  value={assignmentForm.due_date}\n                  onChange={(e) => setAssignmentForm(prev => ({ ...prev, due_date: e.target.value }))}\n                />\n              </div>\n            </div>\n            \n            <div className=\"form-group\">\n              <label>选择题目：</label>\n              <div className=\"problem-selection\">\n                {problems.map(problem => (\n                  <label key={problem.id} className=\"problem-checkbox\">\n                    <input \n                      type=\"checkbox\" \n                      value={problem.id}\n                      checked={assignmentForm.problem_ids.includes(problem.id)}\n                      onChange={(e) => {\n                        if (e.target.checked) {\n                          setAssignmentForm(prev => ({ \n                            ...prev, \n                            problem_ids: [...prev.problem_ids, problem.id] \n                          }));\n                        } else {\n                          setAssignmentForm(prev => ({ \n                            ...prev, \n                            problem_ids: prev.problem_ids.filter(id => id !== problem.id) \n                          }));\n                        }\n                      }}\n                    />\n                    <span className=\"problem-title\">{problem.title}</span>\n                    <span className={`difficulty-badge ${problem.difficulty}`}>\n                      {problem.difficulty === 'easy' ? '简单' : \n                       problem.difficulty === 'medium' ? '中等' : '困难'}\n                    </span>\n                  </label>\n                ))}\n              </div>\n            </div>\n            \n            <div className=\"form-actions\">\n              <button \n                className=\"submit-btn\"\n                onClick={handleCreateAssignment}\n                disabled={loading || !assignmentForm.name || !assignmentForm.description || !assignmentForm.requirements || !assignmentForm.due_date || !assignmentForm.course_id}\n              >\n                {loading ? '创建中...' : '布置作业'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 独立的添加学生到课程表单面板 */}\n      {activeTab === 'courses' && activeSubTab === 'add-student-to-course' && editingCourse && (\n        <div className=\"tab-content\">\n          <div className=\"section-header\">\n            <h3>👥 添加学生到课程：{editingCourse.name}</h3>\n            <button \n              className=\"secondary-btn\"\n              onClick={() => setActiveSubTab('detail')}\n            >\n              ← 返回课程详情\n            </button>\n          </div>\n          \n          <div className=\"add-student-to-course-form\">\n            <div className=\"form-help\">\n              <p>请选择要添加到该课程的学生：</p>\n              <p>注意：只能添加已存在的学生账号</p>\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>学号：<span className=\"required-mark\">*</span></label>\n                <input \n                  type=\"text\" \n                  placeholder=\"请输入学号\"\n                  value={addStudentForm.student_no}\n                  onChange={(e) => setAddStudentForm(prev => ({ ...prev, student_no: e.target.value }))}\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label>姓名：<span className=\"required-mark\">*</span></label>\n                <input \n                  type=\"text\" \n                  placeholder=\"请输入学生姓名\"\n                  value={addStudentForm.name}\n                  onChange={(e) => setAddStudentForm(prev => ({ ...prev, name: e.target.value }))}\n                />\n              </div>\n            </div>\n            \n            <div className=\"form-actions\">\n              <button \n                className=\"submit-btn\"\n                onClick={handleAddStudentToCourse}\n                disabled={loading || !addStudentForm.student_no || !addStudentForm.name}\n              >\n                {loading ? '添加中...' : '添加学生到课程'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* 编辑学生表单 - 全局显示 */}\n      {editingUser && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal\">\n            <div className=\"modal-header\">\n              <h3>编辑学生：{editingUser.name}（学号{editingUser.username}）</h3>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"form-row\">\n                <div className=\"form-group\">\n                  <label>邮箱：</label>\n                  <input type=\"email\" value={editForm.email} onChange={(e) => setEditForm(prev => ({ ...prev, email: e.target.value }))} />\n                </div>\n                <div className=\"form-group\">\n                  <label>手机号：</label>\n                  <input type=\"tel\" value={editForm.phone} onChange={(e) => setEditForm(prev => ({ ...prev, phone: e.target.value }))} />\n                </div>\n              </div>\n              <div className=\"form-row\">\n                <div className=\"form-group\">\n                  <label>学校：</label>\n                  <select value={editForm.school_id} onChange={async (e) => {\n                    const val = e.target.value;\n                    setEditForm(prev => ({ ...prev, school_id: val, major_id: '', class_id: '' }));\n                    if (val) {\n                      const majorsData = await getMajors(val);\n                      setMajors(majorsData);\n                    } else {\n                      setMajors([]);\n                      setClasses([]);\n                    }\n                  }}>\n                    <option value=\"\">请选择学校</option>\n                    {schools.map(s => <option key={s.id} value={s.id}>{s.name}</option>)}\n                  </select>\n                </div>\n                <div className=\"form-group\">\n                  <label>专业：</label>\n                  <select value={editForm.major_id} onChange={async (e) => {\n                    const val = e.target.value;\n                    setEditForm(prev => ({ ...prev, major_id: val, class_id: '' }));\n                    if (val) {\n                      const classesData = await getClasses(val);\n                      setClasses(classesData);\n                    } else {\n                      setClasses([]);\n                    }\n                  }} disabled={!editForm.school_id}>\n                    <option value=\"\">请选择专业</option>\n                    {majors.map(m => <option key={m.id} value={m.id}>{m.name}</option>)}\n                  </select>\n                </div>\n              </div>\n              <div className=\"form-row\">\n                <div className=\"form-group\">\n                  <label>班级：</label>\n                  <select value={editForm.class_id} onChange={(e) => setEditForm(prev => ({ ...prev, class_id: e.target.value }))} disabled={!editForm.major_id}>\n                    <option value=\"\">请选择班级</option>\n                    {classes.map(c => <option key={c.id} value={c.id}>{c.name}</option>)}\n                  </select>\n                </div>\n                <div className=\"form-group\">\n                  <label>重置密码（可选）：</label>\n                  <input type=\"password\" value={editForm.new_password} onChange={(e) => setEditForm(prev => ({ ...prev, new_password: e.target.value }))} />\n                </div>\n              </div>\n            </div>\n            <div className=\"modal-footer\">\n              <button className=\"secondary-btn\" onClick={handleCancelEditStudent}>取消</button>\n              <button className=\"submit-btn\" onClick={handleSaveStudent} disabled={loading}>{loading ? '保存中...' : '保存'}</button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TeacherDashboardPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
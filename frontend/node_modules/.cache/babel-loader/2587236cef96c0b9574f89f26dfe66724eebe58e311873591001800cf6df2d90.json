{"ast":null,"code":"import _objectSpread from\"/Volumes/\\u575E\\u57CE/OJ_1/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{useParams,useNavigate,useLocation}from'react-router-dom';import{getProblem,submitCode}from'../services/api';import'./ProblemDetailPage.css';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const ProblemDetailPage=()=>{const{problemId}=useParams();const navigate=useNavigate();const location=useLocation();const[problem,setProblem]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState('');const[submitting,setSubmitting]=useState(false);const[submission,setSubmission]=useState(null);const[isTestMode,setIsTestMode]=useState(false);// 选择题相关状态\nconst[selectedOptions,setSelectedOptions]=useState([]);const[options,setOptions]=useState([]);// 判断题相关状态\nconst[judgeAnswer,setJudgeAnswer]=useState('');// 简答题相关状态\nconst[shortAnswer,setShortAnswer]=useState('');// 编程题相关状态\nconst[form,setForm]=useState({code:'',language:'python'});useEffect(()=>{// 检查是否是从测试页面来的\nif(location.state&&location.state.problem){setProblem(location.state.problem);setIsTestMode(true);setLoading(false);// 根据题目类型初始化相关状态\nif(location.state.problem.type==='choice'){initializeChoiceOptions(location.state.problem);}}else{fetchProblem();}},[problemId,location.state]);const fetchProblem=async()=>{try{setLoading(true);const result=await getProblem(problemId);setProblem(result);// 根据题目类型初始化相关状态\nif(result.type==='choice'){initializeChoiceOptions(result);}}catch(error){setError('获取题目信息失败');console.error('Error fetching problem:',error);}finally{setLoading(false);}};// 初始化选择题选项\nconst initializeChoiceOptions=problemData=>{console.log('=== 初始化选择题选项 ===');console.log('完整题目数据:',problemData);console.log('choice_options 字段:',problemData.choice_options);console.log('choice_options 类型:',typeof problemData.choice_options);console.log('choice_options 长度:',problemData.choice_options?problemData.choice_options.length:'null');// 尝试多种方式获取选项数据\nlet optionsData=null;// 方法1: 优先使用 choice_options 字段（选择题专用）\nif(problemData.choice_options){optionsData=problemData.choice_options;console.log('方法1: 使用 choice_options 字段');}// 方法2: 回退到 test_cases 字段（兼容旧数据）\nif(!optionsData&&problemData.test_cases){optionsData=problemData.test_cases;console.log('方法2: 使用 test_cases 字段（兼容）');}// 方法3: 尝试使用 options 字段（如果存在）\nif(!optionsData&&problemData.options){optionsData=problemData.options;console.log('方法3: 使用 options 字段');}// 方法4: 尝试使用 choices 字段（如果存在）\nif(!optionsData&&problemData.choices){optionsData=problemData.choices;console.log('方法4: 使用 choices 字段');}// 方法5: 尝试使用 answer_options 字段（如果存在）\nif(!optionsData&&problemData.answer_options){optionsData=problemData.answer_options;console.log('方法5: 使用 answer_options 字段');}if(optionsData){// 如果optionsData是字符串，尝试解析\nif(typeof optionsData==='string'){const optionsStr=optionsData.trim();console.log('处理后的选项字符串:',optionsStr);if(optionsStr.length===0){console.log('选项字符串为空');setOptions([]);return;}try{// 首先尝试解析为JSON格式\nconst parsedOptions=JSON.parse(optionsStr);console.log('JSON解析成功:',parsedOptions);if(Array.isArray(parsedOptions)&&parsedOptions.length>0){setOptions(parsedOptions);return;}else{console.log('JSON解析结果不是有效数组');}}catch(e){console.log('JSON解析失败:',e.message);}// 如果不是JSON格式，尝试解析为普通文本\nconsole.log('尝试文本解析...');const lines=optionsStr.split('\\n').map(line=>line.trim()).filter(line=>line.length>0);console.log('解析后的行:',lines);console.log('有效行数:',lines.length);if(lines.length>0){const parsedOptions=lines.map((line,index)=>{// 移除行首的字母标识符（如 \"A.\", \"B.\" 等）\nconst cleanText=line.replace(/^[A-Z]\\.\\s*/,'').trim();return{id:String.fromCharCode(65+index),// A, B, C, D...\ntext:cleanText,value:cleanText};});console.log('生成的选项:',parsedOptions);setOptions(parsedOptions);return;}else{console.log('没有有效的文本行');}}else if(Array.isArray(optionsData)){// 如果optionsData已经是数组\nconsole.log('选项数据已经是数组:',optionsData);setOptions(optionsData);return;}else{console.log('选项数据不是字符串也不是数组:',optionsData);}}else{console.log('没有找到任何选项数据字段');}// 如果所有解析方法都失败，设置空选项\nconsole.log('所有解析方法都失败，设置空选项');setOptions([]);};// 处理选择题选项变化\nconst handleOptionChange=optionId=>{if(problem.is_multiple_choice){// 多选题：可以选择多个选项\nsetSelectedOptions(prev=>{if(prev.includes(optionId)){return prev.filter(id=>id!==optionId);}else{return[...prev,optionId];}});}else{// 单选题：只能选择一个选项\nsetSelectedOptions([optionId]);}// 更新选项的选中状态样式\nconst optionElements=document.querySelectorAll('.option-item');optionElements.forEach(element=>{const input=element.querySelector('input');if(input.checked){element.classList.add('selected');}else{element.classList.remove('selected');}});};// 处理判断题答案变化\nconst handleJudgeAnswerChange=answer=>{setJudgeAnswer(answer);};// 处理简答题答案变化\nconst handleShortAnswerChange=e=>{setShortAnswer(e.target.value);};// 处理编程题代码变化\nconst handleCodeChange=e=>{setForm(_objectSpread(_objectSpread({},form),{},{code:e.target.value}));};// 处理编程题语言变化\nconst handleLanguageChange=e=>{setForm(_objectSpread(_objectSpread({},form),{},{language:e.target.value}));};const handleSubmit=async e=>{e.preventDefault();let submissionData={problem_id:parseInt(problemId),language:'text'};// 根据题目类型准备提交数据\nswitch(problem.type){case'choice':if(selectedOptions.length===0){setError('请选择答案');return;}submissionData.code=selectedOptions.join(',');submissionData.language='choice';break;case'judge':if(!judgeAnswer){setError('请选择答案');return;}submissionData.code=judgeAnswer;submissionData.language='judge';break;case'short_answer':if(!shortAnswer.trim()){setError('请输入答案');return;}submissionData.code=shortAnswer;submissionData.language='short_answer';break;case'programming':if(!form.code.trim()){setError('请输入代码');return;}submissionData.code=form.code;submissionData.language=form.language;break;default:setError('不支持的题目类型');return;}setSubmitting(true);setError('');try{const result=await submitCode(submissionData);setSubmission(result);// 跳转到结果页面\nnavigate(\"/result/\".concat(result.submission_id));}catch(error){var _error$response,_error$response$data;setError(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||'提交失败');}finally{setSubmitting(false);}};const getDifficultyColor=diff=>{switch(diff){case'easy':return'#52c41a';case'medium':return'#faad14';case'hard':return'#f5222d';default:return'#666';}};const getDifficultyText=diff=>{switch(diff){case'easy':return'简单';case'medium':return'中等';case'hard':return'困难';default:return'未知';}};const getTypeText=type=>{switch(type){case'programming':return'编程题';case'choice':return'选择题';case'judge':return'判断题';case'short_answer':return'简答题';default:return'未知类型';}};// 解析后端测试用例格式的函数\nconst parseTestCases=(testCasesStr,expectedOutputStr)=>{if(!testCasesStr&&!expectedOutputStr){return[];}// 优先尝试解析JSON数组格式：[ { input, output }, ... ]\ntry{if(testCasesStr&&testCasesStr.trim().startsWith('[')){const parsed=JSON.parse(testCasesStr);if(Array.isArray(parsed)){return parsed.map((tc,idx)=>({id:Date.now()+Math.random()+idx,input:tc&&typeof tc.input!=='undefined'?String(tc.input):'',output:tc&&typeof tc.output!=='undefined'?String(tc.output):''}));}}}catch(e){// JSON解析失败则回退到旧格式\nconsole.warn('解析JSON测试用例失败，回退旧格式:',e);}const testCases=testCasesStr?testCasesStr.split('\\n').filter(line=>line.trim()):[];const expectedOutputs=expectedOutputStr?expectedOutputStr.split('\\n').filter(line=>line.trim()):[];const maxLength=Math.max(testCases.length,expectedOutputs.length);const result=[];for(let i=0;i<maxLength;i++){result.push({id:Date.now()+Math.random()+i,// 生成唯一ID\ninput:testCases[i]||'',// 如果没有输入则使用空字符串\noutput:expectedOutputs[i]||''// 输出是必填的\n});}return result;};// 格式化测试用例显示\nconst formatTestCases=(testCasesStr,expectedOutputStr)=>{const testCases=parseTestCases(testCasesStr,expectedOutputStr);if(testCases.length===0){return null;}return/*#__PURE__*/_jsx(\"div\",{className:\"test-cases-container\",children:testCases.map((tc,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"test-case-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"test-case-header\",children:/*#__PURE__*/_jsxs(\"h4\",{children:[\"\\u6D4B\\u8BD5\\u7528\\u4F8B \",index+1]})}),tc.input&&/*#__PURE__*/_jsxs(\"div\",{className:\"test-case-input\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u8F93\\u5165:\"}),/*#__PURE__*/_jsx(\"pre\",{className:\"example-code\",children:tc.input})]}),tc.output&&/*#__PURE__*/_jsxs(\"div\",{className:\"test-case-output\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u671F\\u671B\\u8F93\\u51FA:\"}),/*#__PURE__*/_jsx(\"pre\",{className:\"example-code\",children:tc.output})]})]},tc.id))});};// 获取题目数据\nif(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"problem-detail-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"\\u52A0\\u8F7D\\u4E2D...\"})});}if(error||!problem){return/*#__PURE__*/_jsx(\"div\",{className:\"problem-detail-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error||'题目不存在'})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"problem-detail-container\",children:[isTestMode&&/*#__PURE__*/_jsxs(\"div\",{className:\"test-mode-header\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/test'),className:\"back-to-test-btn\",children:\"\\u2190 \\u8FD4\\u56DE\\u6D4B\\u8BD5\\u9875\\u9762\"}),/*#__PURE__*/_jsx(\"div\",{className:\"test-mode-badge\",children:\"\\u6D4B\\u8BD5\\u6A21\\u5F0F\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"problem-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"problem-title-section\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[problem.id,\". \",problem.title]}),/*#__PURE__*/_jsxs(\"div\",{className:\"problem-badges\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"type-badge\",style:{backgroundColor:'#1890ff'},children:getTypeText(problem.type)}),/*#__PURE__*/_jsx(\"span\",{className:\"difficulty-badge\",style:{backgroundColor:getDifficultyColor(problem.difficulty)},children:getDifficultyText(problem.difficulty)})]})]}),problem.type==='programming'&&/*#__PURE__*/_jsxs(\"div\",{className:\"problem-meta\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"meta-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"meta-label\",children:\"\\u65F6\\u95F4\\u9650\\u5236:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"meta-value\",children:[problem.time_limit,\"ms\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"meta-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"meta-label\",children:\"\\u5185\\u5B58\\u9650\\u5236:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"meta-value\",children:[problem.memory_limit,\"MB\"]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"problem-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"problem-description\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u9898\\u76EE\\u63CF\\u8FF0\"}),/*#__PURE__*/_jsx(\"div\",{className:\"description-text\",children:problem.description.split('\\n').map((line,index)=>/*#__PURE__*/_jsx(\"p\",{children:line},index))})]}),problem.type==='programming'&&/*#__PURE__*/_jsxs(\"div\",{className:\"problem-examples\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u8F93\\u5165\\u8F93\\u51FA\\u793A\\u4F8B\"}),formatTestCases(problem.test_cases,problem.expected_output)]}),problem.type==='choice'&&/*#__PURE__*/_jsxs(\"div\",{className:\"problem-options\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u9009\\u9879\"}),/*#__PURE__*/_jsx(\"div\",{className:\"options-list\",children:options.length>0?options.map(option=>/*#__PURE__*/_jsxs(\"label\",{className:\"option-item\",children:[/*#__PURE__*/_jsx(\"input\",{type:problem.is_multiple_choice?\"checkbox\":\"radio\",name:\"choice\",value:option.id,checked:selectedOptions.includes(option.id),onChange:()=>handleOptionChange(option.id)}),/*#__PURE__*/_jsxs(\"span\",{className:\"option-text\",children:[/*#__PURE__*/_jsxs(\"strong\",{children:[option.id,\".\"]}),\" \",option.text]})]},option.id)):/*#__PURE__*/_jsx(\"div\",{className:\"no-options\",children:/*#__PURE__*/_jsx(\"p\",{children:\"\\u6682\\u65E0\\u9009\\u9879\"})})}),problem.is_multiple_choice&&/*#__PURE__*/_jsx(\"p\",{className:\"multiple-choice-hint\",children:\"\\u6CE8\\u610F\\uFF1A\\u672C\\u9898\\u4E3A\\u591A\\u9009\\u9898\\uFF0C\\u53EF\\u4EE5\\u9009\\u62E9\\u591A\\u4E2A\\u7B54\\u6848\"})]}),problem.type==='judge'&&/*#__PURE__*/_jsxs(\"div\",{className:\"problem-judge\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u8BF7\\u9009\\u62E9\\u7B54\\u6848\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"judge-options\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"judge-option\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"judge\",value:\"A\",checked:judgeAnswer===\"A\",onChange:()=>handleJudgeAnswerChange(\"A\")}),/*#__PURE__*/_jsx(\"span\",{className:\"judge-text\",children:\"\\u6B63\\u786E\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"judge-option\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"judge\",value:\"B\",checked:judgeAnswer===\"B\",onChange:()=>handleJudgeAnswerChange(\"B\")}),/*#__PURE__*/_jsx(\"span\",{className:\"judge-text\",children:\"\\u9519\\u8BEF\"})]})]})]}),problem.type==='short_answer'&&/*#__PURE__*/_jsxs(\"div\",{className:\"problem-short-answer\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u8BF7\\u8F93\\u5165\\u7B54\\u6848\"}),/*#__PURE__*/_jsx(\"textarea\",{value:shortAnswer,onChange:handleShortAnswerChange,placeholder:\"\\u5728\\u8FD9\\u91CC\\u8F93\\u5165\\u4F60\\u7684\\u7B54\\u6848...\",rows:8,className:\"short-answer-editor\"})]})]}),problem.type==='programming'?/*#__PURE__*/_jsxs(\"div\",{className:\"code-submission\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u63D0\\u4EA4\\u4EE3\\u7801\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u7F16\\u7A0B\\u8BED\\u8A00:\"}),/*#__PURE__*/_jsxs(\"select\",{value:form.language,onChange:handleLanguageChange,className:\"language-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"python\",children:\"Python\"}),/*#__PURE__*/_jsx(\"option\",{value:\"cpp\",children:\"C++\"}),/*#__PURE__*/_jsx(\"option\",{value:\"java\",children:\"Java\"}),/*#__PURE__*/_jsx(\"option\",{value:\"javascript\",children:\"JavaScript\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u4EE3\\u7801:\"}),/*#__PURE__*/_jsx(\"textarea\",{value:form.code,onChange:handleCodeChange,placeholder:\"\\u5728\\u8FD9\\u91CC\\u8F93\\u5165\\u4F60\\u7684\\u4EE3\\u7801...\",rows:20,className:\"code-editor\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-actions\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"submit-btn\",disabled:submitting,children:submitting?'提交中...':'提交代码'})})]})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"answer-submission\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u63D0\\u4EA4\\u7B54\\u6848\"}),/*#__PURE__*/_jsx(\"form\",{onSubmit:handleSubmit,children:/*#__PURE__*/_jsx(\"div\",{className:\"form-actions\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"submit-btn\",disabled:submitting,children:submitting?'提交中...':'提交答案'})})})]}),submission&&/*#__PURE__*/_jsxs(\"div\",{className:\"submission-result\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u63D0\\u4EA4\\u7ED3\\u679C\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u63D0\\u4EA4ID: \",submission.submission_id]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u72B6\\u6001: \",submission.status]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u6D88\\u606F: \",submission.message]})]})]});};export default ProblemDetailPage;","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","useLocation","getProblem","submitCode","jsxs","_jsxs","jsx","_jsx","ProblemDetailPage","problemId","navigate","location","problem","setProblem","loading","setLoading","error","setError","submitting","setSubmitting","submission","setSubmission","isTestMode","setIsTestMode","selectedOptions","setSelectedOptions","options","setOptions","judgeAnswer","setJudgeAnswer","shortAnswer","setShortAnswer","form","setForm","code","language","state","type","initializeChoiceOptions","fetchProblem","result","console","problemData","log","choice_options","length","optionsData","test_cases","choices","answer_options","optionsStr","trim","parsedOptions","JSON","parse","Array","isArray","e","message","lines","split","map","line","filter","index","cleanText","replace","id","String","fromCharCode","text","value","handleOptionChange","optionId","is_multiple_choice","prev","includes","optionElements","document","querySelectorAll","forEach","element","input","querySelector","checked","classList","add","remove","handleJudgeAnswerChange","answer","handleShortAnswerChange","target","handleCodeChange","_objectSpread","handleLanguageChange","handleSubmit","preventDefault","submissionData","problem_id","parseInt","join","concat","submission_id","_error$response","_error$response$data","response","data","getDifficultyColor","diff","getDifficultyText","getTypeText","parseTestCases","testCasesStr","expectedOutputStr","startsWith","parsed","tc","idx","Date","now","Math","random","output","warn","testCases","expectedOutputs","maxLength","max","i","push","formatTestCases","className","children","onClick","title","style","backgroundColor","difficulty","time_limit","memory_limit","description","expected_output","option","name","onChange","placeholder","rows","onSubmit","disabled","status"],"sources":["/Volumes/坞城/OJ_1/frontend/src/pages/ProblemDetailPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { getProblem, submitCode } from '../services/api';\nimport './ProblemDetailPage.css';\n\nconst ProblemDetailPage = () => {\n  const { problemId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [problem, setProblem] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n  const [submission, setSubmission] = useState(null);\n  const [isTestMode, setIsTestMode] = useState(false);\n  \n  // 选择题相关状态\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [options, setOptions] = useState([]);\n  \n  // 判断题相关状态\n  const [judgeAnswer, setJudgeAnswer] = useState('');\n  \n  // 简答题相关状态\n  const [shortAnswer, setShortAnswer] = useState('');\n  \n  // 编程题相关状态\n  const [form, setForm] = useState({\n    code: '',\n    language: 'python'\n  });\n\n  useEffect(() => {\n    // 检查是否是从测试页面来的\n    if (location.state && location.state.problem) {\n      setProblem(location.state.problem);\n      setIsTestMode(true);\n      setLoading(false);\n      \n      // 根据题目类型初始化相关状态\n      if (location.state.problem.type === 'choice') {\n        initializeChoiceOptions(location.state.problem);\n      }\n    } else {\n      fetchProblem();\n    }\n  }, [problemId, location.state]);\n\n  const fetchProblem = async () => {\n    try {\n      setLoading(true);\n      const result = await getProblem(problemId);\n      setProblem(result);\n      \n      // 根据题目类型初始化相关状态\n      if (result.type === 'choice') {\n        initializeChoiceOptions(result);\n      }\n    } catch (error) {\n      setError('获取题目信息失败');\n      console.error('Error fetching problem:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 初始化选择题选项\n  const initializeChoiceOptions = (problemData) => {\n    console.log('=== 初始化选择题选项 ===');\n    console.log('完整题目数据:', problemData);\n    console.log('choice_options 字段:', problemData.choice_options);\n    console.log('choice_options 类型:', typeof problemData.choice_options);\n    console.log('choice_options 长度:', problemData.choice_options ? problemData.choice_options.length : 'null');\n    \n    // 尝试多种方式获取选项数据\n    let optionsData = null;\n    \n    // 方法1: 优先使用 choice_options 字段（选择题专用）\n    if (problemData.choice_options) {\n      optionsData = problemData.choice_options;\n      console.log('方法1: 使用 choice_options 字段');\n    }\n    \n    // 方法2: 回退到 test_cases 字段（兼容旧数据）\n    if (!optionsData && problemData.test_cases) {\n      optionsData = problemData.test_cases;\n      console.log('方法2: 使用 test_cases 字段（兼容）');\n    }\n    \n    // 方法3: 尝试使用 options 字段（如果存在）\n    if (!optionsData && problemData.options) {\n      optionsData = problemData.options;\n      console.log('方法3: 使用 options 字段');\n    }\n    \n    // 方法4: 尝试使用 choices 字段（如果存在）\n    if (!optionsData && problemData.choices) {\n      optionsData = problemData.choices;\n      console.log('方法4: 使用 choices 字段');\n    }\n    \n    // 方法5: 尝试使用 answer_options 字段（如果存在）\n    if (!optionsData && problemData.answer_options) {\n      optionsData = problemData.answer_options;\n      console.log('方法5: 使用 answer_options 字段');\n    }\n    \n    if (optionsData) {\n      // 如果optionsData是字符串，尝试解析\n      if (typeof optionsData === 'string') {\n        const optionsStr = optionsData.trim();\n        console.log('处理后的选项字符串:', optionsStr);\n        \n        if (optionsStr.length === 0) {\n          console.log('选项字符串为空');\n          setOptions([]);\n          return;\n        }\n        \n        try {\n          // 首先尝试解析为JSON格式\n          const parsedOptions = JSON.parse(optionsStr);\n          console.log('JSON解析成功:', parsedOptions);\n          if (Array.isArray(parsedOptions) && parsedOptions.length > 0) {\n            setOptions(parsedOptions);\n            return;\n          } else {\n            console.log('JSON解析结果不是有效数组');\n          }\n        } catch (e) {\n          console.log('JSON解析失败:', e.message);\n        }\n        \n        // 如果不是JSON格式，尝试解析为普通文本\n        console.log('尝试文本解析...');\n        const lines = optionsStr\n          .split('\\n')\n          .map(line => line.trim())\n          .filter(line => line.length > 0);\n        \n        console.log('解析后的行:', lines);\n        console.log('有效行数:', lines.length);\n        \n        if (lines.length > 0) {\n          const parsedOptions = lines.map((line, index) => {\n            // 移除行首的字母标识符（如 \"A.\", \"B.\" 等）\n            const cleanText = line.replace(/^[A-Z]\\.\\s*/, '').trim();\n            return {\n              id: String.fromCharCode(65 + index), // A, B, C, D...\n              text: cleanText,\n              value: cleanText\n            };\n          });\n          \n          console.log('生成的选项:', parsedOptions);\n          setOptions(parsedOptions);\n          return;\n        } else {\n          console.log('没有有效的文本行');\n        }\n      } else if (Array.isArray(optionsData)) {\n        // 如果optionsData已经是数组\n        console.log('选项数据已经是数组:', optionsData);\n        setOptions(optionsData);\n        return;\n      } else {\n        console.log('选项数据不是字符串也不是数组:', optionsData);\n      }\n    } else {\n      console.log('没有找到任何选项数据字段');\n    }\n    \n    // 如果所有解析方法都失败，设置空选项\n    console.log('所有解析方法都失败，设置空选项');\n    setOptions([]);\n  };\n\n  // 处理选择题选项变化\n  const handleOptionChange = (optionId) => {\n    if (problem.is_multiple_choice) {\n      // 多选题：可以选择多个选项\n      setSelectedOptions(prev => {\n        if (prev.includes(optionId)) {\n          return prev.filter(id => id !== optionId);\n        } else {\n          return [...prev, optionId];\n        }\n      });\n    } else {\n      // 单选题：只能选择一个选项\n      setSelectedOptions([optionId]);\n    }\n    \n    // 更新选项的选中状态样式\n    const optionElements = document.querySelectorAll('.option-item');\n    optionElements.forEach(element => {\n      const input = element.querySelector('input');\n      if (input.checked) {\n        element.classList.add('selected');\n      } else {\n        element.classList.remove('selected');\n      }\n    });\n  };\n\n  // 处理判断题答案变化\n  const handleJudgeAnswerChange = (answer) => {\n    setJudgeAnswer(answer);\n  };\n\n  // 处理简答题答案变化\n  const handleShortAnswerChange = (e) => {\n    setShortAnswer(e.target.value);\n  };\n\n  // 处理编程题代码变化\n  const handleCodeChange = (e) => {\n    setForm({...form, code: e.target.value});\n  };\n\n  // 处理编程题语言变化\n  const handleLanguageChange = (e) => {\n    setForm({...form, language: e.target.value});\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    let submissionData = {\n      problem_id: parseInt(problemId),\n      language: 'text'\n    };\n\n    // 根据题目类型准备提交数据\n    switch (problem.type) {\n      case 'choice':\n        if (selectedOptions.length === 0) {\n          setError('请选择答案');\n          return;\n        }\n        submissionData.code = selectedOptions.join(',');\n        submissionData.language = 'choice';\n        break;\n        \n      case 'judge':\n        if (!judgeAnswer) {\n          setError('请选择答案');\n          return;\n        }\n        submissionData.code = judgeAnswer;\n        submissionData.language = 'judge';\n        break;\n        \n      case 'short_answer':\n        if (!shortAnswer.trim()) {\n          setError('请输入答案');\n          return;\n        }\n        submissionData.code = shortAnswer;\n        submissionData.language = 'short_answer';\n        break;\n        \n      case 'programming':\n        if (!form.code.trim()) {\n          setError('请输入代码');\n          return;\n        }\n        submissionData.code = form.code;\n        submissionData.language = form.language;\n        break;\n        \n      default:\n        setError('不支持的题目类型');\n        return;\n    }\n\n    setSubmitting(true);\n    setError('');\n    \n    try {\n      const result = await submitCode(submissionData);\n      setSubmission(result);\n      // 跳转到结果页面\n      navigate(`/result/${result.submission_id}`);\n    } catch (error) {\n      setError(error.response?.data?.error || '提交失败');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  const getDifficultyColor = (diff) => {\n    switch (diff) {\n      case 'easy': return '#52c41a';\n      case 'medium': return '#faad14';\n      case 'hard': return '#f5222d';\n      default: return '#666';\n    }\n  };\n\n  const getDifficultyText = (diff) => {\n    switch (diff) {\n      case 'easy': return '简单';\n      case 'medium': return '中等';\n      case 'hard': return '困难';\n      default: return '未知';\n    }\n  };\n\n  const getTypeText = (type) => {\n    switch (type) {\n      case 'programming': return '编程题';\n      case 'choice': return '选择题';\n      case 'judge': return '判断题';\n      case 'short_answer': return '简答题';\n      default: return '未知类型';\n    }\n  };\n\n  // 解析后端测试用例格式的函数\n  const parseTestCases = (testCasesStr, expectedOutputStr) => {\n    if (!testCasesStr && !expectedOutputStr) {\n      return [];\n    }\n    \n    // 优先尝试解析JSON数组格式：[ { input, output }, ... ]\n    try {\n      if (testCasesStr && testCasesStr.trim().startsWith('[')) {\n        const parsed = JSON.parse(testCasesStr);\n        if (Array.isArray(parsed)) {\n          return parsed.map((tc, idx) => ({\n            id: Date.now() + Math.random() + idx,\n            input: (tc && typeof tc.input !== 'undefined') ? String(tc.input) : '',\n            output: (tc && typeof tc.output !== 'undefined') ? String(tc.output) : ''\n          }));\n        }\n      }\n    } catch (e) {\n      // JSON解析失败则回退到旧格式\n      console.warn('解析JSON测试用例失败，回退旧格式:', e);\n    }\n    \n    const testCases = testCasesStr ? testCasesStr.split('\\n').filter(line => line.trim()) : [];\n    const expectedOutputs = expectedOutputStr ? expectedOutputStr.split('\\n').filter(line => line.trim()) : [];\n    \n    const maxLength = Math.max(testCases.length, expectedOutputs.length);\n    \n    const result = [];\n    for (let i = 0; i < maxLength; i++) {\n      result.push({\n        id: Date.now() + Math.random() + i, // 生成唯一ID\n        input: testCases[i] || '', // 如果没有输入则使用空字符串\n        output: expectedOutputs[i] || '' // 输出是必填的\n      });\n    }\n    \n    return result;\n  };\n\n  // 格式化测试用例显示\n  const formatTestCases = (testCasesStr, expectedOutputStr) => {\n    const testCases = parseTestCases(testCasesStr, expectedOutputStr);\n    \n    if (testCases.length === 0) {\n      return null;\n    }\n    \n    return (\n      <div className=\"test-cases-container\">\n        {testCases.map((tc, index) => (\n          <div key={tc.id} className=\"test-case-item\">\n            <div className=\"test-case-header\">\n              <h4>测试用例 {index + 1}</h4>\n            </div>\n            {tc.input && (\n              <div className=\"test-case-input\">\n                <strong>输入:</strong>\n                <pre className=\"example-code\">{tc.input}</pre>\n              </div>\n            )}\n            {tc.output && (\n              <div className=\"test-case-output\">\n                <strong>期望输出:</strong>\n                <pre className=\"example-code\">{tc.output}</pre>\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  // 获取题目数据\n  if (loading) {\n    return (\n      <div className=\"problem-detail-container\">\n        <div className=\"loading\">加载中...</div>\n      </div>\n    );\n  }\n\n  if (error || !problem) {\n    return (\n      <div className=\"problem-detail-container\">\n        <div className=\"error-message\">{error || '题目不存在'}</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"problem-detail-container\">\n      {/* 测试模式下的返回按钮 */}\n      {isTestMode && (\n        <div className=\"test-mode-header\">\n          <button \n            onClick={() => navigate('/test')} \n            className=\"back-to-test-btn\"\n          >\n            ← 返回测试页面\n          </button>\n          <div className=\"test-mode-badge\">测试模式</div>\n        </div>\n      )}\n\n      <div className=\"problem-header\">\n        <div className=\"problem-title-section\">\n          <h1>{problem.id}. {problem.title}</h1>\n          <div className=\"problem-badges\">\n            <span \n              className=\"type-badge\"\n              style={{ backgroundColor: '#1890ff' }}\n            >\n              {getTypeText(problem.type)}\n            </span>\n            <span \n              className=\"difficulty-badge\"\n              style={{ backgroundColor: getDifficultyColor(problem.difficulty) }}\n            >\n              {getDifficultyText(problem.difficulty)}\n            </span>\n          </div>\n        </div>\n        \n        {problem.type === 'programming' && (\n          <div className=\"problem-meta\">\n            <div className=\"meta-item\">\n              <span className=\"meta-label\">时间限制:</span>\n              <span className=\"meta-value\">{problem.time_limit}ms</span>\n            </div>\n            <div className=\"meta-item\">\n              <span className=\"meta-label\">内存限制:</span>\n              <span className=\"meta-value\">{problem.memory_limit}MB</span>\n            </div>\n          </div>\n        )}\n      </div>\n\n      <div className=\"problem-content\">\n        <div className=\"problem-description\">\n          <h2>题目描述</h2>\n          <div className=\"description-text\">\n            {problem.description.split('\\n').map((line, index) => (\n              <p key={index}>{line}</p>\n            ))}\n          </div>\n        </div>\n\n        {/* 根据题目类型显示不同的内容 */}\n        {problem.type === 'programming' && (\n          <div className=\"problem-examples\">\n            <h2>输入输出示例</h2>\n            {formatTestCases(problem.test_cases, problem.expected_output)}\n          </div>\n        )}\n\n        {problem.type === 'choice' && (\n          <div className=\"problem-options\">\n            <h2>选项</h2>\n            <div className=\"options-list\">\n              {options.length > 0 ? (\n                options.map((option) => (\n                  <label key={option.id} className=\"option-item\">\n                    <input\n                      type={problem.is_multiple_choice ? \"checkbox\" : \"radio\"}\n                      name=\"choice\"\n                      value={option.id}\n                      checked={selectedOptions.includes(option.id)}\n                      onChange={() => handleOptionChange(option.id)}\n                    />\n                    <span className=\"option-text\">\n                      <strong>{option.id}.</strong> {option.text}\n                    </span>\n                  </label>\n                ))\n              ) : (\n                <div className=\"no-options\">\n                  <p>暂无选项</p>\n                </div>\n              )}\n            </div>\n            {problem.is_multiple_choice && (\n              <p className=\"multiple-choice-hint\">注意：本题为多选题，可以选择多个答案</p>\n            )}\n          </div>\n        )}\n\n        {problem.type === 'judge' && (\n          <div className=\"problem-judge\">\n            <h2>请选择答案</h2>\n            <div className=\"judge-options\">\n              <label className=\"judge-option\">\n                <input\n                  type=\"radio\"\n                  name=\"judge\"\n                  value=\"A\"\n                  checked={judgeAnswer === \"A\"}\n                  onChange={() => handleJudgeAnswerChange(\"A\")}\n                />\n                <span className=\"judge-text\">正确</span>\n              </label>\n              <label className=\"judge-option\">\n                <input\n                  type=\"radio\"\n                  name=\"judge\"\n                  value=\"B\"\n                  checked={judgeAnswer === \"B\"}\n                  onChange={() => handleJudgeAnswerChange(\"B\")}\n                />\n                <span className=\"judge-text\">错误</span>\n              </label>\n            </div>\n          </div>\n        )}\n\n        {problem.type === 'short_answer' && (\n          <div className=\"problem-short-answer\">\n            <h2>请输入答案</h2>\n            <textarea\n              value={shortAnswer}\n              onChange={handleShortAnswerChange}\n              placeholder=\"在这里输入你的答案...\"\n              rows={8}\n              className=\"short-answer-editor\"\n            />\n          </div>\n        )}\n      </div>\n\n      {/* 根据题目类型显示不同的提交区域 */}\n      {problem.type === 'programming' ? (\n        <div className=\"code-submission\">\n          <h2>提交代码</h2>\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-row\">\n              <label>编程语言:</label>\n              <select\n                value={form.language}\n                onChange={handleLanguageChange}\n                className=\"language-select\"\n              >\n                <option value=\"python\">Python</option>\n                <option value=\"cpp\">C++</option>\n                <option value=\"java\">Java</option>\n                <option value=\"javascript\">JavaScript</option>\n              </select>\n            </div>\n            \n            <div className=\"form-row\">\n              <label>代码:</label>\n              <textarea\n                value={form.code}\n                onChange={handleCodeChange}\n                placeholder=\"在这里输入你的代码...\"\n                rows={20}\n                className=\"code-editor\"\n              />\n            </div>\n            \n            <div className=\"form-actions\">\n              <button \n                type=\"submit\" \n                className=\"submit-btn\" \n                disabled={submitting}\n              >\n                {submitting ? '提交中...' : '提交代码'}\n              </button>\n            </div>\n          </form>\n        </div>\n      ) : (\n        <div className=\"answer-submission\">\n          <h2>提交答案</h2>\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-actions\">\n              <button \n                type=\"submit\" \n                className=\"submit-btn\" \n                disabled={submitting}\n              >\n                {submitting ? '提交中...' : '提交答案'}\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n\n      {submission && (\n        <div className=\"submission-result\">\n          <h3>提交结果</h3>\n          <p>提交ID: {submission.submission_id}</p>\n          <p>状态: {submission.status}</p>\n          <p>消息: {submission.message}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProblemDetailPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _objectSpread from\"/Volumes/\\u575E\\u57CE/OJ_1/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{getUsers,getSchools,getMajors,getClasses,batchImportStudents,getProblems,createProblem,updateProblem,deleteProblem,updateUser,deleteUser,registerStudent,getTeacherCourses,getCourseAssignments,createAssignment,updateAssignment,deleteAssignment,getCourseStudents,addStudentToCourse,removeStudentFromCourse,getDepartments,batchImportStudentsFromExcel}from'../services/api';import*as XLSX from'xlsx';import'./TeacherDashboardPage.css';import AIProblemGenerationPage from'./AIProblemGenerationPage';import{mockCourses,mockAssignments,formatDate}from'../testData/courses';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const TeacherDashboardPage=()=>{const[activeTab,setActiveTab]=useState('students');const[activeSubTab,setActiveSubTab]=useState('list');// 子标签页\nconst[users,setUsers]=useState([]);const[problems,setProblems]=useState([]);const[schools,setSchools]=useState([]);const[departments,setDepartments]=useState([]);const[majors,setMajors]=useState([]);const[classes,setClasses]=useState([]);const[loading,setLoading]=useState(false);const[error,setError]=useState('');const[success,setSuccess]=useState('');// 批量导入相关状态\nconst[selectedSchool,setSelectedSchool]=useState('');const[selectedDepartment,setSelectedDepartment]=useState('');const[selectedMajor,setSelectedMajor]=useState('');const[selectedClass,setSelectedClass]=useState('');const[uploadedFile,setUploadedFile]=useState(null);// 手动创建题目相关状态\nconst[problemForm,setProblemForm]=useState({title:'',description:'',type:'programming',// 题目类型：programming(编程题), choice(选择题), judge(判断题), short_answer(简答题)\ntestCases:[],// 测试用例数组，每个元素包含 {id, input, output}\ndifficulty:'easy',time_limit:1000,memory_limit:128,// 选择题相关字段\noptions:[],// 选项数组\ncorrect_answers:[],// 正确答案数组（支持多选）\nis_multiple_choice:false,// 是否多选\n// 简答题相关字段\nanswer:''// 简答题答案\n});// 编辑题目状态\nconst[editingProblem,setEditingProblem]=useState(null);const[isEditing,setIsEditing]=useState(false);// 测试用例管理函数\nconst addTestCase=()=>{const newTestCase={id:Date.now()+Math.random(),// 生成唯一ID\ninput:'',output:''};setProblemForm(prev=>_objectSpread(_objectSpread({},prev),{},{testCases:[...prev.testCases,newTestCase]}));};const removeTestCase=testCaseId=>{setProblemForm(prev=>_objectSpread(_objectSpread({},prev),{},{testCases:prev.testCases.filter(tc=>tc.id!==testCaseId)}));};const updateTestCase=(testCaseId,field,value)=>{setProblemForm(prev=>_objectSpread(_objectSpread({},prev),{},{testCases:prev.testCases.map(tc=>tc.id===testCaseId?_objectSpread(_objectSpread({},tc),{},{[field]:value}):tc)}));};// 解析后端测试用例格式的函数\nconst parseTestCases=(testCasesStr,expectedOutputStr)=>{if(!testCasesStr&&!expectedOutputStr){return[];}const testCases=testCasesStr?testCasesStr.split('\\n').filter(line=>line.trim()):[];const expectedOutputs=expectedOutputStr?expectedOutputStr.split('\\n').filter(line=>line.trim()):[];// 取较长的数组长度，确保所有输出都有对应的测试用例\nconst maxLength=Math.max(testCases.length,expectedOutputs.length);const result=[];for(let i=0;i<maxLength;i++){result.push({id:Date.now()+Math.random()+i,// 生成唯一ID\ninput:testCases[i]||'',// 如果没有输入则使用空字符串\noutput:expectedOutputs[i]||''// 输出是必填的\n});}return result;};// 添加学生相关状态（按新规则：学号、姓名、密码必填）\nconst[addStudentForm,setAddStudentForm]=useState({student_no:'',name:'',password:'',email:'',phone:'',school_id:'',department_id:'',major_id:'',class_id:''});// 学生编辑相关状态\nconst[editingUser,setEditingUser]=useState(null);const[editForm,setEditForm]=useState({email:'',phone:'',school_id:'',major_id:'',class_id:'',new_password:''});// 课程相关状态（只读，用于查看）\nconst[courses,setCourses]=useState([]);const[editingCourse,setEditingCourse]=useState(null);// 作业相关状态\nconst[assignments,setAssignments]=useState([]);const[assignmentForm,setAssignmentForm]=useState({name:'',description:'',requirements:'',due_date:'',course_id:'',problem_ids:[]});// 编辑作业状态\nconst[editingAssignment,setEditingAssignment]=useState(null);const[isEditingAssignment,setIsEditingAssignment]=useState(false);const[editingAssignmentContext,setEditingAssignmentContext]=useState('');// 记录编辑作业时的上下文\n// 添加学生到课程的状态\nconst[addingStudentContext,setAddingStudentContext]=useState('');// 记录添加学生时的上下文\n// 学生-教学班关联关系状态\nconst[studentClassRelations,setStudentClassRelations]=useState([]);// 存储学生与教学班的关联关系\nuseEffect(()=>{fetchInitialData();// 监听多种通知方式，用于AI生题成功后的数据刷新\nconst handleStorageChange=e=>{if(e.key==='refreshProblems'&&e.newValue==='true'){console.log('检测到题目创建成功标记，自动刷新题目列表');// 清除标记\nlocalStorage.removeItem('refreshProblems');// 刷新题目列表\nfetchProblems();}};const handleProblemCreated=e=>{console.log('检测到题目创建成功事件，自动刷新题目列表');fetchProblems();};const handleMessage=e=>{if(e.data&&e.data.type==='PROBLEM_CREATED'){console.log('检测到题目创建成功消息，自动刷新题目列表');fetchProblems();}};// 监听storage事件（跨标签页）\nwindow.addEventListener('storage',handleStorageChange);// 监听自定义事件\nwindow.addEventListener('problemCreated',handleProblemCreated);// 监听postMessage\nwindow.addEventListener('message',handleMessage);// 检查是否需要刷新（当前标签页）\nconst shouldRefresh=localStorage.getItem('refreshProblems');if(shouldRefresh==='true'){console.log('检测到题目创建成功标记，自动刷新题目列表');localStorage.removeItem('refreshProblems');fetchProblems();}return()=>{window.removeEventListener('storage',handleStorageChange);window.removeEventListener('problemCreated',handleProblemCreated);window.removeEventListener('message',handleMessage);};},[]);// 从API加载学生-课程关联关系\nconst fetchStudentClassRelations=async courseId=>{try{const courseStudentsData=await getCourseStudents(courseId);if(courseStudentsData&&courseStudentsData.length>0){const apiRelations=courseStudentsData.map(student=>({student_id:student.student_id,class_id:student.class_id,course_id:courseId,student_name:student.student_name,student_no:student.student_no,added_at:student.added_at||new Date().toISOString()}));setStudentClassRelations(apiRelations);}else{setStudentClassRelations([]);}}catch(error){console.error('获取课程学生关联关系失败:',error);setStudentClassRelations([]);}};// 刷新题目列表\nconst fetchProblems=async()=>{try{const problemsData=await getProblems(1,50);if(problemsData&&problemsData.problems){setProblems(problemsData.problems);console.log('题目列表刷新成功，题目数量:',problemsData.problems.length);}}catch(error){console.warn('刷新题目列表失败:',error);}};// 监听课程变化，加载课程学生关联关系\nuseEffect(()=>{const loadCourseStudents=async()=>{if(editingCourse&&editingCourse.id){console.log('开始加载课程学生数据，课程ID:',editingCourse.id);await fetchStudentClassRelations(editingCourse.id);}};loadCourseStudents();},[editingCourse]);// eslint-disable-line react-hooks/exhaustive-deps\nconst fetchInitialData=async()=>{try{setLoading(true);setError('');setSuccess('');const[schoolsData,usersData,problemsData]=await Promise.all([getSchools(),getUsers(1,50,'student'),getProblems(1,50)]);setSchools(schoolsData);setUsers(usersData.users);setProblems(problemsData.problems);// 获取所有专业和班级数据 - 确保schools数据已经设置\nif(schoolsData&&schoolsData.length>0){await fetchAllMajorsAndClasses(schoolsData);}// 调试信息：打印题目数据\nconsole.log('从API获取的题目数据:',problemsData.problems);if(problemsData.problems&&problemsData.problems.length>0){problemsData.problems.forEach((problem,index)=>{console.log(\"\\u9898\\u76EE \".concat(index+1,\":\"),{id:problem.id,title:problem.title,type:problem.type,difficulty:problem.difficulty});});}// 获取课程和作业数据（使用测试数据）\ntry{console.log('开始获取课程和作业数据...');const[coursesData,assignmentsData]=await Promise.all([getTeacherCourses(),getCourseAssignments()]);console.log('API返回的课程数据:',coursesData);console.log('API返回的作业数据:',assignmentsData);if(coursesData&&coursesData.courses){console.log('使用API返回的课程数据，课程数量:',coursesData.courses.length);setCourses(coursesData.courses);}else{console.log('API返回的课程数据无效，使用测试数据');setCourses(mockCourses);}if(assignmentsData&&assignmentsData.assignments){console.log('使用API返回的作业数据，作业数量:',assignmentsData.assignments.length);setAssignments(assignmentsData.assignments);}else{console.log('API返回的作业数据无效，使用测试数据');setAssignments(mockAssignments);}}catch(error){var _error$response;console.warn('获取课程或作业数据失败，使用测试数据:',error);console.log('错误详情:',((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||error.message);setCourses(mockCourses);setAssignments(mockAssignments);}// 学生-课程关联关系数据将在进入课程详情页时从API加载\n}catch(error){var _error$response2,_error$response2$data;setError((error===null||error===void 0?void 0:(_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.error)||'获取数据失败');console.error('Error fetching data:',error);}finally{setLoading(false);}};// 获取所有专业和班级数据的函数\nconst fetchAllMajorsAndClasses=async function(){let schoolsData=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;// 防止重复调用\nif(fetchAllMajorsAndClasses.isLoading){console.log('fetchAllMajorsAndClasses 正在执行中，跳过重复调用');return;}fetchAllMajorsAndClasses.isLoading=true;try{// 使用传入的schoolsData参数，如果没有传入则使用state中的schools\nconst schoolsToUse=schoolsData||schools;if(!schoolsToUse||schoolsToUse.length===0){console.warn('没有学校数据，无法获取专业和班级');return;}console.log('开始获取数据，学校数量:',schoolsToUse.length);console.log('学校数据:',schoolsToUse);// 按照正确的层次结构获取数据：学校 → 院部 → 专业 → 班级\nconst allDepartments=[];const allMajors=[];const allClasses=[];for(const school of schoolsToUse){try{console.log(\"\\u6B63\\u5728\\u83B7\\u53D6\\u5B66\\u6821 \".concat(school.id,\" (\").concat(school.name,\") \\u7684\\u6570\\u636E...\"));// 1. 获取学校的院部\nconst departmentsData=await getDepartments(school.id);console.log(\"\\u5B66\\u6821 \".concat(school.id,\" \\u7684\\u9662\\u90E8\\u6570\\u636E:\"),departmentsData);allDepartments.push(...departmentsData);// 2. 获取学校下的所有专业（按school_id过滤）\ntry{console.log(\"\\u6B63\\u5728\\u83B7\\u53D6\\u5B66\\u6821 \".concat(school.id,\" \\u7684\\u4E13\\u4E1A...\"));const majorsData=await getMajors(school.id);console.log(\"\\u5B66\\u6821 \".concat(school.id,\" \\u7684\\u4E13\\u4E1A\\u6570\\u636E:\"),majorsData);allMajors.push(...majorsData);// 3. 获取每个专业的班级\nfor(const major of majorsData){try{console.log(\"\\u6B63\\u5728\\u83B7\\u53D6\\u4E13\\u4E1A \".concat(major.id,\" (\").concat(major.name,\") \\u7684\\u73ED\\u7EA7...\"));const classesData=await getClasses(major.id);console.log(\"\\u4E13\\u4E1A \".concat(major.id,\" \\u7684\\u73ED\\u7EA7\\u6570\\u636E:\"),classesData);allClasses.push(...classesData);}catch(error){console.error(\"\\u83B7\\u53D6\\u4E13\\u4E1A \".concat(major.id,\" \\u7684\\u73ED\\u7EA7\\u5931\\u8D25:\"),error);}}}catch(error){console.error(\"\\u83B7\\u53D6\\u5B66\\u6821 \".concat(school.id,\" \\u7684\\u4E13\\u4E1A\\u5931\\u8D25:\"),error);}}catch(error){console.error(\"\\u83B7\\u53D6\\u5B66\\u6821 \".concat(school.id,\" \\u7684\\u9662\\u90E8\\u5931\\u8D25:\"),error);}}console.log('最终获取到的数据:');console.log('院部:',allDepartments);console.log('专业:',allMajors);console.log('班级:',allClasses);setDepartments(allDepartments);setMajors(allMajors);setClasses(allClasses);console.log('获取到的所有院部:',allDepartments);console.log('获取到的所有专业:',allMajors);console.log('获取到的所有班级:',allClasses);}catch(error){console.error('获取所有院部、专业和班级失败:',error);}finally{fetchAllMajorsAndClasses.isLoading=false;}};const handleSchoolChange=async schoolId=>{setSelectedSchool(schoolId);setSelectedDepartment('');setSelectedMajor('');setSelectedClass('');// 不再重置全局的departments、majors和classes数组\n// 这些数组应该保持完整，用于学生列表显示\n};const handleDepartmentChange=async departmentId=>{setSelectedDepartment(departmentId);setSelectedMajor('');setSelectedClass('');// 不再重置全局的majors和classes数组\n// 这些数组应该保持完整，用于学生列表显示\n};const handleMajorChange=async majorId=>{setSelectedMajor(majorId);setSelectedClass('');// 不再重置全局的classes数组\n// 这个数组应该保持完整，用于学生列表显示\n};const handleBatchImport=async()=>{if(!uploadedFile){setError('请选择要上传的Excel文件');setSuccess('');return;}if(!selectedSchool||!selectedDepartment||!selectedMajor||!selectedClass){setError('请选择学校、院部、专业和班级');setSuccess('');return;}try{var _resp$success_count,_resp$failed_count;setLoading(true);setError('');setSuccess('');// 创建FormData对象来上传文件\nconst formData=new FormData();formData.append('file',uploadedFile);formData.append('school_id',selectedSchool);formData.append('department_id',selectedDepartment);formData.append('major_id',selectedMajor);formData.append('class_id',selectedClass);// 调用新的批量导入API\nconst resp=await batchImportStudentsFromExcel(formData);const msg=(resp===null||resp===void 0?void 0:resp.message)||\"\\u6279\\u91CF\\u5BFC\\u5165\\u5B8C\\u6210: \\u6210\\u529F \".concat((_resp$success_count=resp===null||resp===void 0?void 0:resp.success_count)!==null&&_resp$success_count!==void 0?_resp$success_count:0,\" \\u4E2A, \\u5931\\u8D25 \").concat((_resp$failed_count=resp===null||resp===void 0?void 0:resp.failed_count)!==null&&_resp$failed_count!==void 0?_resp$failed_count:0,\" \\u4E2A\");setSuccess(msg);if(resp!==null&&resp!==void 0&&resp.errors&&resp.errors.length>0){const preview=resp.errors.slice(0,5).join('；');setError(\"\\u90E8\\u5206\\u5BFC\\u5165\\u5931\\u8D25\\uFF1A\".concat(preview).concat(resp.errors.length>5?' 等':''));}// 刷新用户列表\nconst usersData=await getUsers(1,50,'student');setUsers(usersData.users);// 清理上传的文件\nsetUploadedFile(null);}catch(error){var _error$response3,_error$response3$data;setError(((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.error)||'批量导入失败');}finally{setLoading(false);}};// 下载Excel模板\nconst handleDownloadTemplate=()=>{// 创建Excel模板数据\nconst templateData=[['学号','姓名','密码'],['2021001','张三','123456'],['2021002','李四','123456'],['2021003','王五','123456']];// 创建工作簿\nconst workbook=XLSX.utils.book_new();// 创建工作表\nconst worksheet=XLSX.utils.aoa_to_sheet(templateData);// 设置列宽\nconst colWidths=[{wch:15},// 学号列宽\n{wch:15},// 姓名列宽\n{wch:15}// 密码列宽\n];worksheet['!cols']=colWidths;// 将工作表添加到工作簿\nXLSX.utils.book_append_sheet(workbook,worksheet,'学生信息');// 生成Excel文件并下载\nXLSX.writeFile(workbook,'学生信息导入模板.xlsx');setSuccess('Excel模板下载成功！请填写学生信息后重新上传。');};// 处理文件上传\nconst handleFileUpload=event=>{const file=event.target.files[0];if(file){// 检查文件类型\nconst validTypes=['.xlsx','.xls','.csv'];const fileExtension=file.name.substring(file.name.lastIndexOf('.')).toLowerCase();if(!validTypes.includes(fileExtension)){setError('请选择有效的Excel文件格式（.xlsx, .xls, .csv）');return;}// 检查文件大小（5MB限制）\nif(file.size>5*1024*1024){setError('文件大小不能超过5MB');return;}setUploadedFile(file);setError('');setSuccess('文件选择成功！');}};// 移除上传的文件\nconst handleRemoveFile=()=>{setUploadedFile(null);setError('');setSuccess('');};const handleCreateProblem=async()=>{try{setLoading(true);setError('');setSuccess('');// 构建提交给后端的数据\nconst submitData=_objectSpread({},problemForm);// 如果是选择题，需要将options数组转换为choice_options字符串\nif(problemForm.type==='choice'){// 将选项数组转换为字符串格式：A.选项内容\\nB.选项内容\\nC.选项内容\nsubmitData.choice_options=problemForm.options.map(option=>\"\".concat(option.id,\".\").concat(option.text)).join('\\n');// 将正确答案数组转换为expected_output字符串\nsubmitData.expected_output=problemForm.correct_answers.join(',');// 删除前端特有的字段，避免后端报错\ndelete submitData.options;delete submitData.correct_answers;}// 如果是判断题，需要特殊处理\nif(problemForm.type==='judge'){// 判断题的选项固定为\"正确\"和\"错误\"\nsubmitData.choice_options='A.正确\\nB.错误';// 将正确答案转换为expected_output\nsubmitData.expected_output=problemForm.correct_answers.join(',');// 删除前端特有的字段\ndelete submitData.options;delete submitData.correct_answers;}// 如果是简答题，需要特殊处理\nif(problemForm.type==='short_answer'){// 将简答题答案设置为expected_output\nsubmitData.expected_output=problemForm.answer;// 删除前端特有的字段\ndelete submitData.answer;}// 如果是编程题，需要将testCases数组转换为后端期望的格式\nif(problemForm.type==='programming'){// 将testCases数组转换为test_cases和expected_output字符串\nconst testCases=problemForm.testCases||[];if(testCases.length===0){throw new Error('编程题至少需要一个测试用例');}// 构建test_cases字符串（每行一个输入）\nsubmitData.test_cases=testCases.map(tc=>tc.input||'')// 如果没有输入则使用空字符串\n.join('\\n');// 构建expected_output字符串（每行一个期望输出）\nsubmitData.expected_output=testCases.map(tc=>tc.output||'')// 输出是必填的\n.join('\\n');// 删除前端特有的字段\ndelete submitData.testCases;}// 添加调试信息\nconsole.log('提交的题目数据:',submitData);console.log('题目类型:',submitData.type);console.log('完整表单数据:',JSON.stringify(submitData,null,2));if(isEditing&&editingProblem){console.log('更新题目，ID:',editingProblem.id);await updateProblem(editingProblem.id,submitData);setSuccess('题目更新成功！');}else{console.log('创建新题目');await createProblem(submitData);setSuccess('题目创建成功！');}// 重置表单\nsetProblemForm({title:'',description:'',type:'programming',testCases:[],difficulty:'easy',time_limit:1000,memory_limit:128,options:[],correct_answers:[],is_multiple_choice:false,answer:''});setIsEditing(false);setEditingProblem(null);// 刷新题目列表\nconst problemsData=await getProblems(1,50);setProblems(problemsData.problems);// 切换到题目列表\nsetActiveSubTab('list');}catch(error){var _error$response4,_error$response4$data;console.error('题目操作失败:',error);console.error('错误响应:',error.response);setError(((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.error)||(isEditing?'更新题目失败':'创建题目失败'));}finally{setLoading(false);}};const handleEditProblem=problem=>{setEditingProblem(problem);// 根据题目类型初始化表单数据\nlet initialOptions=[];let initialCorrectAnswers=[];if(problem.type==='choice'){// 解析选择题的choice_options字符串\nif(problem.choice_options){const optionLines=problem.choice_options.split('\\n').filter(line=>line.trim());initialOptions=optionLines.map((line,index)=>{const match=line.match(/^([A-Z])\\.(.+)$/);if(match){return{id:match[1],// 使用字母ID (A, B, C...)\ntext:match[2].trim(),is_correct:false};}return{id:String.fromCharCode(65+index),// 如果没有匹配到字母，使用默认字母ID\ntext:line.trim(),is_correct:false};});}// 解析expected_output中的正确答案\nif(problem.expected_output){const correctAnswers=problem.expected_output.split(',').filter(ans=>ans.trim());initialCorrectAnswers=correctAnswers;// 设置选项的正确状态\ninitialOptions=initialOptions.map(option=>_objectSpread(_objectSpread({},option),{},{is_correct:correctAnswers.includes(option.id)}));}}else if(problem.type==='judge'){// 判断题固定选项\ninitialOptions=[{id:'A',text:'正确',is_correct:false},{id:'B',text:'错误',is_correct:false}];// 根据expected_output设置正确答案\nif(problem.expected_output){const correctAnswer=problem.expected_output.trim();if(correctAnswer==='A'){initialOptions[0].is_correct=true;initialCorrectAnswers=['A'];}else if(correctAnswer==='B'){initialOptions[1].is_correct=true;initialCorrectAnswers=['B'];}}}setProblemForm({title:problem.title,description:problem.description,type:problem.type||'programming',testCases:problem.type==='programming'?parseTestCases(problem.test_cases,problem.expected_output):[],difficulty:problem.difficulty,time_limit:problem.time_limit||1000,memory_limit:problem.memory_limit||128,options:initialOptions,correct_answers:initialCorrectAnswers,is_multiple_choice:problem.is_multiple_choice||false,answer:problem.answer||''});setIsEditing(true);setActiveSubTab('create');};const handleDeleteProblem=async problemId=>{if(!window.confirm('确定要删除这个题目吗？此操作不可恢复。')){return;}try{setLoading(true);setError('');setSuccess('');await deleteProblem(problemId);setSuccess('题目删除成功！');// 刷新题目列表\nconst problemsData=await getProblems(1,50);setProblems(problemsData.problems);}catch(error){var _error$response5,_error$response5$data;setError(((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.error)||'删除题目失败');}finally{setLoading(false);}};// 根据题目特征推断题目类型\nconst inferProblemType=problem=>{console.log('开始推断题目类型，题目数据:',problem);// 优先使用明确设置的题目类型\nif(problem.type&&problem.type!=='undefined'){console.log('使用明确设置的题目类型:',problem.type);return problem.type;}// 如果没有明确设置类型，则通过特征推断\nconsole.log('没有明确设置类型，开始推断...');// 检查所有可能的选项字段\nconst options=problem.options||problem.choices||problem.alternatives||problem.option_list||[];console.log('检查到的选项:',options);// 如果有选项，判断是选择题还是判断题\nif(Array.isArray(options)&&options.length>0){console.log('发现选项，数量:',options.length);// 检查是否是判断题（只有两个选项：正确、错误）\nif(options.length===2){const optionTexts=options.map(opt=>{const text=opt.text||opt.option_text||opt.content||opt.label||'';console.log('选项文本:',text);return text;});if(optionTexts.includes('正确')&&optionTexts.includes('错误')){console.log('推断为判断题');return'judge';}}console.log('推断为选择题');return'choice';}// 检查所有可能的答案字段\nconst answer=problem.answer||problem.solution||problem.correct_answer||problem.answer_text||'';console.log('检查到的答案:',answer);if(answer&&answer.trim()){console.log('推断为简答题');return'short_answer';}// 检查编程题相关字段\nconst testCases=problem.test_cases||problem.test_cases_text||problem.test_input||'';const expectedOutput=problem.expected_output||problem.expected_result||problem.expected_answer||'';console.log('检查到的测试用例:',testCases);console.log('检查到的期望输出:',expectedOutput);if(testCases&&expectedOutput){console.log('推断为编程题');return'programming';}// 如果都无法推断，默认返回编程题\nconsole.log('无法推断类型，默认返回编程题');return'programming';};// 根据ID获取学校名称\nconst getSchoolName=schoolId=>{if(!schoolId)return'-';const school=schools.find(s=>{const sId=s.id;return sId===schoolId||sId===parseInt(schoolId)||parseInt(sId)===schoolId;});return school?school.name:schoolId;};// 根据ID获取专业名称\nconst getMajorName=majorId=>{if(!majorId)return'-';const major=majors.find(m=>{const mId=m.id;return mId===majorId||mId===parseInt(majorId)||parseInt(mId)===majorId;});return major?major.name:majorId;};// 根据ID获取班级名称\nconst getClassName=classId=>{if(!classId)return'-';const classItem=classes.find(c=>{const cId=c.id;return cId===classId||cId===parseInt(classId)||parseInt(cId)===classId;});return classItem?classItem.name:classId;};const handleCancelEdit=()=>{setIsEditing(false);setEditingProblem(null);setProblemForm({title:'',description:'',type:'programming',testCases:[],difficulty:'easy',time_limit:1000,memory_limit:128,options:[],correct_answers:[],is_multiple_choice:false,answer:''});setActiveSubTab('list');};// 课程相关处理函数（只读功能）\nconst handleViewCourseDetail=courseId=>{const course=courses.find(c=>c.id===courseId);if(course){setActiveTab('courses');setActiveSubTab('detail');setEditingCourse(course);}};// 作业相关处理函数\nconst handleCreateAssignment=async()=>{try{setLoading(true);setError('');setSuccess('');// 如果在课程详情页面创建作业，自动设置课程ID\nconst assignmentData=_objectSpread({},assignmentForm);if(activeSubTab==='create-assignment'&&editingCourse){assignmentData.course_id=editingCourse.id;}if(isEditingAssignment&&editingAssignment){await updateAssignment(editingAssignment.id,assignmentData);setSuccess('作业更新成功！');}else{await createAssignment(assignmentData);setSuccess('作业布置成功！');}// 重置表单\nsetAssignmentForm({name:'',description:'',requirements:'',due_date:'',course_id:'',problem_ids:[]});setIsEditingAssignment(false);setEditingAssignment(null);// 刷新作业列表\nconst assignmentsData=await getCourseAssignments();setAssignments(assignmentsData.assignments||[]);// 如果在课程详情页面，返回到课程详情；否则返回到课程列表\nif(activeSubTab==='create-assignment'){setActiveSubTab('detail');}else{setActiveSubTab('list');}}catch(error){var _error$response6,_error$response6$data;setError(((_error$response6=error.response)===null||_error$response6===void 0?void 0:(_error$response6$data=_error$response6.data)===null||_error$response6$data===void 0?void 0:_error$response6$data.error)||(isEditingAssignment?'更新作业失败':'布置作业失败'));}finally{setLoading(false);}};const handleEditAssignment=assignment=>{setEditingAssignment(assignment);setAssignmentForm({name:assignment.name,description:assignment.description||'',requirements:assignment.requirements||'',due_date:assignment.due_date||'',course_id:assignment.course_id||'',problem_ids:assignment.problem_ids||[]});setIsEditingAssignment(true);// 记录编辑作业时的上下文\nif(activeSubTab==='detail'&&editingCourse){setEditingAssignmentContext('course-detail');}else{setEditingAssignmentContext('course-list');}// 切换到作业创建模式\nsetActiveSubTab('create-assignment');};const handleDeleteAssignment=async assignmentId=>{if(!window.confirm('确定要删除该作业吗？此操作不可恢复。'))return;try{setLoading(true);setError('');setSuccess('');await deleteAssignment(assignmentId);setSuccess('作业已删除');// 刷新作业列表\nconst assignmentsData=await getCourseAssignments();setAssignments(assignmentsData.assignments||[]);}catch(error){var _error$response7,_error$response7$data;setError(((_error$response7=error.response)===null||_error$response7===void 0?void 0:(_error$response7$data=_error$response7.data)===null||_error$response7$data===void 0?void 0:_error$response7$data.error)||'删除作业失败');}finally{setLoading(false);}};// 学生-课程关联关系处理函数\nconst handleAddStudentToCourse=async()=>{if(!editingCourse)return;try{setLoading(true);setError('');setSuccess('');// 查找学生是否已存在\nconst existingStudent=users.find(user=>user.username===addStudentForm.student_no&&user.role==='student');if(!existingStudent){setError('学生不存在，请先创建学生账号');return;}// 使用API添加学生到课程\ntry{await addStudentToCourse(editingCourse.id,{student_id:existingStudent.id,class_id:editingCourse.class_id});setSuccess('学生已成功添加到课程！');// 重新加载课程学生数据\nconst courseStudentsData=await getCourseStudents(editingCourse.id);if(courseStudentsData&&courseStudentsData.length>0){const apiRelations=courseStudentsData.map(student=>({student_id:student.student_id,class_id:student.class_id,course_id:editingCourse.id,student_name:student.student_name,student_no:student.student_no,added_at:student.added_at||new Date().toISOString()}));setStudentClassRelations(apiRelations);}else{setStudentClassRelations([]);}// 刷新课程列表（因为学生数量发生变化）\ntry{const coursesData=await getTeacherCourses();if(coursesData&&coursesData.courses){setCourses(coursesData.courses);// 更新当前编辑的课程信息\nconst updatedCourse=coursesData.courses.find(c=>c.id===editingCourse.id);if(updatedCourse){setEditingCourse(updatedCourse);}}}catch(error){console.warn('刷新课程列表失败:',error);}}catch(apiError){var _apiError$response,_apiError$response$da;console.error('添加学生到课程失败:',apiError);setError(((_apiError$response=apiError.response)===null||_apiError$response===void 0?void 0:(_apiError$response$da=_apiError$response.data)===null||_apiError$response$da===void 0?void 0:_apiError$response$da.error)||'添加学生失败');return;}// 重置表单\nsetAddStudentForm({student_no:'',name:'',password:'',email:'',phone:'',school_id:'',department_id:'',major_id:'',class_id:''});// 返回到课程详情页\nsetActiveSubTab('detail');}catch(error){var _error$response8,_error$response8$data;setError(((_error$response8=error.response)===null||_error$response8===void 0?void 0:(_error$response8$data=_error$response8.data)===null||_error$response8$data===void 0?void 0:_error$response8$data.error)||'添加学生失败');}finally{setLoading(false);}};const handleRemoveStudentFromCourse=async relationId=>{if(!window.confirm('确定要从该课程中移除该学生吗？'))return;try{// 解析relationId获取学生ID和课程ID\nconst[studentId]=relationId.split('_');// 使用API从课程中移除学生\ntry{await removeStudentFromCourse(editingCourse.id,studentId);setSuccess('学生已从课程中移除');// 重新加载课程学生数据\nconst courseStudentsData=await getCourseStudents(editingCourse.id);if(courseStudentsData&&courseStudentsData.length>0){const apiRelations=courseStudentsData.map(student=>({student_id:student.student_id,class_id:student.class_id,course_id:editingCourse.id,student_name:student.student_name,student_no:student.student_no,added_at:student.added_at||new Date().toISOString()}));setStudentClassRelations(apiRelations);}else{setStudentClassRelations([]);}// 刷新课程列表（因为学生数量发生变化）\ntry{const coursesData=await getTeacherCourses();if(coursesData&&coursesData.courses){setCourses(coursesData.courses);// 更新当前编辑的课程信息\nconst updatedCourse=coursesData.courses.find(c=>c.id===editingCourse.id);if(updatedCourse){setEditingCourse(updatedCourse);}}}catch(error){console.warn('刷新课程列表失败:',error);}}catch(apiError){var _apiError$response2,_apiError$response2$d;console.error('从课程中移除学生失败:',apiError);setError(((_apiError$response2=apiError.response)===null||_apiError$response2===void 0?void 0:(_apiError$response2$d=_apiError$response2.data)===null||_apiError$response2$d===void 0?void 0:_apiError$response2$d.error)||'移除学生失败');return;}}catch(error){setError('移除学生失败');}};// 学生管理标签页渲染函数\nconst renderStudentsTab=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"tab-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sub-tabs\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"sub-tab-btn \".concat(activeSubTab==='list'?'active':''),onClick:()=>setActiveSubTab('list'),children:\"\\u5B66\\u751F\\u5217\\u8868\"}),/*#__PURE__*/_jsx(\"button\",{className:\"sub-tab-btn \".concat(activeSubTab==='add'?'active':''),onClick:()=>setActiveSubTab('add'),children:\"\\u6DFB\\u52A0\\u5B66\\u751F\"}),/*#__PURE__*/_jsx(\"button\",{className:\"sub-tab-btn \".concat(activeSubTab==='import'?'active':''),onClick:()=>setActiveSubTab('import'),children:\"\\u6279\\u91CF\\u5BFC\\u5165\"})]}),activeSubTab==='list'&&/*#__PURE__*/_jsxs(\"div\",{className:\"section-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u5B66\\u751F\\u5217\\u8868\"}),/*#__PURE__*/_jsx(\"button\",{className:\"add-btn\",onClick:()=>setActiveSubTab('add'),children:\"\\u6DFB\\u52A0\\u5B66\\u751F\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"students-table\",children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u5B66\\u53F7\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u59D3\\u540D\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u90AE\\u7BB1\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u624B\\u673A\\u53F7\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u5B66\\u6821\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u4E13\\u4E1A\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u73ED\\u7EA7\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u64CD\\u4F5C\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:users.map(user=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:user.id}),/*#__PURE__*/_jsx(\"td\",{children:user.username}),/*#__PURE__*/_jsx(\"td\",{children:user.name}),/*#__PURE__*/_jsx(\"td\",{children:user.email||'-'}),/*#__PURE__*/_jsx(\"td\",{children:user.phone||'-'}),/*#__PURE__*/_jsx(\"td\",{children:getSchoolName(user.school_id)}),/*#__PURE__*/_jsx(\"td\",{children:getMajorName(user.major_id)}),/*#__PURE__*/_jsx(\"td\",{children:getClassName(user.class_id)}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"action-btn edit\",onClick:()=>handleEditStudentClick(user),children:\"\\u7F16\\u8F91\"}),/*#__PURE__*/_jsx(\"button\",{className:\"action-btn delete\",onClick:()=>handleDeleteStudent(user.id),children:\"\\u5220\\u9664\"})]})]},user.id))})]})})]}),activeSubTab==='add'&&/*#__PURE__*/_jsxs(\"div\",{className:\"section-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u2795 \\u6DFB\\u52A0\\u5B66\\u751F\"}),/*#__PURE__*/_jsx(\"button\",{className:\"secondary-btn\",onClick:()=>setActiveSubTab('list'),children:\"\\u2190 \\u8FD4\\u56DE\\u5B66\\u751F\\u5217\\u8868\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"add-student-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u5B66\\u53F7\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u5B66\\u53F7\",value:addStudentForm.student_no,onChange:e=>setAddStudentForm(prev=>_objectSpread(_objectSpread({},prev),{},{student_no:e.target.value}))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u59D3\\u540D\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u5B66\\u751F\\u59D3\\u540D\",value:addStudentForm.name,onChange:e=>setAddStudentForm(prev=>_objectSpread(_objectSpread({},prev),{},{name:e.target.value}))})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u5BC6\\u7801\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u521D\\u59CB\\u5BC6\\u7801\",value:addStudentForm.password,onChange:e=>setAddStudentForm(prev=>_objectSpread(_objectSpread({},prev),{},{password:e.target.value}))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u90AE\\u7BB1\\uFF1A\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u90AE\\u7BB1\\u5730\\u5740\",value:addStudentForm.email,onChange:e=>setAddStudentForm(prev=>_objectSpread(_objectSpread({},prev),{},{email:e.target.value}))})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u624B\\u673A\\u53F7\\uFF1A\"}),/*#__PURE__*/_jsx(\"input\",{type:\"tel\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u624B\\u673A\\u53F7\\u7801\",value:addStudentForm.phone,onChange:e=>setAddStudentForm(prev=>_objectSpread(_objectSpread({},prev),{},{phone:e.target.value}))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u5B66\\u6821\\uFF1A\"}),/*#__PURE__*/_jsxs(\"select\",{value:addStudentForm.school_id,onChange:e=>handleAddStudentSchoolChange(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\u8BF7\\u9009\\u62E9\\u5B66\\u6821\\uFF08\\u53EF\\u9009\\uFF09\"}),schools.map(school=>/*#__PURE__*/_jsx(\"option\",{value:school.id,children:school.name},school.id))]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u9662\\u90E8\\uFF1A\"}),/*#__PURE__*/_jsxs(\"select\",{value:addStudentForm.department_id,onChange:e=>handleAddStudentDepartmentChange(e.target.value),disabled:!addStudentForm.school_id,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\u8BF7\\u9009\\u62E9\\u9662\\u90E8\\uFF08\\u53EF\\u9009\\uFF09\"}),getAddStudentSchoolDepartments().map(department=>/*#__PURE__*/_jsx(\"option\",{value:department.id,children:department.name},department.id))]}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'12px',color:'#666',marginTop:'5px'},children:[\"\\u5F53\\u524D\\u5B66\\u6821ID: \",addStudentForm.school_id,\" | \\u53EF\\u7528\\u9662\\u90E8\\u6570\\u91CF: \",getAddStudentSchoolDepartments().length,\" | \\u603B\\u9662\\u90E8\\u6570\\u91CF: \",departments.length]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u4E13\\u4E1A\\uFF1A\"}),/*#__PURE__*/_jsxs(\"select\",{value:addStudentForm.major_id,onChange:e=>handleAddStudentMajorChange(e.target.value),disabled:!addStudentForm.department_id,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\u8BF7\\u9009\\u62E9\\u4E13\\u4E1A\\uFF08\\u53EF\\u9009\\uFF09\"}),getAddStudentDepartmentMajors().map(major=>/*#__PURE__*/_jsx(\"option\",{value:major.id,children:major.name},major.id))]}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'12px',color:'#666',marginTop:'5px'},children:[\"\\u5F53\\u524D\\u9662\\u90E8ID: \",addStudentForm.department_id,\" | \\u53EF\\u7528\\u4E13\\u4E1A\\u6570\\u91CF: \",getAddStudentDepartmentMajors().length,\" | \\u603B\\u4E13\\u4E1A\\u6570\\u91CF: \",majors.length]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u73ED\\u7EA7\\uFF1A\"}),/*#__PURE__*/_jsxs(\"select\",{value:addStudentForm.class_id,onChange:e=>setAddStudentForm(prev=>_objectSpread(_objectSpread({},prev),{},{class_id:e.target.value})),disabled:!addStudentForm.major_id,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\u8BF7\\u9009\\u62E9\\u73ED\\u7EA7\\uFF08\\u53EF\\u9009\\uFF09\"}),getAddStudentMajorClasses().map(classItem=>/*#__PURE__*/_jsx(\"option\",{value:classItem.id,children:classItem.name},classItem.id))]}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'12px',color:'#666',marginTop:'5px'},children:[\"\\u5F53\\u524D\\u4E13\\u4E1AID: \",addStudentForm.major_id,\" | \\u53EF\\u7528\\u73ED\\u7EA7\\u6570\\u91CF: \",getAddStudentMajorClasses().length,\" | \\u603B\\u73ED\\u7EA7\\u6570\\u91CF: \",classes.length]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"submit-btn\",onClick:handleAddStudent,disabled:loading||!addStudentForm.student_no||!addStudentForm.name||!addStudentForm.password,children:loading?'创建中...':'创建学生账号'})})]})]}),activeSubTab==='import'&&/*#__PURE__*/_jsxs(\"div\",{className:\"section-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83D\\uDCE5 \\u6279\\u91CF\\u5BFC\\u5165\\u5B66\\u751F\"}),/*#__PURE__*/_jsx(\"button\",{className:\"secondary-btn\",onClick:()=>setActiveSubTab('list'),children:\"\\u2190 \\u8FD4\\u56DE\\u5B66\\u751F\\u5217\\u8868\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"import-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-help\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u5BFC\\u5165\\u8BF4\\u660E\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u8BF7\\u6309\\u4EE5\\u4E0B\\u6B65\\u9AA4\\u64CD\\u4F5C\\uFF1A\"}),/*#__PURE__*/_jsxs(\"ol\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"\\u70B9\\u51FB\\u4E0B\\u65B9\\\"\\u4E0B\\u8F7DExcel\\u6A21\\u677F\\\"\\u6309\\u94AE\\uFF0C\\u4E0B\\u8F7D\\u6807\\u51C6\\u683C\\u5F0F\\u7684Excel\\u6587\\u4EF6\\uFF08.xlsx\\u683C\\u5F0F\\uFF09\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u5728Excel\\u6587\\u4EF6\\u4E2D\\u586B\\u5199\\u5B66\\u751F\\u4FE1\\u606F\\uFF08\\u5B66\\u53F7\\u3001\\u59D3\\u540D\\u3001\\u5BC6\\u7801\\uFF09\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u9009\\u62E9\\u5B66\\u6821\\u3001\\u9662\\u90E8\\u3001\\u4E13\\u4E1A\\u3001\\u73ED\\u7EA7\\u4FE1\\u606F\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u4E0A\\u4F20\\u586B\\u5199\\u597D\\u7684Excel\\u6587\\u4EF6\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u7CFB\\u7EDF\\u5C06\\u81EA\\u52A8\\u8BC6\\u522B\\u5E76\\u6DFB\\u52A0\\u5B66\\u751F\\u4FE1\\u606F\"})]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u6CE8\\u610F\\uFF1A\"}),\"\\u5B66\\u53F7\\u3001\\u59D3\\u540D\\u3001\\u5BC6\\u7801\\u4E3A\\u5FC5\\u586B\\u9879\\uFF0C\\u5B66\\u6821\\u3001\\u9662\\u90E8\\u3001\\u4E13\\u4E1A\\u3001\\u73ED\\u7EA7\\u4FE1\\u606F\\u5C06\\u5E94\\u7528\\u5230\\u6240\\u6709\\u5BFC\\u5165\\u7684\\u5B66\\u751F\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u5B66\\u6821\\uFF1A\"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedSchool,onChange:e=>handleSchoolChange(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\u8BF7\\u9009\\u62E9\\u5B66\\u6821\\uFF08\\u5FC5\\u9009\\uFF09\"}),schools.map(school=>/*#__PURE__*/_jsx(\"option\",{value:school.id,children:school.name},school.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u9662\\u90E8\\uFF1A\"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedDepartment,onChange:e=>handleDepartmentChange(e.target.value),disabled:!selectedSchool,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\u8BF7\\u9009\\u62E9\\u9662\\u90E8\\uFF08\\u5FC5\\u9009\\uFF09\"}),getCurrentSchoolDepartments().map(department=>/*#__PURE__*/_jsx(\"option\",{value:department.id,children:department.name},department.id))]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u4E13\\u4E1A\\uFF1A\"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedMajor,onChange:e=>handleMajorChange(e.target.value),disabled:!selectedDepartment,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\u8BF7\\u9009\\u62E9\\u4E13\\u4E1A\\uFF08\\u5FC5\\u9009\\uFF09\"}),getCurrentDepartmentMajors().map(major=>/*#__PURE__*/_jsx(\"option\",{value:major.id,children:major.name},major.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u73ED\\u7EA7\\uFF1A\"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedClass,onChange:e=>setSelectedClass(e.target.value),disabled:!selectedMajor,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\u8BF7\\u9009\\u62E9\\u73ED\\u7EA7\\uFF08\\u5FC5\\u9009\\uFF09\"}),getCurrentMajorClasses().map(classItem=>/*#__PURE__*/_jsx(\"option\",{value:classItem.id,children:classItem.name},classItem.id))]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"download-btn\",onClick:handleDownloadTemplate,disabled:loading,children:\"\\uD83D\\uDCE5 \\u4E0B\\u8F7DExcel\\u6A21\\u677F\"}),/*#__PURE__*/_jsx(\"span\",{className:\"form-help-text\",children:\"\\u4E0B\\u8F7D\\u5305\\u542B\\u5B66\\u53F7\\u3001\\u59D3\\u540D\\u3001\\u5BC6\\u7801\\u4E09\\u5217\\u7684\\u6807\\u51C6Excel\\u6A21\\u677F\\uFF08.xlsx\\u683C\\u5F0F\\uFF09\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u4E0A\\u4F20Excel\\u6587\\u4EF6\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\".xlsx,.xls\",onChange:handleFileUpload,disabled:loading||!selectedSchool||!selectedDepartment||!selectedMajor||!selectedClass}),/*#__PURE__*/_jsx(\"span\",{className:\"form-help-text\",children:\"\\u652F\\u6301.xlsx\\u548C.xls\\u683C\\u5F0F\\uFF0C\\u6587\\u4EF6\\u5927\\u5C0F\\u4E0D\\u8D85\\u8FC75MB\\u3002\\u5EFA\\u8BAE\\u4F7F\\u7528\\u4E0B\\u8F7D\\u7684Excel\\u6A21\\u677F\\u586B\\u5199\\u6570\\u636E\\u3002\"})]})}),uploadedFile&&/*#__PURE__*/_jsx(\"div\",{className:\"form-row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"file-info\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"\\uD83D\\uDCCE \\u5DF2\\u9009\\u62E9\\u6587\\u4EF6: \",uploadedFile.name]}),/*#__PURE__*/_jsx(\"button\",{className:\"remove-file-btn\",onClick:handleRemoveFile,children:\"\\u2715 \\u79FB\\u9664\"})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"submit-btn\",onClick:handleBatchImport,disabled:loading||!uploadedFile||!selectedSchool||!selectedDepartment||!selectedMajor||!selectedClass,children:loading?'导入中...':'开始导入'})})]})]})]});// 题目管理标签页渲染函数\nconst renderProblemsTab=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"tab-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sub-tabs\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"sub-tab-btn \".concat(activeSubTab==='list'?'active':''),onClick:()=>setActiveSubTab('list'),children:\"\\u9898\\u76EE\\u5217\\u8868\"}),/*#__PURE__*/_jsx(\"button\",{className:\"sub-tab-btn \".concat(activeSubTab==='create'?'active':''),onClick:()=>setActiveSubTab('create'),children:\"\\u521B\\u5EFA\\u9898\\u76EE\"}),/*#__PURE__*/_jsx(\"button\",{className:\"sub-tab-btn \".concat(activeSubTab==='ai'?'active':''),onClick:()=>setActiveSubTab('ai'),children:\"AI\\u751F\\u9898\"})]}),activeSubTab==='list'&&/*#__PURE__*/_jsxs(\"div\",{className:\"section-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u9898\\u76EE\\u5217\\u8868\"}),/*#__PURE__*/_jsx(\"button\",{className:\"add-btn\",onClick:()=>setActiveSubTab('create'),children:\"\\u521B\\u5EFA\\u9898\\u76EE\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"problems-table\",children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u6807\\u9898\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u7C7B\\u578B\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u96BE\\u5EA6\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u65F6\\u95F4\\u9650\\u5236\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u5185\\u5B58\\u9650\\u5236\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u64CD\\u4F5C\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:problems.map(problem=>{// 调试信息：打印每个题目的类型\nconsole.log(\"=== \\u9898\\u76EE \".concat(problem.id,\" \\u8C03\\u8BD5\\u4FE1\\u606F ===\"));console.log('题目标题:',problem.title);console.log('原始类型:',problem.type);console.log('完整题目对象:',problem);console.log('所有字段名:',Object.keys(problem));console.log('选项字段:',problem.options);console.log('答案字段:',problem.answer);console.log('测试用例字段:',problem.test_cases);console.log('期望输出字段:',problem.expected_output);const inferredType=inferProblemType(problem);console.log('推断类型:',inferredType);console.log('=== 调试信息结束 ===');return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:problem.id}),/*#__PURE__*/_jsx(\"td\",{children:problem.title}),/*#__PURE__*/_jsxs(\"td\",{children:[(()=>{const inferredType=inferProblemType(problem);const displayType=inferredType==='choice'?'选择题':inferredType==='judge'?'判断题':inferredType==='short_answer'?'简答题':'编程题';return/*#__PURE__*/_jsx(\"span\",{className:\"type-badge \".concat(inferredType),children:displayType});})(),/*#__PURE__*/_jsxs(\"small\",{style:{display:'block',color:'#999',fontSize:'10px'},children:[\"\\u539F\\u59CB\\u7C7B\\u578B: \",problem.type||'undefined',\" | \\u63A8\\u65AD\\u7C7B\\u578B: \",inferProblemType(problem)]})]}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"span\",{className:\"difficulty-badge \".concat(problem.difficulty),children:problem.difficulty==='easy'?'简单':problem.difficulty==='medium'?'中等':'困难'})}),/*#__PURE__*/_jsxs(\"td\",{children:[problem.time_limit||'-',\"ms\"]}),/*#__PURE__*/_jsxs(\"td\",{children:[problem.memory_limit||'-',\"MB\"]}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"action-btn edit\",onClick:()=>handleEditProblem(problem),children:\"\\u7F16\\u8F91\"}),/*#__PURE__*/_jsx(\"button\",{className:\"action-btn delete\",onClick:()=>handleDeleteProblem(problem.id),children:\"\\u5220\\u9664\"})]})]},problem.id);})})]})})]}),activeSubTab==='create'&&/*#__PURE__*/_jsxs(\"div\",{className:\"section-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:isEditing?'✏️ 编辑题目':'➕ 创建题目'}),/*#__PURE__*/_jsx(\"button\",{className:\"secondary-btn\",onClick:handleCancelEdit,children:\"\\u2190 \\u8FD4\\u56DE\\u9898\\u76EE\\u5217\\u8868\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"problem-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u9898\\u76EE\\u6807\\u9898\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u9898\\u76EE\\u6807\\u9898\",value:problemForm.title,onChange:e=>setProblemForm(prev=>_objectSpread(_objectSpread({},prev),{},{title:e.target.value}))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u9898\\u76EE\\u7C7B\\u578B\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsxs(\"select\",{value:problemForm.type,onChange:e=>handleProblemTypeChange(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"programming\",children:\"\\u7F16\\u7A0B\\u9898\"}),/*#__PURE__*/_jsx(\"option\",{value:\"choice\",children:\"\\u9009\\u62E9\\u9898\"}),/*#__PURE__*/_jsx(\"option\",{value:\"judge\",children:\"\\u5224\\u65AD\\u9898\"}),/*#__PURE__*/_jsx(\"option\",{value:\"short_answer\",children:\"\\u7B80\\u7B54\\u9898\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u96BE\\u5EA6\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsxs(\"select\",{value:problemForm.difficulty,onChange:e=>setProblemForm(prev=>_objectSpread(_objectSpread({},prev),{},{difficulty:e.target.value})),children:[/*#__PURE__*/_jsx(\"option\",{value:\"easy\",children:\"\\u7B80\\u5355\"}),/*#__PURE__*/_jsx(\"option\",{value:\"medium\",children:\"\\u4E2D\\u7B49\"}),/*#__PURE__*/_jsx(\"option\",{value:\"hard\",children:\"\\u56F0\\u96BE\"})]})]}),problemForm.type==='choice'&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u9009\\u62E9\\u7C7B\\u578B\\uFF1A\"}),/*#__PURE__*/_jsx(\"div\",{className:\"checkbox-group\",children:/*#__PURE__*/_jsxs(\"label\",{className:\"checkbox-label\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:problemForm.is_multiple_choice,onChange:e=>setProblemForm(prev=>_objectSpread(_objectSpread({},prev),{},{is_multiple_choice:e.target.checked}))}),/*#__PURE__*/_jsx(\"span\",{children:\"\\u591A\\u9009\\u9898\"})]})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u9898\\u76EE\\u63CF\\u8FF0\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"\\u8BF7\\u8F93\\u5165\\u9898\\u76EE\\u63CF\\u8FF0\",value:problemForm.description,onChange:e=>setProblemForm(prev=>_objectSpread(_objectSpread({},prev),{},{description:e.target.value})),rows:6})]}),problemForm.type==='choice'&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u9009\\u9879\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"choice-options\",children:[problemForm.options.map((option,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"choice-option\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"option-header\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"option-label\",children:[\"\\u9009\\u9879 \",String.fromCharCode(65+index)]}),/*#__PURE__*/_jsxs(\"div\",{className:\"option-controls\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"checkbox-label\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:option.is_correct,onChange:()=>toggleChoiceOptionCorrect(option.id)}),/*#__PURE__*/_jsx(\"span\",{children:\"\\u6B63\\u786E\\u7B54\\u6848\"})]}),problemForm.options.length>2&&/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"remove-option-btn\",onClick:()=>removeChoiceOption(option.id),children:\"\\u5220\\u9664\"})]})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u9009\\u9879 \".concat(String.fromCharCode(65+index),\" \\u7684\\u5185\\u5BB9\"),value:option.text,onChange:e=>updateChoiceOption(option.id,'text',e.target.value),className:\"option-input\"})]},option.id)),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"add-option-btn\",onClick:addChoiceOption,children:\"+ \\u6DFB\\u52A0\\u9009\\u9879\"})]}),/*#__PURE__*/_jsx(\"small\",{children:\"\\u81F3\\u5C11\\u9700\\u89812\\u4E2A\\u9009\\u9879\\uFF0C\\u6700\\u591A\\u652F\\u630110\\u4E2A\\u9009\\u9879\"})]}),problemForm.type==='judge'&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u9009\\u9879\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"choice-options\",children:problemForm.options.map((option,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"choice-option\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"option-header\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"option-label\",children:[\"\\u9009\\u9879 \",index+1]}),/*#__PURE__*/_jsx(\"div\",{className:\"option-controls\",children:/*#__PURE__*/_jsxs(\"label\",{className:\"checkbox-label\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:option.is_correct,onChange:()=>toggleChoiceOptionCorrect(option.id)}),/*#__PURE__*/_jsx(\"span\",{children:\"\\u6B63\\u786E\\u7B54\\u6848\"})]})})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:option.text,onChange:e=>updateChoiceOption(option.id,'text',e.target.value),className:\"option-input\",readOnly:true}),/*#__PURE__*/_jsx(\"small\",{className:\"option-hint\",children:\"\\u5224\\u65AD\\u9898\\u9009\\u9879\\u4E0D\\u53EF\\u7F16\\u8F91\"})]},option.id))}),/*#__PURE__*/_jsx(\"small\",{children:\"\\u5224\\u65AD\\u9898\\u56FA\\u5B9A\\u4E3A\\\"\\u6B63\\u786E\\\"\\u548C\\\"\\u9519\\u8BEF\\\"\\u4E24\\u4E2A\\u9009\\u9879\\uFF0C\\u8BF7\\u9009\\u62E9\\u5176\\u4E2D\\u4E00\\u4E2A\\u4F5C\\u4E3A\\u6B63\\u786E\\u7B54\\u6848\"})]}),problemForm.type==='short_answer'&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u7B54\\u6848\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"\\u8BF7\\u8F93\\u5165\\u7B80\\u7B54\\u9898\\u7684\\u6807\\u51C6\\u7B54\\u6848\",value:problemForm.answer,onChange:e=>setProblemForm(prev=>_objectSpread(_objectSpread({},prev),{},{answer:e.target.value})),rows:6}),/*#__PURE__*/_jsx(\"small\",{children:\"\\u8BF7\\u63D0\\u4F9B\\u8BE6\\u7EC6\\u7684\\u7B54\\u6848\\u5185\\u5BB9\\uFF0C\\u4F9B\\u5B66\\u751F\\u53C2\\u8003\\u548C\\u6559\\u5E08\\u8BC4\\u5206\\u4F7F\\u7528\"})]}),problemForm.type==='programming'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u6D4B\\u8BD5\\u7528\\u4F8B\\u7BA1\\u7406\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"test-cases-manager\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"test-cases-header\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\u6D4B\\u8BD5\\u7528\\u4F8B\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"add-test-case-btn\",onClick:()=>addTestCase(),children:\"\\u2795 \\u6DFB\\u52A0\\u6D4B\\u8BD5\\u7528\\u4F8B\"})]}),problemForm.testCases&&problemForm.testCases.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"test-cases-list\",children:problemForm.testCases.map((testCase,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"test-case-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"test-case-header\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"test-case-number\",children:[\"\\u6D4B\\u8BD5\\u7528\\u4F8B \",index+1]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"remove-test-case-btn\",onClick:()=>removeTestCase(testCase.id),children:\"\\u274C\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"test-case-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"test-case-input\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u8F93\\u5165\\uFF1A\"}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"\\u8F93\\u5165\\u6570\\u636E\\uFF08\\u5982\\u679C\\u6CA1\\u6709\\u8F93\\u5165\\u8BF7\\u7559\\u7A7A\\uFF09\",value:testCase.input||'',onChange:e=>updateTestCase(testCase.id,'input',e.target.value),rows:3}),/*#__PURE__*/_jsx(\"small\",{children:\"\\u5982\\u679C\\u6CA1\\u6709\\u8F93\\u5165\\uFF0C\\u8BF7\\u7559\\u7A7A\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"test-case-output\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u671F\\u671B\\u8F93\\u51FA\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"\\u671F\\u671B\\u7684\\u8F93\\u51FA\\u7ED3\\u679C\",value:testCase.output||'',onChange:e=>updateTestCase(testCase.id,'output',e.target.value),rows:3})]})]})]},testCase.id))}):/*#__PURE__*/_jsx(\"div\",{className:\"no-test-cases\",children:/*#__PURE__*/_jsx(\"p\",{children:\"\\u8FD8\\u6CA1\\u6709\\u6DFB\\u52A0\\u6D4B\\u8BD5\\u7528\\u4F8B\\uFF0C\\u8BF7\\u70B9\\u51FB\\\"\\u6DFB\\u52A0\\u6D4B\\u8BD5\\u7528\\u4F8B\\\"\\u6309\\u94AE\\u6DFB\\u52A0\"})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u65F6\\u95F4\\u9650\\u5236\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u65F6\\u95F4\\u9650\\u5236\\uFF08\\u6BEB\\u79D2\\uFF09\",value:problemForm.time_limit,onChange:e=>setProblemForm(prev=>_objectSpread(_objectSpread({},prev),{},{time_limit:parseInt(e.target.value)||1000})),min:\"100\",max:\"10000\"}),/*#__PURE__*/_jsx(\"small\",{children:\"\\u5355\\u4F4D\\uFF1A\\u6BEB\\u79D2\\uFF0C\\u8303\\u56F4\\uFF1A100-10000\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u5185\\u5B58\\u9650\\u5236\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u5185\\u5B58\\u9650\\u5236\\uFF08MB\\uFF09\",value:problemForm.memory_limit,onChange:e=>setProblemForm(prev=>_objectSpread(_objectSpread({},prev),{},{memory_limit:parseInt(e.target.value)||128})),min:\"16\",max:\"512\"}),/*#__PURE__*/_jsx(\"small\",{children:\"\\u5355\\u4F4D\\uFF1AMB\\uFF0C\\u8303\\u56F4\\uFF1A16-512\"})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"submit-btn\",onClick:handleCreateProblem,disabled:loading||!problemForm.title||!problemForm.description||problemForm.type==='programming'&&(problemForm.testCases.length===0||problemForm.testCases.some(tc=>!tc.output.trim()))||problemForm.type==='choice'&&(problemForm.options.length<2||problemForm.options.some(option=>!option.text)||problemForm.correct_answers.length===0)||problemForm.type==='judge'&&problemForm.correct_answers.length!==1||problemForm.type==='short_answer'&&!problemForm.answer,children:loading?isEditing?'更新中...':'创建中...':isEditing?'更新题目':'创建题目'})})]})]}),activeSubTab==='ai'&&/*#__PURE__*/_jsx(AIProblemGenerationPage,{})]});// 课程查看标签页渲染函数（只读功能）\nconst renderCoursesTab=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"tab-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sub-tabs\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"sub-tab-btn \".concat(activeSubTab==='list'?'active':''),onClick:()=>{setActiveSubTab('list');// 如果当前在课程详情页，清除课程详情状态\nif(activeSubTab==='detail'){setEditingCourse(null);}// 清除添加学生上下文\nsetAddingStudentContext('');},children:\"\\u8BFE\\u7A0B\\u5217\\u8868\"}),/*#__PURE__*/_jsx(\"button\",{className:\"sub-tab-btn \".concat(activeSubTab==='detail'?'active':''),onClick:()=>setActiveSubTab('detail'),style:{display:editingCourse&&activeSubTab==='detail'?'inline-block':'none'},children:\"\\u8BFE\\u7A0B\\u8BE6\\u60C5\"}),/*#__PURE__*/_jsx(\"button\",{className:\"sub-tab-btn \".concat(activeSubTab==='add-student-to-course'?'active':''),onClick:()=>setActiveSubTab('add-student-to-course'),style:{display:editingCourse&&activeSubTab==='detail'?'inline-block':'none'},children:\"\\u6DFB\\u52A0\\u5B66\\u751F\"})]}),activeSubTab==='list'&&/*#__PURE__*/_jsxs(\"div\",{className:\"section-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u6211\\u7684\\u8BFE\\u7A0B\"}),/*#__PURE__*/_jsx(\"div\",{className:\"section-info\",children:/*#__PURE__*/_jsx(\"p\",{children:\"\\uD83D\\uDCA1 \\u70B9\\u51FB\\u4EFB\\u610F\\u8BFE\\u7A0B\\u5361\\u7247\\u5373\\u53EF\\u67E5\\u770B\\u8BE6\\u60C5\\u3001\\u7BA1\\u7406\\u5B66\\u751F\\u548C\\u5E03\\u7F6E\\u4F5C\\u4E1A\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"courses-grid\",children:courses.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"empty-state\",children:/*#__PURE__*/_jsx(\"p\",{children:\"\\u6682\\u65E0\\u8BFE\\u7A0B\\uFF0C\\u8BF7\\u8054\\u7CFB\\u7BA1\\u7406\\u5458\\u6DFB\\u52A0\\u8BFE\\u7A0B\"})}):courses.map(course=>/*#__PURE__*/_jsxs(\"div\",{className:\"course-card\",onClick:()=>handleViewCourseDetail(course.id),style:{cursor:'pointer'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"course-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:course.name}),/*#__PURE__*/_jsx(\"span\",{className:\"course-status active\",children:\"\\u8FDB\\u884C\\u4E2D\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"course-info\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u6559\\u5B66\\u73ED\\uFF1A\"}),course.class_name]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u4E13\\u4E1A\\uFF1A\"}),course.major_name]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u5B66\\u6821\\uFF1A\"}),course.school_name]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u5B66\\u751F\\u6570\\u91CF\\uFF1A\"}),course.student_count||0,\"\\u4EBA\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u521B\\u5EFA\\u65F6\\u95F4\\uFF1A\"}),formatDate(course.created_at)]})]})]},course.id))})]}),activeSubTab==='detail'&&editingCourse&&/*#__PURE__*/_jsxs(\"div\",{className:\"section-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"\\uD83D\\uDCDA \\u8BFE\\u7A0B\\u8BE6\\u60C5\\uFF1A\",editingCourse.name]}),/*#__PURE__*/_jsx(\"button\",{className:\"secondary-btn\",onClick:()=>{setActiveSubTab('list');setEditingCourse(null);},children:\"\\u2190 \\u8FD4\\u56DE\\u8BFE\\u7A0B\\u5217\\u8868\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"course-detail\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"course-info-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u8BFE\\u7A0B\\u57FA\\u672C\\u4FE1\\u606F\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u8BFE\\u7A0B\\u540D\\u79F0\\uFF1A\"}),/*#__PURE__*/_jsx(\"span\",{children:editingCourse.name})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u8BFE\\u7A0B\\u63CF\\u8FF0\\uFF1A\"}),/*#__PURE__*/_jsx(\"span\",{children:editingCourse.description})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u6559\\u5B66\\u73ED\\uFF1A\"}),/*#__PURE__*/_jsx(\"span\",{children:editingCourse.class_name})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u4E13\\u4E1A\\uFF1A\"}),/*#__PURE__*/_jsx(\"span\",{children:editingCourse.major_name})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u5B66\\u6821\\uFF1A\"}),/*#__PURE__*/_jsx(\"span\",{children:editingCourse.school_name})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u5B66\\u751F\\u6570\\u91CF\\uFF1A\"}),/*#__PURE__*/_jsxs(\"span\",{children:[editingCourse.student_count||0,\"\\u4EBA\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u521B\\u5EFA\\u65F6\\u95F4\\uFF1A\"}),/*#__PURE__*/_jsx(\"span\",{children:formatDate(editingCourse.created_at)})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"course-students-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u6559\\u5B66\\u73ED\\u5B66\\u751F\"}),/*#__PURE__*/_jsx(\"button\",{className:\"add-btn\",onClick:()=>{// 设置添加学生上下文为课程详情页\nsetAddingStudentContext('course-detail');setActiveSubTab('add-student-to-course');},children:\"\\u6DFB\\u52A0\\u5B66\\u751F\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"students-table\",children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"\\u5B66\\u53F7\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u59D3\\u540D\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u90AE\\u7BB1\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u72B6\\u6001\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u64CD\\u4F5C\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:(()=>{// 获取当前课程的所有学生\nconst courseStudents=[];// 1. 添加原本属于该教学班的学生\nconst originalStudents=users.filter(user=>user.class_id===editingCourse.class_id&&user.role==='student');courseStudents.push(...originalStudents);// 2. 添加通过关联关系添加的学生\nconst relatedStudents=studentClassRelations.filter(relation=>relation.course_id===editingCourse.id).map(relation=>{// 查找学生的完整信息\nconst studentInfo=users.find(user=>user.id===relation.student_id);return _objectSpread(_objectSpread({},studentInfo),{},{// 使用关联关系中的信息作为后备\nname:studentInfo?studentInfo.name:relation.student_name,username:studentInfo?studentInfo.username:relation.student_no,// 标记这是通过关联关系添加的学生\nisRelatedStudent:true,relationId:\"\".concat(relation.student_id,\"_\").concat(relation.course_id)});});courseStudents.push(...relatedStudents);if(courseStudents.length===0){return/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{colSpan:\"5\",children:/*#__PURE__*/_jsx(\"div\",{className:\"empty-state\",children:/*#__PURE__*/_jsx(\"p\",{children:\"\\u8BE5\\u6559\\u5B66\\u73ED\\u6682\\u65E0\\u5B66\\u751F\"})})})});}return courseStudents.map(student=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:student.username}),/*#__PURE__*/_jsx(\"td\",{children:student.name}),/*#__PURE__*/_jsx(\"td\",{children:student.email||'-'}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"span\",{className:\"status-badge \".concat(student.isRelatedStudent?'related':'original'),children:student.isRelatedStudent?'已添加':'原班级'})}),/*#__PURE__*/_jsx(\"td\",{children:student.isRelatedStudent&&/*#__PURE__*/_jsx(\"button\",{className:\"action-btn delete\",onClick:()=>handleRemoveStudentFromCourse(student.relationId),children:\"\\u79FB\\u9664\"})})]},student.id||student.relationId));})()})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"course-assignments-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u5DF2\\u5E03\\u7F6E\\u4F5C\\u4E1A\"}),/*#__PURE__*/_jsx(\"button\",{className:\"add-btn\",onClick:()=>{// 自动设置当前课程ID到作业表单\nsetAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{course_id:editingCourse.id}));// 设置编辑作业上下文为课程详情页\nsetEditingAssignmentContext('course-detail');setActiveSubTab('create-assignment');},children:\"\\u5E03\\u7F6E\\u4F5C\\u4E1A\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"assignments-table\",children:[/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"\\u4F5C\\u4E1A\\u540D\\u79F0\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u63CF\\u8FF0\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u622A\\u6B62\\u65F6\\u95F4\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u72B6\\u6001\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u64CD\\u4F5C\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:assignments.filter(assignment=>assignment.course_id===editingCourse.id).map(assignment=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:assignment.name}),/*#__PURE__*/_jsx(\"td\",{children:assignment.description}),/*#__PURE__*/_jsx(\"td\",{children:formatDate(assignment.due_date)}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"span\",{className:\"status-badge \".concat(assignment.is_active?'active':'inactive'),children:assignment.is_active?'进行中':'已结束'})}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"action-btn edit\",onClick:()=>handleEditAssignment(assignment),children:\"\\u7F16\\u8F91\"}),/*#__PURE__*/_jsx(\"button\",{className:\"action-btn delete\",onClick:()=>handleDeleteAssignment(assignment.id),children:\"\\u5220\\u9664\"})]})]},assignment.id))})]}),assignments.filter(assignment=>assignment.course_id===editingCourse.id).length===0&&/*#__PURE__*/_jsx(\"div\",{className:\"empty-state\",children:/*#__PURE__*/_jsx(\"p\",{children:\"\\u8BE5\\u8BFE\\u7A0B\\u6682\\u65E0\\u4F5C\\u4E1A\"})})]})]}),activeSubTab==='create-assignment'&&/*#__PURE__*/_jsxs(\"div\",{className:\"course-assignment-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\uD83D\\uDCDD \\u5E03\\u7F6E\\u4F5C\\u4E1A\\uFF08\",editingCourse.name,\"\\uFF09\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"secondary-btn\",onClick:()=>setActiveSubTab('detail'),children:\"\\u2190 \\u8FD4\\u56DE\\u8BFE\\u7A0B\\u8BE6\\u60C5\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"assignment-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u4F5C\\u4E1A\\u540D\\u79F0\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u4F5C\\u4E1A\\u540D\\u79F0\",value:assignmentForm.name,onChange:e=>setAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{name:e.target.value}))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u8BFE\\u7A0B\\uFF1A\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:editingCourse.name,disabled:true,className:\"disabled-input\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u4F5C\\u4E1A\\u63CF\\u8FF0\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"\\u8BF7\\u8F93\\u5165\\u4F5C\\u4E1A\\u63CF\\u8FF0\",value:assignmentForm.description,onChange:e=>setAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{description:e.target.value})),rows:4})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u4F5C\\u4E1A\\u8981\\u6C42\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"\\u8BF7\\u8F93\\u5165\\u4F5C\\u4E1A\\u8981\\u6C42\",value:assignmentForm.requirements,onChange:e=>setAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{requirements:e.target.value})),rows:4})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u622A\\u6B62\\u65F6\\u95F4\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"datetime-local\",value:assignmentForm.due_date,onChange:e=>setAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{due_date:e.target.value}))})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u9009\\u62E9\\u9898\\u76EE\\uFF1A\"}),/*#__PURE__*/_jsx(\"div\",{className:\"problem-selection\",children:problems.map(problem=>/*#__PURE__*/_jsxs(\"label\",{className:\"problem-checkbox\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",value:problem.id,checked:assignmentForm.problem_ids.includes(problem.id),onChange:e=>{if(e.target.checked){setAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{problem_ids:[...prev.problem_ids,problem.id]}));}else{setAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{problem_ids:prev.problem_ids.filter(id=>id!==problem.id)}));}}}),/*#__PURE__*/_jsx(\"span\",{className:\"problem-title\",children:problem.title}),/*#__PURE__*/_jsx(\"span\",{className:\"difficulty-badge \".concat(problem.difficulty),children:problem.difficulty==='easy'?'简单':problem.difficulty==='medium'?'中等':'困难'})]},problem.id))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"submit-btn\",onClick:handleCreateAssignment,disabled:loading||!assignmentForm.name||!assignmentForm.description||!assignmentForm.requirements||!assignmentForm.due_date||!assignmentForm.course_id,children:loading?'创建中...':'布置作业'})})]})]}),activeSubTab==='add-student-to-course'&&editingCourse&&/*#__PURE__*/_jsxs(\"div\",{className:\"section-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\uD83D\\uDC65 \\u6DFB\\u52A0\\u5B66\\u751F\\u5230\\u8BFE\\u7A0B\\uFF1A\",editingCourse.name]}),/*#__PURE__*/_jsx(\"button\",{className:\"secondary-btn\",onClick:()=>setActiveSubTab('detail'),children:\"\\u2190 \\u8FD4\\u56DE\\u8BFE\\u7A0B\\u8BE6\\u60C5\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"add-student-to-course-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-help\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\u8BF7\\u9009\\u62E9\\u8981\\u6DFB\\u52A0\\u5230\\u8BE5\\u8BFE\\u7A0B\\u7684\\u5B66\\u751F\\uFF1A\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u6CE8\\u610F\\uFF1A\\u53EA\\u80FD\\u6DFB\\u52A0\\u5DF2\\u5B58\\u5728\\u7684\\u5B66\\u751F\\u8D26\\u53F7\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u5B66\\u53F7\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u5B66\\u53F7\",value:addStudentForm.student_no,onChange:e=>setAddStudentForm(prev=>_objectSpread(_objectSpread({},prev),{},{student_no:e.target.value}))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u59D3\\u540D\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u5B66\\u751F\\u59D3\\u540D\",value:addStudentForm.name,onChange:e=>setAddStudentForm(prev=>_objectSpread(_objectSpread({},prev),{},{name:e.target.value}))})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"submit-btn\",onClick:handleAddStudentToCourse,disabled:loading||!addStudentForm.student_no||!addStudentForm.name,children:loading?'添加中...':'添加学生到课程'})})]})]})]})]})]});// 学生相关处理函数\nconst handleAddStudent=async()=>{try{setLoading(true);setError('');setSuccess('');await registerStudent(addStudentForm);setSuccess('学生账号创建成功！');// 重置表单\nsetAddStudentForm({student_no:'',name:'',password:'',email:'',phone:'',school_id:'',department_id:'',major_id:'',class_id:''});// 刷新用户列表\nconst usersData=await getUsers(1,50,'student');setUsers(usersData.users);// 刷新课程列表（因为学生数量可能发生变化）\ntry{const coursesData=await getTeacherCourses();if(coursesData&&coursesData.courses){setCourses(coursesData.courses);}}catch(error){console.warn('刷新课程列表失败:',error);}// 切换到学生列表\nsetActiveSubTab('list');}catch(error){var _error$response9,_error$response9$data;setError(((_error$response9=error.response)===null||_error$response9===void 0?void 0:(_error$response9$data=_error$response9.data)===null||_error$response9$data===void 0?void 0:_error$response9$data.error)||'创建学生账号失败');}finally{setLoading(false);}};const handleEditStudentClick=user=>{setEditingUser(user);setEditForm({email:user.email||'',phone:user.phone||'',school_id:user.school_id||'',major_id:user.major_id||'',class_id:user.class_id||'',new_password:''});setError('');setSuccess('');};const handleSaveStudent=async()=>{if(!editingUser)return;try{setLoading(true);setError('');setSuccess('');await updateUser(editingUser.id,editForm);setSuccess('学生信息已更新');// 刷新列表\nconst usersData=await getUsers(1,50,'student');setUsers(usersData.users);// 刷新课程列表（因为学生数量可能发生变化）\ntry{const coursesData=await getTeacherCourses();if(coursesData&&coursesData.courses){setCourses(coursesData.courses);}}catch(error){console.warn('刷新课程列表失败:',error);}setEditingUser(null);}catch(error){var _error$response0,_error$response0$data;setError(((_error$response0=error.response)===null||_error$response0===void 0?void 0:(_error$response0$data=_error$response0.data)===null||_error$response0$data===void 0?void 0:_error$response0$data.error)||'更新学生信息失败');}finally{setLoading(false);}};const handleCancelEditStudent=()=>{setEditingUser(null);setEditForm({email:'',phone:'',school_id:'',major_id:'',class_id:'',new_password:''});};const handleDeleteStudent=async userId=>{if(!window.confirm('确定要删除该学生吗？此操作不可恢复。'))return;try{setLoading(true);setError('');setSuccess('');await deleteUser(userId);setSuccess('学生已删除');const usersData=await getUsers(1,50,'student');setUsers(usersData.users);// 刷新课程列表（因为学生数量可能发生变化）\ntry{const coursesData=await getTeacherCourses();if(coursesData&&coursesData.courses){setCourses(coursesData.courses);}}catch(error){console.warn('刷新课程列表失败:',error);}}catch(error){var _error$response1,_error$response1$data;setError(((_error$response1=error.response)===null||_error$response1===void 0?void 0:(_error$response1$data=_error$response1.data)===null||_error$response1$data===void 0?void 0:_error$response1$data.error)||'删除学生失败');}finally{setLoading(false);}};const handleAddStudentSchoolChange=async schoolId=>{setAddStudentForm(prev=>_objectSpread(_objectSpread({},prev),{},{school_id:schoolId,department_id:'',major_id:'',class_id:''}));// 不再重置全局的departments、majors和classes数组\n// 这些数组应该保持完整，用于学生列表显示\n};const handleAddStudentDepartmentChange=async departmentId=>{setAddStudentForm(prev=>_objectSpread(_objectSpread({},prev),{},{department_id:departmentId,major_id:'',class_id:''}));// 不再重置全局的majors和classes数组\n// 这些数组应该保持完整，用于学生列表显示\n};const handleAddStudentMajorChange=async majorId=>{setAddStudentForm(prev=>_objectSpread(_objectSpread({},prev),{},{major_id:majorId,class_id:''}));// 不再重置全局的classes数组\n// 这个数组应该保持完整，用于学生列表显示\n};// 选择题选项管理函数\nconst addChoiceOption=()=>{setProblemForm(prev=>{// 计算下一个可用的字母ID\nconst existingIds=prev.options.map(option=>option.id);let nextId='A';for(let i=0;i<26;i++){const candidateId=String.fromCharCode(65+i);// A, B, C, D...\nif(!existingIds.includes(candidateId)){nextId=candidateId;break;}}return _objectSpread(_objectSpread({},prev),{},{options:[...prev.options,{id:nextId,text:'',is_correct:false}]});});};const removeChoiceOption=optionId=>{setProblemForm(prev=>_objectSpread(_objectSpread({},prev),{},{options:prev.options.filter(option=>option.id!==optionId)}));};const updateChoiceOption=(optionId,field,value)=>{setProblemForm(prev=>_objectSpread(_objectSpread({},prev),{},{options:prev.options.map(option=>option.id===optionId?_objectSpread(_objectSpread({},option),{},{[field]:value}):option)}));};const toggleChoiceOptionCorrect=optionId=>{setProblemForm(prev=>{let updatedOptions;if(prev.type==='judge'){// 判断题：单选模式，点击一个选项时取消其他选项\nupdatedOptions=prev.options.map(option=>_objectSpread(_objectSpread({},option),{},{is_correct:option.id===optionId?!option.is_correct:false}));}else{// 选择题：多选模式，可以同时选择多个选项\nupdatedOptions=prev.options.map(option=>option.id===optionId?_objectSpread(_objectSpread({},option),{},{is_correct:!option.is_correct}):option);}// 更新正确答案数组 - 统一使用选项ID\nconst correctAnswers=updatedOptions.filter(option=>option.is_correct).map(option=>option.id);return _objectSpread(_objectSpread({},prev),{},{options:updatedOptions,correct_answers:correctAnswers});});};const handleProblemTypeChange=type=>{setProblemForm(prev=>{if(type==='choice'){// 切换到选择题时，初始化至少两个选项\nreturn _objectSpread(_objectSpread({},prev),{},{type,options:[{id:'A',text:'',is_correct:false},{id:'B',text:'',is_correct:false}],correct_answers:[],is_multiple_choice:false});}else if(type==='judge'){// 切换到判断题时，初始化两个固定选项\nreturn _objectSpread(_objectSpread({},prev),{},{type,options:[{id:'A',text:'正确',is_correct:false},{id:'B',text:'错误',is_correct:false}],correct_answers:[],is_multiple_choice:false});}else if(type==='short_answer'){// 切换到简答题时，清空选项相关字段，添加答案字段\nreturn _objectSpread(_objectSpread({},prev),{},{type,options:[],correct_answers:[],is_multiple_choice:false,answer:''// 简答题答案\n});}else{// 切换到其他题型时，清空选择题相关字段\nreturn _objectSpread(_objectSpread({},prev),{},{type,options:[],correct_answers:[],is_multiple_choice:false});}});};// 获取当前选中学校对应的专业列表（用于选择器显示）\nconst getCurrentSchoolMajors=()=>{if(!selectedSchool)return[];return majors.filter(major=>major.school_id===selectedSchool);};// 获取当前选中专业对应的班级列表（用于选择器显示）\nconst getCurrentMajorClasses=()=>{if(!selectedMajor)return[];const majorId=selectedMajor;const filteredClasses=classes.filter(classItem=>{const classMajorId=classItem.major_id;const isMatch=classMajorId===majorId||classMajorId===parseInt(majorId)||parseInt(classMajorId)===majorId;return isMatch;});return filteredClasses;};// 获取添加学生表单中选中学校对应的专业列表\nconst getAddStudentSchoolMajors=()=>{if(!addStudentForm.school_id)return[];const schoolId=addStudentForm.school_id;const filteredMajors=majors.filter(major=>{const majorSchoolId=major.school_id;const isMatch=majorSchoolId===schoolId||majorSchoolId===parseInt(schoolId)||parseInt(majorSchoolId)===schoolId;return isMatch;});return filteredMajors;};// 获取添加学生表单中选中学校对应的院部列表\nconst getAddStudentSchoolDepartments=()=>{if(!addStudentForm.school_id)return[];const schoolId=addStudentForm.school_id;const filteredDepartments=departments.filter(department=>{const deptSchoolId=department.school_id;const isMatch=deptSchoolId===schoolId||deptSchoolId===parseInt(schoolId)||parseInt(deptSchoolId)===schoolId;return isMatch;});return filteredDepartments;};// 获取添加学生表单中选中院部对应的专业列表\nconst getAddStudentDepartmentMajors=()=>{if(!addStudentForm.department_id)return[];const departmentId=addStudentForm.department_id;const filteredMajors=majors.filter(major=>{const majorDeptId=major.department_id;const isMatch=majorDeptId===departmentId||majorDeptId===parseInt(departmentId)||parseInt(majorDeptId)===departmentId;return isMatch;});return filteredMajors;};// 获取添加学生表单中选中专业对应的班级列表\nconst getAddStudentMajorClasses=()=>{if(!addStudentForm.major_id)return[];const majorId=addStudentForm.major_id;const filteredClasses=classes.filter(classItem=>{const classMajorId=classItem.major_id;const isMatch=classMajorId===majorId||classMajorId===parseInt(majorId)||parseInt(classMajorId)===majorId;return isMatch;});return filteredClasses;};// 获取编辑学生表单中选中学校对应的专业列表\nconst getEditStudentSchoolMajors=()=>{if(!editForm.school_id)return[];const schoolId=editForm.school_id;const filteredMajors=majors.filter(major=>{const majorSchoolId=major.school_id;const isMatch=majorSchoolId===schoolId||majorSchoolId===parseInt(schoolId)||parseInt(majorSchoolId)===schoolId;return isMatch;});return filteredMajors;};// 获取编辑学生表单中选中专业对应的班级列表\nconst getEditStudentMajorClasses=()=>{if(!editForm.major_id)return[];const majorId=editForm.major_id;const filteredClasses=classes.filter(classItem=>{const classMajorId=classItem.major_id;const isMatch=classMajorId===majorId||classMajorId===parseInt(majorId)||parseInt(classMajorId)===majorId;return isMatch;});return filteredClasses;};// 获取当前选中学校对应的院部列表\nconst getCurrentSchoolDepartments=()=>{if(!selectedSchool)return[];const schoolId=selectedSchool;const filteredDepartments=departments.filter(department=>{const deptSchoolId=department.school_id;const isMatch=deptSchoolId===schoolId||deptSchoolId===parseInt(schoolId)||parseInt(deptSchoolId)===schoolId;return isMatch;});return filteredDepartments;};// 获取当前选中院部对应的专业列表\nconst getCurrentDepartmentMajors=()=>{if(!selectedDepartment)return[];const departmentId=selectedDepartment;const filteredMajors=majors.filter(major=>{const majorDeptId=major.department_id;const isMatch=majorDeptId===departmentId||majorDeptId===parseInt(departmentId)||parseInt(majorDeptId)===departmentId;return isMatch;});return filteredMajors;};return/*#__PURE__*/_jsxs(\"div\",{className:\"teacher-dashboard\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"dashboard-header\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"\\u6559\\u5E08\\u7BA1\\u7406\\u63A7\\u5236\\u53F0\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-tabs\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"tab-btn \".concat(activeTab==='students'?'active':''),onClick:()=>{setActiveTab('students');setActiveSubTab('list');},children:\"\\u5B66\\u751F\\u7BA1\\u7406\"}),/*#__PURE__*/_jsx(\"button\",{className:\"tab-btn \".concat(activeTab==='problems'?'active':''),onClick:()=>{setActiveTab('problems');setActiveSubTab('list');},children:\"\\u9898\\u76EE\\u7BA1\\u7406\"}),/*#__PURE__*/_jsx(\"button\",{className:\"tab-btn \".concat(activeTab==='courses'?'active':''),onClick:()=>{setActiveTab('courses');setActiveSubTab('list');// 清除课程详情状态\nsetEditingCourse(null);setEditingAssignmentContext('');setAddingStudentContext('');},children:\"\\u6211\\u7684\\u8BFE\\u7A0B\"})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),success&&/*#__PURE__*/_jsx(\"div\",{className:\"success-message\",children:success}),activeTab==='students'&&renderStudentsTab(),activeTab==='problems'&&renderProblemsTab(),activeTab==='courses'&&renderCoursesTab(),activeTab==='courses'&&activeSubTab==='create-assignment'&&editingCourse&&/*#__PURE__*/_jsxs(\"div\",{className:\"tab-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\uD83D\\uDCDD \\u5E03\\u7F6E\\u4F5C\\u4E1A\\uFF08\",editingCourse.name,\"\\uFF09\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"secondary-btn\",onClick:()=>setActiveSubTab('detail'),children:\"\\u2190 \\u8FD4\\u56DE\\u8BFE\\u7A0B\\u8BE6\\u60C5\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"assignment-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u4F5C\\u4E1A\\u540D\\u79F0\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u4F5C\\u4E1A\\u540D\\u79F0\",value:assignmentForm.name,onChange:e=>setAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{name:e.target.value}))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u8BFE\\u7A0B\\uFF1A\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:editingCourse.name,disabled:true,className:\"disabled-input\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u4F5C\\u4E1A\\u63CF\\u8FF0\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"\\u8BF7\\u8F93\\u5165\\u4F5C\\u4E1A\\u63CF\\u8FF0\",value:assignmentForm.description,onChange:e=>setAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{description:e.target.value})),rows:4})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u4F5C\\u4E1A\\u8981\\u6C42\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"\\u8BF7\\u8F93\\u5165\\u4F5C\\u4E1A\\u8981\\u6C42\",value:assignmentForm.requirements,onChange:e=>setAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{requirements:e.target.value})),rows:4})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u622A\\u6B62\\u65F6\\u95F4\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"datetime-local\",value:assignmentForm.due_date,onChange:e=>setAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{due_date:e.target.value}))})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u9009\\u62E9\\u9898\\u76EE\\uFF1A\"}),/*#__PURE__*/_jsx(\"div\",{className:\"problem-selection\",children:problems.map(problem=>/*#__PURE__*/_jsxs(\"label\",{className:\"problem-checkbox\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",value:problem.id,checked:assignmentForm.problem_ids.includes(problem.id),onChange:e=>{if(e.target.checked){setAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{problem_ids:[...prev.problem_ids,problem.id]}));}else{setAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{problem_ids:prev.problem_ids.filter(id=>id!==problem.id)}));}}}),/*#__PURE__*/_jsx(\"span\",{className:\"problem-title\",children:problem.title}),/*#__PURE__*/_jsx(\"span\",{className:\"difficulty-badge \".concat(problem.difficulty),children:problem.difficulty==='easy'?'简单':problem.difficulty==='medium'?'中等':'困难'})]},problem.id))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"submit-btn\",onClick:handleCreateAssignment,disabled:loading||!assignmentForm.name||!assignmentForm.description||!assignmentForm.requirements||!assignmentForm.due_date||!assignmentForm.course_id,children:loading?'创建中...':'布置作业'})})]})]}),activeTab==='courses'&&activeSubTab==='add-student-to-course'&&editingCourse&&/*#__PURE__*/_jsxs(\"div\",{className:\"tab-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\uD83D\\uDC65 \\u6DFB\\u52A0\\u5B66\\u751F\\u5230\\u8BFE\\u7A0B\\uFF1A\",editingCourse.name]}),/*#__PURE__*/_jsx(\"button\",{className:\"secondary-btn\",onClick:()=>setActiveSubTab('detail'),children:\"\\u2190 \\u8FD4\\u56DE\\u8BFE\\u7A0B\\u8BE6\\u60C5\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"add-student-to-course-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-help\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\u8BF7\\u9009\\u62E9\\u8981\\u6DFB\\u52A0\\u5230\\u8BE5\\u8BFE\\u7A0B\\u7684\\u5B66\\u751F\\uFF1A\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u6CE8\\u610F\\uFF1A\\u53EA\\u80FD\\u6DFB\\u52A0\\u5DF2\\u5B58\\u5728\\u7684\\u5B66\\u751F\\u8D26\\u53F7\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u5B66\\u53F7\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u5B66\\u53F7\",value:addStudentForm.student_no,onChange:e=>setAddStudentForm(prev=>_objectSpread(_objectSpread({},prev),{},{student_no:e.target.value}))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u59D3\\u540D\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u5B66\\u751F\\u59D3\\u540D\",value:addStudentForm.name,onChange:e=>setAddStudentForm(prev=>_objectSpread(_objectSpread({},prev),{},{name:e.target.value}))})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"submit-btn\",onClick:handleAddStudentToCourse,disabled:loading||!addStudentForm.student_no||!addStudentForm.name,children:loading?'添加中...':'添加学生到课程'})})]})]}),editingUser&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"modal-header\",children:/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\u7F16\\u8F91\\u5B66\\u751F\\uFF1A\",editingUser.name,\"\\uFF08\\u5B66\\u53F7\",editingUser.username,\"\\uFF09\"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-body\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u90AE\\u7BB1\\uFF1A\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:editForm.email,onChange:e=>setEditForm(prev=>_objectSpread(_objectSpread({},prev),{},{email:e.target.value}))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u624B\\u673A\\u53F7\\uFF1A\"}),/*#__PURE__*/_jsx(\"input\",{type:\"tel\",value:editForm.phone,onChange:e=>setEditForm(prev=>_objectSpread(_objectSpread({},prev),{},{phone:e.target.value}))})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u5B66\\u6821\\uFF1A\"}),/*#__PURE__*/_jsxs(\"select\",{value:editForm.school_id,onChange:e=>{const val=e.target.value;setEditForm(prev=>_objectSpread(_objectSpread({},prev),{},{school_id:val,major_id:'',class_id:''}));},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\u8BF7\\u9009\\u62E9\\u5B66\\u6821\"}),schools.map(s=>/*#__PURE__*/_jsx(\"option\",{value:s.id,children:s.name},s.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u4E13\\u4E1A\\uFF1A\"}),/*#__PURE__*/_jsxs(\"select\",{value:editForm.major_id,onChange:e=>{const val=e.target.value;setEditForm(prev=>_objectSpread(_objectSpread({},prev),{},{major_id:val,class_id:''}));},disabled:!editForm.school_id,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\u8BF7\\u9009\\u62E9\\u4E13\\u4E1A\"}),getEditStudentSchoolMajors().map(m=>/*#__PURE__*/_jsx(\"option\",{value:m.id,children:m.name},m.id))]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u73ED\\u7EA7\\uFF1A\"}),/*#__PURE__*/_jsxs(\"select\",{value:editForm.class_id,onChange:e=>setEditForm(prev=>_objectSpread(_objectSpread({},prev),{},{class_id:e.target.value})),disabled:!editForm.major_id,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\u8BF7\\u9009\\u62E9\\u73ED\\u7EA7\"}),getEditStudentMajorClasses().map(c=>/*#__PURE__*/_jsx(\"option\",{value:c.id,children:c.name},c.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u91CD\\u7F6E\\u5BC6\\u7801\\uFF08\\u53EF\\u9009\\uFF09\\uFF1A\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:editForm.new_password,onChange:e=>setEditForm(prev=>_objectSpread(_objectSpread({},prev),{},{new_password:e.target.value}))})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-footer\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"secondary-btn\",onClick:handleCancelEditStudent,children:\"\\u53D6\\u6D88\"}),/*#__PURE__*/_jsx(\"button\",{className:\"submit-btn\",onClick:handleSaveStudent,disabled:loading,children:loading?'保存中...':'保存'})]})]})})]});};export default TeacherDashboardPage;","map":{"version":3,"names":["React","useState","useEffect","getUsers","getSchools","getMajors","getClasses","batchImportStudents","getProblems","createProblem","updateProblem","deleteProblem","updateUser","deleteUser","registerStudent","getTeacherCourses","getCourseAssignments","createAssignment","updateAssignment","deleteAssignment","getCourseStudents","addStudentToCourse","removeStudentFromCourse","getDepartments","batchImportStudentsFromExcel","XLSX","AIProblemGenerationPage","mockCourses","mockAssignments","formatDate","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TeacherDashboardPage","activeTab","setActiveTab","activeSubTab","setActiveSubTab","users","setUsers","problems","setProblems","schools","setSchools","departments","setDepartments","majors","setMajors","classes","setClasses","loading","setLoading","error","setError","success","setSuccess","selectedSchool","setSelectedSchool","selectedDepartment","setSelectedDepartment","selectedMajor","setSelectedMajor","selectedClass","setSelectedClass","uploadedFile","setUploadedFile","problemForm","setProblemForm","title","description","type","testCases","difficulty","time_limit","memory_limit","options","correct_answers","is_multiple_choice","answer","editingProblem","setEditingProblem","isEditing","setIsEditing","addTestCase","newTestCase","id","Date","now","Math","random","input","output","prev","_objectSpread","removeTestCase","testCaseId","filter","tc","updateTestCase","field","value","map","parseTestCases","testCasesStr","expectedOutputStr","split","line","trim","expectedOutputs","maxLength","max","length","result","i","push","addStudentForm","setAddStudentForm","student_no","name","password","email","phone","school_id","department_id","major_id","class_id","editingUser","setEditingUser","editForm","setEditForm","new_password","courses","setCourses","editingCourse","setEditingCourse","assignments","setAssignments","assignmentForm","setAssignmentForm","requirements","due_date","course_id","problem_ids","editingAssignment","setEditingAssignment","isEditingAssignment","setIsEditingAssignment","editingAssignmentContext","setEditingAssignmentContext","addingStudentContext","setAddingStudentContext","studentClassRelations","setStudentClassRelations","fetchInitialData","handleStorageChange","e","key","newValue","console","log","localStorage","removeItem","fetchProblems","handleProblemCreated","handleMessage","data","window","addEventListener","shouldRefresh","getItem","removeEventListener","fetchStudentClassRelations","courseId","courseStudentsData","apiRelations","student","student_id","student_name","added_at","toISOString","problemsData","warn","loadCourseStudents","schoolsData","usersData","Promise","all","fetchAllMajorsAndClasses","forEach","problem","index","concat","coursesData","assignmentsData","_error$response","response","message","_error$response2","_error$response2$data","arguments","undefined","isLoading","schoolsToUse","allDepartments","allMajors","allClasses","school","departmentsData","majorsData","major","classesData","handleSchoolChange","schoolId","handleDepartmentChange","departmentId","handleMajorChange","majorId","handleBatchImport","_resp$success_count","_resp$failed_count","formData","FormData","append","resp","msg","success_count","failed_count","errors","preview","slice","join","_error$response3","_error$response3$data","handleDownloadTemplate","templateData","workbook","utils","book_new","worksheet","aoa_to_sheet","colWidths","wch","book_append_sheet","writeFile","handleFileUpload","event","file","target","files","validTypes","fileExtension","substring","lastIndexOf","toLowerCase","includes","size","handleRemoveFile","handleCreateProblem","submitData","choice_options","option","text","expected_output","Error","test_cases","JSON","stringify","_error$response4","_error$response4$data","handleEditProblem","initialOptions","initialCorrectAnswers","optionLines","match","is_correct","String","fromCharCode","correctAnswers","ans","correctAnswer","handleDeleteProblem","problemId","confirm","_error$response5","_error$response5$data","inferProblemType","choices","alternatives","option_list","Array","isArray","optionTexts","opt","option_text","content","label","solution","correct_answer","answer_text","test_cases_text","test_input","expectedOutput","expected_result","expected_answer","getSchoolName","find","s","sId","parseInt","getMajorName","m","mId","getClassName","classId","classItem","c","cId","handleCancelEdit","handleViewCourseDetail","course","handleCreateAssignment","assignmentData","_error$response6","_error$response6$data","handleEditAssignment","assignment","handleDeleteAssignment","assignmentId","_error$response7","_error$response7$data","handleAddStudentToCourse","existingStudent","user","username","role","updatedCourse","apiError","_apiError$response","_apiError$response$da","_error$response8","_error$response8$data","handleRemoveStudentFromCourse","relationId","studentId","_apiError$response2","_apiError$response2$d","renderStudentsTab","className","children","onClick","handleEditStudentClick","handleDeleteStudent","placeholder","onChange","handleAddStudentSchoolChange","handleAddStudentDepartmentChange","disabled","getAddStudentSchoolDepartments","department","style","fontSize","color","marginTop","handleAddStudentMajorChange","getAddStudentDepartmentMajors","getAddStudentMajorClasses","handleAddStudent","getCurrentSchoolDepartments","getCurrentDepartmentMajors","getCurrentMajorClasses","accept","renderProblemsTab","Object","keys","inferredType","displayType","display","handleProblemTypeChange","checked","rows","toggleChoiceOptionCorrect","removeChoiceOption","updateChoiceOption","addChoiceOption","readOnly","testCase","min","some","renderCoursesTab","cursor","class_name","major_name","school_name","student_count","created_at","courseStudents","originalStudents","relatedStudents","relation","studentInfo","isRelatedStudent","colSpan","is_active","_error$response9","_error$response9$data","handleSaveStudent","_error$response0","_error$response0$data","handleCancelEditStudent","userId","_error$response1","_error$response1$data","existingIds","nextId","candidateId","optionId","updatedOptions","getCurrentSchoolMajors","filteredClasses","classMajorId","isMatch","getAddStudentSchoolMajors","filteredMajors","majorSchoolId","filteredDepartments","deptSchoolId","majorDeptId","getEditStudentSchoolMajors","getEditStudentMajorClasses","val"],"sources":["/Volumes/坞城/OJ_1/frontend/src/pages/TeacherDashboardPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getUsers, getSchools, getMajors, getClasses, batchImportStudents, getProblems, createProblem, updateProblem, deleteProblem, updateUser, deleteUser, registerStudent, getTeacherCourses, getCourseAssignments, createAssignment, updateAssignment, deleteAssignment, getCourseStudents, addStudentToCourse, removeStudentFromCourse, getDepartments, batchImportStudentsFromExcel } from '../services/api';\nimport * as XLSX from 'xlsx';\nimport './TeacherDashboardPage.css';\nimport AIProblemGenerationPage from './AIProblemGenerationPage';\nimport { mockCourses, mockAssignments, formatDate } from '../testData/courses';\n\nconst TeacherDashboardPage = () => {\n  const [activeTab, setActiveTab] = useState('students');\n  const [activeSubTab, setActiveSubTab] = useState('list'); // 子标签页\n  const [users, setUsers] = useState([]);\n  const [problems, setProblems] = useState([]);\n  const [schools, setSchools] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [majors, setMajors] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  // 批量导入相关状态\n  const [selectedSchool, setSelectedSchool] = useState('');\n  const [selectedDepartment, setSelectedDepartment] = useState('');\n  const [selectedMajor, setSelectedMajor] = useState('');\n  const [selectedClass, setSelectedClass] = useState('');\n  const [uploadedFile, setUploadedFile] = useState(null);\n\n  // 手动创建题目相关状态\n  const [problemForm, setProblemForm] = useState({\n    title: '',\n    description: '',\n    type: 'programming', // 题目类型：programming(编程题), choice(选择题), judge(判断题), short_answer(简答题)\n    testCases: [], // 测试用例数组，每个元素包含 {id, input, output}\n    difficulty: 'easy',\n    time_limit: 1000,\n    memory_limit: 128,\n    // 选择题相关字段\n    options: [], // 选项数组\n    correct_answers: [], // 正确答案数组（支持多选）\n    is_multiple_choice: false, // 是否多选\n    // 简答题相关字段\n    answer: '' // 简答题答案\n  });\n\n  // 编辑题目状态\n  const [editingProblem, setEditingProblem] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n\n  // 测试用例管理函数\n  const addTestCase = () => {\n    const newTestCase = {\n      id: Date.now() + Math.random(), // 生成唯一ID\n      input: '',\n      output: ''\n    };\n    setProblemForm(prev => ({\n      ...prev,\n      testCases: [...prev.testCases, newTestCase]\n    }));\n  };\n\n  const removeTestCase = (testCaseId) => {\n    setProblemForm(prev => ({\n      ...prev,\n      testCases: prev.testCases.filter(tc => tc.id !== testCaseId)\n    }));\n  };\n\n  const updateTestCase = (testCaseId, field, value) => {\n    setProblemForm(prev => ({\n      ...prev,\n      testCases: prev.testCases.map(tc => \n        tc.id === testCaseId ? { ...tc, [field]: value } : tc\n      )\n    }));\n  };\n\n  // 解析后端测试用例格式的函数\n  const parseTestCases = (testCasesStr, expectedOutputStr) => {\n    if (!testCasesStr && !expectedOutputStr) {\n      return [];\n    }\n    \n    const testCases = testCasesStr ? testCasesStr.split('\\n').filter(line => line.trim()) : [];\n    const expectedOutputs = expectedOutputStr ? expectedOutputStr.split('\\n').filter(line => line.trim()) : [];\n    \n    // 取较长的数组长度，确保所有输出都有对应的测试用例\n    const maxLength = Math.max(testCases.length, expectedOutputs.length);\n    \n    const result = [];\n    for (let i = 0; i < maxLength; i++) {\n      result.push({\n        id: Date.now() + Math.random() + i, // 生成唯一ID\n        input: testCases[i] || '', // 如果没有输入则使用空字符串\n        output: expectedOutputs[i] || '' // 输出是必填的\n      });\n    }\n    \n    return result;\n  };\n\n  // 添加学生相关状态（按新规则：学号、姓名、密码必填）\n  const [addStudentForm, setAddStudentForm] = useState({\n    student_no: '',\n    name: '',\n    password: '',\n    email: '',\n    phone: '',\n    school_id: '',\n    department_id: '',\n    major_id: '',\n    class_id: ''\n  });\n\n  // 学生编辑相关状态\n  const [editingUser, setEditingUser] = useState(null);\n  const [editForm, setEditForm] = useState({\n    email: '',\n    phone: '',\n    school_id: '',\n    major_id: '',\n    class_id: '',\n    new_password: ''\n  });\n\n  // 课程相关状态（只读，用于查看）\n  const [courses, setCourses] = useState([]);\n  const [editingCourse, setEditingCourse] = useState(null);\n\n  // 作业相关状态\n  const [assignments, setAssignments] = useState([]);\n  const [assignmentForm, setAssignmentForm] = useState({\n    name: '',\n    description: '',\n    requirements: '',\n    due_date: '',\n    course_id: '',\n    problem_ids: []\n  });\n\n  // 编辑作业状态\n  const [editingAssignment, setEditingAssignment] = useState(null);\n  const [isEditingAssignment, setIsEditingAssignment] = useState(false);\n  const [editingAssignmentContext, setEditingAssignmentContext] = useState(''); // 记录编辑作业时的上下文\n  \n  // 添加学生到课程的状态\n  const [addingStudentContext, setAddingStudentContext] = useState(''); // 记录添加学生时的上下文\n  \n  // 学生-教学班关联关系状态\n  const [studentClassRelations, setStudentClassRelations] = useState([]); // 存储学生与教学班的关联关系\n\n  useEffect(() => {\n    fetchInitialData();\n    \n    // 监听多种通知方式，用于AI生题成功后的数据刷新\n    const handleStorageChange = (e) => {\n      if (e.key === 'refreshProblems' && e.newValue === 'true') {\n        console.log('检测到题目创建成功标记，自动刷新题目列表');\n        // 清除标记\n        localStorage.removeItem('refreshProblems');\n        // 刷新题目列表\n        fetchProblems();\n      }\n    };\n    \n    const handleProblemCreated = (e) => {\n      console.log('检测到题目创建成功事件，自动刷新题目列表');\n      fetchProblems();\n    };\n    \n    const handleMessage = (e) => {\n      if (e.data && e.data.type === 'PROBLEM_CREATED') {\n        console.log('检测到题目创建成功消息，自动刷新题目列表');\n        fetchProblems();\n      }\n    };\n    \n    // 监听storage事件（跨标签页）\n    window.addEventListener('storage', handleStorageChange);\n    \n    // 监听自定义事件\n    window.addEventListener('problemCreated', handleProblemCreated);\n    \n    // 监听postMessage\n    window.addEventListener('message', handleMessage);\n    \n    // 检查是否需要刷新（当前标签页）\n    const shouldRefresh = localStorage.getItem('refreshProblems');\n    if (shouldRefresh === 'true') {\n      console.log('检测到题目创建成功标记，自动刷新题目列表');\n      localStorage.removeItem('refreshProblems');\n      fetchProblems();\n    }\n    \n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n      window.removeEventListener('problemCreated', handleProblemCreated);\n      window.removeEventListener('message', handleMessage);\n    };\n  }, []);\n\n  // 从API加载学生-课程关联关系\n  const fetchStudentClassRelations = async (courseId) => {\n    try {\n      const courseStudentsData = await getCourseStudents(courseId);\n      if (courseStudentsData && courseStudentsData.length > 0) {\n        const apiRelations = courseStudentsData.map(student => ({\n          student_id: student.student_id,\n          class_id: student.class_id,\n          course_id: courseId,\n          student_name: student.student_name,\n          student_no: student.student_no,\n          added_at: student.added_at || new Date().toISOString()\n        }));\n        setStudentClassRelations(apiRelations);\n      } else {\n        setStudentClassRelations([]);\n      }\n    } catch (error) {\n      console.error('获取课程学生关联关系失败:', error);\n      setStudentClassRelations([]);\n    }\n  };\n\n  // 刷新题目列表\n  const fetchProblems = async () => {\n    try {\n      const problemsData = await getProblems(1, 50);\n      if (problemsData && problemsData.problems) {\n        setProblems(problemsData.problems);\n        console.log('题目列表刷新成功，题目数量:', problemsData.problems.length);\n      }\n    } catch (error) {\n      console.warn('刷新题目列表失败:', error);\n    }\n  };\n\n  // 监听课程变化，加载课程学生关联关系\n  useEffect(() => {\n    const loadCourseStudents = async () => {\n      if (editingCourse && editingCourse.id) {\n        console.log('开始加载课程学生数据，课程ID:', editingCourse.id);\n        await fetchStudentClassRelations(editingCourse.id);\n      }\n    };\n    \n    loadCourseStudents();\n  }, [editingCourse]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const fetchInitialData = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      setSuccess('');\n      const [schoolsData, usersData, problemsData] = await Promise.all([\n        getSchools(),\n        getUsers(1, 50, 'student'),\n        getProblems(1, 50)\n      ]);\n      \n      setSchools(schoolsData);\n      setUsers(usersData.users);\n      setProblems(problemsData.problems);\n      \n      // 获取所有专业和班级数据 - 确保schools数据已经设置\n      if (schoolsData && schoolsData.length > 0) {\n        await fetchAllMajorsAndClasses(schoolsData);\n      }\n      \n      // 调试信息：打印题目数据\n      console.log('从API获取的题目数据:', problemsData.problems);\n      if (problemsData.problems && problemsData.problems.length > 0) {\n        problemsData.problems.forEach((problem, index) => {\n          console.log(`题目 ${index + 1}:`, {\n            id: problem.id,\n            title: problem.title,\n            type: problem.type,\n            difficulty: problem.difficulty\n          });\n        });\n      }\n      \n      // 获取课程和作业数据（使用测试数据）\n      try {\n        console.log('开始获取课程和作业数据...');\n        const [coursesData, assignmentsData] = await Promise.all([\n          getTeacherCourses(),\n          getCourseAssignments()\n        ]);\n        \n        console.log('API返回的课程数据:', coursesData);\n        console.log('API返回的作业数据:', assignmentsData);\n        \n        if (coursesData && coursesData.courses) {\n          console.log('使用API返回的课程数据，课程数量:', coursesData.courses.length);\n          setCourses(coursesData.courses);\n        } else {\n          console.log('API返回的课程数据无效，使用测试数据');\n          setCourses(mockCourses);\n        }\n        \n        if (assignmentsData && assignmentsData.assignments) {\n          console.log('使用API返回的作业数据，作业数量:', assignmentsData.assignments.length);\n          setAssignments(assignmentsData.assignments);\n        } else {\n          console.log('API返回的作业数据无效，使用测试数据');\n          setAssignments(mockAssignments);\n        }\n      } catch (error) {\n        console.warn('获取课程或作业数据失败，使用测试数据:', error);\n        console.log('错误详情:', error.response?.data || error.message);\n        setCourses(mockCourses);\n        setAssignments(mockAssignments);\n      }\n      \n      // 学生-课程关联关系数据将在进入课程详情页时从API加载\n    } catch (error) {\n      setError(error?.response?.data?.error || '获取数据失败');\n      console.error('Error fetching data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 获取所有专业和班级数据的函数\n  const fetchAllMajorsAndClasses = async (schoolsData = null) => {\n    // 防止重复调用\n    if (fetchAllMajorsAndClasses.isLoading) {\n      console.log('fetchAllMajorsAndClasses 正在执行中，跳过重复调用');\n      return;\n    }\n    \n    fetchAllMajorsAndClasses.isLoading = true;\n    \n    try {\n      // 使用传入的schoolsData参数，如果没有传入则使用state中的schools\n      const schoolsToUse = schoolsData || schools;\n      \n      if (!schoolsToUse || schoolsToUse.length === 0) {\n        console.warn('没有学校数据，无法获取专业和班级');\n        return;\n      }\n      \n      console.log('开始获取数据，学校数量:', schoolsToUse.length);\n      console.log('学校数据:', schoolsToUse);\n      \n      // 按照正确的层次结构获取数据：学校 → 院部 → 专业 → 班级\n      const allDepartments = [];\n      const allMajors = [];\n      const allClasses = [];\n      \n      for (const school of schoolsToUse) {\n        try {\n          console.log(`正在获取学校 ${school.id} (${school.name}) 的数据...`);\n          \n          // 1. 获取学校的院部\n          const departmentsData = await getDepartments(school.id);\n          console.log(`学校 ${school.id} 的院部数据:`, departmentsData);\n          allDepartments.push(...departmentsData);\n          \n          // 2. 获取学校下的所有专业（按school_id过滤）\n          try {\n            console.log(`正在获取学校 ${school.id} 的专业...`);\n            const majorsData = await getMajors(school.id);\n            console.log(`学校 ${school.id} 的专业数据:`, majorsData);\n            allMajors.push(...majorsData);\n            \n            // 3. 获取每个专业的班级\n            for (const major of majorsData) {\n              try {\n                console.log(`正在获取专业 ${major.id} (${major.name}) 的班级...`);\n                const classesData = await getClasses(major.id);\n                console.log(`专业 ${major.id} 的班级数据:`, classesData);\n                allClasses.push(...classesData);\n              } catch (error) {\n                console.error(`获取专业 ${major.id} 的班级失败:`, error);\n              }\n            }\n          } catch (error) {\n            console.error(`获取学校 ${school.id} 的专业失败:`, error);\n          }\n        } catch (error) {\n          console.error(`获取学校 ${school.id} 的院部失败:`, error);\n        }\n      }\n      \n      console.log('最终获取到的数据:');\n      console.log('院部:', allDepartments);\n      console.log('专业:', allMajors);\n      console.log('班级:', allClasses);\n      \n      setDepartments(allDepartments);\n      setMajors(allMajors);\n      setClasses(allClasses);\n      \n      console.log('获取到的所有院部:', allDepartments);\n      console.log('获取到的所有专业:', allMajors);\n      console.log('获取到的所有班级:', allClasses);\n    } catch (error) {\n      console.error('获取所有院部、专业和班级失败:', error);\n    } finally {\n      fetchAllMajorsAndClasses.isLoading = false;\n    }\n  };\n\n  const handleSchoolChange = async (schoolId) => {\n    setSelectedSchool(schoolId);\n    setSelectedDepartment('');\n    setSelectedMajor('');\n    setSelectedClass('');\n    \n    // 不再重置全局的departments、majors和classes数组\n    // 这些数组应该保持完整，用于学生列表显示\n  };\n\n  const handleDepartmentChange = async (departmentId) => {\n    setSelectedDepartment(departmentId);\n    setSelectedMajor('');\n    setSelectedClass('');\n    \n    // 不再重置全局的majors和classes数组\n    // 这些数组应该保持完整，用于学生列表显示\n  };\n\n  const handleMajorChange = async (majorId) => {\n    setSelectedMajor(majorId);\n    setSelectedClass('');\n    \n    // 不再重置全局的classes数组\n    // 这个数组应该保持完整，用于学生列表显示\n  };\n\n  const handleBatchImport = async () => {\n    if (!uploadedFile) {\n      setError('请选择要上传的Excel文件');\n      setSuccess('');\n      return;\n    }\n\n    if (!selectedSchool || !selectedDepartment || !selectedMajor || !selectedClass) {\n      setError('请选择学校、院部、专业和班级');\n      setSuccess('');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError('');\n      setSuccess('');\n      \n      // 创建FormData对象来上传文件\n      const formData = new FormData();\n      formData.append('file', uploadedFile);\n      formData.append('school_id', selectedSchool);\n      formData.append('department_id', selectedDepartment);\n      formData.append('major_id', selectedMajor);\n      formData.append('class_id', selectedClass);\n      \n      // 调用新的批量导入API\n      const resp = await batchImportStudentsFromExcel(formData);\n      \n      const msg = resp?.message || `批量导入完成: 成功 ${resp?.success_count ?? 0} 个, 失败 ${resp?.failed_count ?? 0} 个`;\n      setSuccess(msg);\n      \n      if (resp?.errors && resp.errors.length > 0) {\n        const preview = resp.errors.slice(0, 5).join('；');\n        setError(`部分导入失败：${preview}${resp.errors.length > 5 ? ' 等' : ''}`);\n      }\n      \n      // 刷新用户列表\n      const usersData = await getUsers(1, 50, 'student');\n      setUsers(usersData.users);\n      \n      // 清理上传的文件\n      setUploadedFile(null);\n      \n    } catch (error) {\n      setError(error.response?.data?.error || '批量导入失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 下载Excel模板\n  const handleDownloadTemplate = () => {\n    // 创建Excel模板数据\n    const templateData = [\n      ['学号', '姓名', '密码'],\n      ['2021001', '张三', '123456'],\n      ['2021002', '李四', '123456'],\n      ['2021003', '王五', '123456']\n    ];\n    \n    // 创建工作簿\n    const workbook = XLSX.utils.book_new();\n    \n    // 创建工作表\n    const worksheet = XLSX.utils.aoa_to_sheet(templateData);\n    \n    // 设置列宽\n    const colWidths = [\n      { wch: 15 }, // 学号列宽\n      { wch: 15 }, // 姓名列宽\n      { wch: 15 }  // 密码列宽\n    ];\n    worksheet['!cols'] = colWidths;\n    \n    // 将工作表添加到工作簿\n    XLSX.utils.book_append_sheet(workbook, worksheet, '学生信息');\n    \n    // 生成Excel文件并下载\n    XLSX.writeFile(workbook, '学生信息导入模板.xlsx');\n    \n    setSuccess('Excel模板下载成功！请填写学生信息后重新上传。');\n  };\n\n  // 处理文件上传\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      // 检查文件类型\n      const validTypes = ['.xlsx', '.xls', '.csv'];\n      const fileExtension = file.name.substring(file.name.lastIndexOf('.')).toLowerCase();\n      \n      if (!validTypes.includes(fileExtension)) {\n        setError('请选择有效的Excel文件格式（.xlsx, .xls, .csv）');\n        return;\n      }\n      \n      // 检查文件大小（5MB限制）\n      if (file.size > 5 * 1024 * 1024) {\n        setError('文件大小不能超过5MB');\n        return;\n      }\n      \n      setUploadedFile(file);\n      setError('');\n      setSuccess('文件选择成功！');\n    }\n  };\n\n  // 移除上传的文件\n  const handleRemoveFile = () => {\n    setUploadedFile(null);\n    setError('');\n    setSuccess('');\n  };\n\n  const handleCreateProblem = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      setSuccess('');\n      \n      // 构建提交给后端的数据\n      const submitData = { ...problemForm };\n      \n      // 如果是选择题，需要将options数组转换为choice_options字符串\n      if (problemForm.type === 'choice') {\n        // 将选项数组转换为字符串格式：A.选项内容\\nB.选项内容\\nC.选项内容\n        submitData.choice_options = problemForm.options\n          .map((option) => `${option.id}.${option.text}`)\n          .join('\\n');\n        \n        // 将正确答案数组转换为expected_output字符串\n        submitData.expected_output = problemForm.correct_answers.join(',');\n        \n        // 删除前端特有的字段，避免后端报错\n        delete submitData.options;\n        delete submitData.correct_answers;\n      }\n      \n      // 如果是判断题，需要特殊处理\n      if (problemForm.type === 'judge') {\n        // 判断题的选项固定为\"正确\"和\"错误\"\n        submitData.choice_options = 'A.正确\\nB.错误';\n        \n        // 将正确答案转换为expected_output\n        submitData.expected_output = problemForm.correct_answers.join(',');\n        \n        // 删除前端特有的字段\n        delete submitData.options;\n        delete submitData.correct_answers;\n      }\n      \n      // 如果是简答题，需要特殊处理\n      if (problemForm.type === 'short_answer') {\n        // 将简答题答案设置为expected_output\n        submitData.expected_output = problemForm.answer;\n        \n        // 删除前端特有的字段\n        delete submitData.answer;\n      }\n      \n      // 如果是编程题，需要将testCases数组转换为后端期望的格式\n      if (problemForm.type === 'programming') {\n        // 将testCases数组转换为test_cases和expected_output字符串\n        const testCases = problemForm.testCases || [];\n        \n        if (testCases.length === 0) {\n          throw new Error('编程题至少需要一个测试用例');\n        }\n        \n        // 构建test_cases字符串（每行一个输入）\n        submitData.test_cases = testCases\n          .map(tc => tc.input || '')  // 如果没有输入则使用空字符串\n          .join('\\n');\n        \n        // 构建expected_output字符串（每行一个期望输出）\n        submitData.expected_output = testCases\n          .map(tc => tc.output || '')  // 输出是必填的\n          .join('\\n');\n        \n        // 删除前端特有的字段\n        delete submitData.testCases;\n      }\n      \n      // 添加调试信息\n      console.log('提交的题目数据:', submitData);\n      console.log('题目类型:', submitData.type);\n      console.log('完整表单数据:', JSON.stringify(submitData, null, 2));\n      \n      if (isEditing && editingProblem) {\n        console.log('更新题目，ID:', editingProblem.id);\n        await updateProblem(editingProblem.id, submitData);\n        setSuccess('题目更新成功！');\n      } else {\n        console.log('创建新题目');\n        await createProblem(submitData);\n        setSuccess('题目创建成功！');\n      }\n      \n      // 重置表单\n      setProblemForm({\n        title: '',\n        description: '',\n        type: 'programming',\n        testCases: [],\n        difficulty: 'easy',\n        time_limit: 1000,\n        memory_limit: 128,\n        options: [],\n        correct_answers: [],\n        is_multiple_choice: false,\n        answer: ''\n      });\n      \n      setIsEditing(false);\n      setEditingProblem(null);\n      \n      // 刷新题目列表\n      const problemsData = await getProblems(1, 50);\n      setProblems(problemsData.problems);\n      \n      // 切换到题目列表\n      setActiveSubTab('list');\n      \n    } catch (error) {\n      console.error('题目操作失败:', error);\n      console.error('错误响应:', error.response);\n      setError(error.response?.data?.error || (isEditing ? '更新题目失败' : '创建题目失败'));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleEditProblem = (problem) => {\n    setEditingProblem(problem);\n    // 根据题目类型初始化表单数据\n    let initialOptions = [];\n    let initialCorrectAnswers = [];\n    \n    if (problem.type === 'choice') {\n      // 解析选择题的choice_options字符串\n      if (problem.choice_options) {\n        const optionLines = problem.choice_options.split('\\n').filter(line => line.trim());\n        initialOptions = optionLines.map((line, index) => {\n          const match = line.match(/^([A-Z])\\.(.+)$/);\n          if (match) {\n            return {\n              id: match[1], // 使用字母ID (A, B, C...)\n              text: match[2].trim(),\n              is_correct: false\n            };\n          }\n          return {\n            id: String.fromCharCode(65 + index), // 如果没有匹配到字母，使用默认字母ID\n            text: line.trim(),\n            is_correct: false\n          };\n        });\n      }\n      \n      // 解析expected_output中的正确答案\n      if (problem.expected_output) {\n        const correctAnswers = problem.expected_output.split(',').filter(ans => ans.trim());\n        initialCorrectAnswers = correctAnswers;\n        \n        // 设置选项的正确状态\n        initialOptions = initialOptions.map(option => ({\n          ...option,\n          is_correct: correctAnswers.includes(option.id)\n        }));\n      }\n    } else if (problem.type === 'judge') {\n      // 判断题固定选项\n      initialOptions = [\n        { id: 'A', text: '正确', is_correct: false },\n        { id: 'B', text: '错误', is_correct: false }\n      ];\n      \n      // 根据expected_output设置正确答案\n      if (problem.expected_output) {\n        const correctAnswer = problem.expected_output.trim();\n        if (correctAnswer === 'A') {\n          initialOptions[0].is_correct = true;\n          initialCorrectAnswers = ['A'];\n        } else if (correctAnswer === 'B') {\n          initialOptions[1].is_correct = true;\n          initialCorrectAnswers = ['B'];\n        }\n      }\n    }\n    \n    setProblemForm({\n      title: problem.title,\n      description: problem.description,\n      type: problem.type || 'programming',\n      testCases: problem.type === 'programming' ? parseTestCases(problem.test_cases, problem.expected_output) : [],\n      difficulty: problem.difficulty,\n      time_limit: problem.time_limit || 1000,\n      memory_limit: problem.memory_limit || 128,\n      options: initialOptions,\n      correct_answers: initialCorrectAnswers,\n      is_multiple_choice: problem.is_multiple_choice || false,\n      answer: problem.answer || ''\n    });\n    \n    setIsEditing(true);\n    setActiveSubTab('create');\n  };\n\n  const handleDeleteProblem = async (problemId) => {\n    if (!window.confirm('确定要删除这个题目吗？此操作不可恢复。')) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError('');\n      setSuccess('');\n      await deleteProblem(problemId);\n      setSuccess('题目删除成功！');\n      \n      // 刷新题目列表\n      const problemsData = await getProblems(1, 50);\n      setProblems(problemsData.problems);\n    } catch (error) {\n      setError(error.response?.data?.error || '删除题目失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 根据题目特征推断题目类型\n  const inferProblemType = (problem) => {\n    console.log('开始推断题目类型，题目数据:', problem);\n    \n    // 优先使用明确设置的题目类型\n    if (problem.type && problem.type !== 'undefined') {\n      console.log('使用明确设置的题目类型:', problem.type);\n      return problem.type;\n    }\n    \n    // 如果没有明确设置类型，则通过特征推断\n    console.log('没有明确设置类型，开始推断...');\n    \n    // 检查所有可能的选项字段\n    const options = problem.options || problem.choices || problem.alternatives || problem.option_list || [];\n    console.log('检查到的选项:', options);\n    \n    // 如果有选项，判断是选择题还是判断题\n    if (Array.isArray(options) && options.length > 0) {\n      console.log('发现选项，数量:', options.length);\n      \n      // 检查是否是判断题（只有两个选项：正确、错误）\n      if (options.length === 2) {\n        const optionTexts = options.map(opt => {\n          const text = opt.text || opt.option_text || opt.content || opt.label || '';\n          console.log('选项文本:', text);\n          return text;\n        });\n        \n        if (optionTexts.includes('正确') && optionTexts.includes('错误')) {\n          console.log('推断为判断题');\n          return 'judge';\n        }\n      }\n      \n      console.log('推断为选择题');\n      return 'choice';\n    }\n    \n    // 检查所有可能的答案字段\n    const answer = problem.answer || problem.solution || problem.correct_answer || problem.answer_text || '';\n    console.log('检查到的答案:', answer);\n    \n    if (answer && answer.trim()) {\n      console.log('推断为简答题');\n      return 'short_answer';\n    }\n    \n    // 检查编程题相关字段\n    const testCases = problem.test_cases || problem.test_cases_text || problem.test_input || '';\n    const expectedOutput = problem.expected_output || problem.expected_result || problem.expected_answer || '';\n    console.log('检查到的测试用例:', testCases);\n    console.log('检查到的期望输出:', expectedOutput);\n    \n    if (testCases && expectedOutput) {\n      console.log('推断为编程题');\n      return 'programming';\n    }\n    \n    // 如果都无法推断，默认返回编程题\n    console.log('无法推断类型，默认返回编程题');\n    return 'programming';\n  };\n\n  // 根据ID获取学校名称\n  const getSchoolName = (schoolId) => {\n    if (!schoolId) return '-';\n    const school = schools.find(s => {\n      const sId = s.id;\n      return sId === schoolId || sId === parseInt(schoolId) || parseInt(sId) === schoolId;\n    });\n    return school ? school.name : schoolId;\n  };\n\n  // 根据ID获取专业名称\n  const getMajorName = (majorId) => {\n    if (!majorId) return '-';\n    const major = majors.find(m => {\n      const mId = m.id;\n      return mId === majorId || mId === parseInt(majorId) || parseInt(mId) === majorId;\n    });\n    return major ? major.name : majorId;\n  };\n\n  // 根据ID获取班级名称\n  const getClassName = (classId) => {\n    if (!classId) return '-';\n    const classItem = classes.find(c => {\n      const cId = c.id;\n      return cId === classId || cId === parseInt(classId) || parseInt(cId) === classId;\n    });\n    return classItem ? classItem.name : classId;\n  };\n\n  const handleCancelEdit = () => {\n    setIsEditing(false);\n    setEditingProblem(null);\n    setProblemForm({\n      title: '',\n      description: '',\n      type: 'programming',\n      testCases: [],\n      difficulty: 'easy',\n      time_limit: 1000,\n      memory_limit: 128,\n      options: [],\n      correct_answers: [],\n      is_multiple_choice: false,\n      answer: ''\n    });\n    setActiveSubTab('list');\n  };\n\n  // 课程相关处理函数（只读功能）\n  const handleViewCourseDetail = (courseId) => {\n    const course = courses.find(c => c.id === courseId);\n    if (course) {\n      setActiveTab('courses');\n      setActiveSubTab('detail');\n      setEditingCourse(course);\n    }\n  };\n\n  // 作业相关处理函数\n  const handleCreateAssignment = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      setSuccess('');\n      \n      // 如果在课程详情页面创建作业，自动设置课程ID\n      const assignmentData = { ...assignmentForm };\n      if (activeSubTab === 'create-assignment' && editingCourse) {\n        assignmentData.course_id = editingCourse.id;\n      }\n      \n      if (isEditingAssignment && editingAssignment) {\n        await updateAssignment(editingAssignment.id, assignmentData);\n        setSuccess('作业更新成功！');\n      } else {\n        await createAssignment(assignmentData);\n        setSuccess('作业布置成功！');\n      }\n      \n      // 重置表单\n      setAssignmentForm({\n        name: '',\n        description: '',\n        requirements: '',\n        due_date: '',\n        course_id: '',\n        problem_ids: []\n      });\n      \n      setIsEditingAssignment(false);\n      setEditingAssignment(null);\n      \n      // 刷新作业列表\n      const assignmentsData = await getCourseAssignments();\n      setAssignments(assignmentsData.assignments || []);\n      \n      // 如果在课程详情页面，返回到课程详情；否则返回到课程列表\n      if (activeSubTab === 'create-assignment') {\n        setActiveSubTab('detail');\n      } else {\n        setActiveSubTab('list');\n      }\n      \n    } catch (error) {\n      setError(error.response?.data?.error || (isEditingAssignment ? '更新作业失败' : '布置作业失败'));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleEditAssignment = (assignment) => {\n    setEditingAssignment(assignment);\n    setAssignmentForm({\n      name: assignment.name,\n      description: assignment.description || '',\n      requirements: assignment.requirements || '',\n      due_date: assignment.due_date || '',\n      course_id: assignment.course_id || '',\n      problem_ids: assignment.problem_ids || []\n    });\n    setIsEditingAssignment(true);\n    \n    // 记录编辑作业时的上下文\n    if (activeSubTab === 'detail' && editingCourse) {\n      setEditingAssignmentContext('course-detail');\n    } else {\n      setEditingAssignmentContext('course-list');\n    }\n    \n    // 切换到作业创建模式\n    setActiveSubTab('create-assignment');\n  };\n\n  const handleDeleteAssignment = async (assignmentId) => {\n    if (!window.confirm('确定要删除该作业吗？此操作不可恢复。')) return;\n    try {\n      setLoading(true);\n      setError('');\n      setSuccess('');\n      \n      await deleteAssignment(assignmentId);\n      setSuccess('作业已删除');\n      \n      // 刷新作业列表\n      const assignmentsData = await getCourseAssignments();\n      setAssignments(assignmentsData.assignments || []);\n      \n    } catch (error) {\n      setError(error.response?.data?.error || '删除作业失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 学生-课程关联关系处理函数\n  const handleAddStudentToCourse = async () => {\n    if (!editingCourse) return;\n    \n    try {\n      setLoading(true);\n      setError('');\n      setSuccess('');\n      \n      // 查找学生是否已存在\n      const existingStudent = users.find(user => \n        user.username === addStudentForm.student_no && user.role === 'student'\n      );\n      \n      if (!existingStudent) {\n        setError('学生不存在，请先创建学生账号');\n        return;\n      }\n      \n      // 使用API添加学生到课程\n      try {\n        await addStudentToCourse(editingCourse.id, {\n          student_id: existingStudent.id,\n          class_id: editingCourse.class_id\n        });\n        setSuccess('学生已成功添加到课程！');\n        \n        // 重新加载课程学生数据\n        const courseStudentsData = await getCourseStudents(editingCourse.id);\n        if (courseStudentsData && courseStudentsData.length > 0) {\n          const apiRelations = courseStudentsData.map(student => ({\n            student_id: student.student_id,\n            class_id: student.class_id,\n            course_id: editingCourse.id,\n            student_name: student.student_name,\n            student_no: student.student_no,\n            added_at: student.added_at || new Date().toISOString()\n          }));\n          setStudentClassRelations(apiRelations);\n        } else {\n          setStudentClassRelations([]);\n        }\n        \n        // 刷新课程列表（因为学生数量发生变化）\n        try {\n          const coursesData = await getTeacherCourses();\n          if (coursesData && coursesData.courses) {\n            setCourses(coursesData.courses);\n            // 更新当前编辑的课程信息\n            const updatedCourse = coursesData.courses.find(c => c.id === editingCourse.id);\n            if (updatedCourse) {\n              setEditingCourse(updatedCourse);\n            }\n          }\n        } catch (error) {\n          console.warn('刷新课程列表失败:', error);\n        }\n      } catch (apiError) {\n        console.error('添加学生到课程失败:', apiError);\n        setError(apiError.response?.data?.error || '添加学生失败');\n        return;\n      }\n      \n      // 重置表单\n      setAddStudentForm({\n        student_no: '',\n        name: '',\n        password: '',\n        email: '',\n        phone: '',\n        school_id: '',\n        department_id: '',\n        major_id: '',\n        class_id: ''\n      });\n      \n      // 返回到课程详情页\n      setActiveSubTab('detail');\n      \n    } catch (error) {\n      setError(error.response?.data?.error || '添加学生失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleRemoveStudentFromCourse = async (relationId) => {\n    if (!window.confirm('确定要从该课程中移除该学生吗？')) return;\n    \n    try {\n      // 解析relationId获取学生ID和课程ID\n      const [studentId] = relationId.split('_');\n      \n      // 使用API从课程中移除学生\n      try {\n        await removeStudentFromCourse(editingCourse.id, studentId);\n        setSuccess('学生已从课程中移除');\n        \n        // 重新加载课程学生数据\n        const courseStudentsData = await getCourseStudents(editingCourse.id);\n        if (courseStudentsData && courseStudentsData.length > 0) {\n          const apiRelations = courseStudentsData.map(student => ({\n            student_id: student.student_id,\n            class_id: student.class_id,\n            course_id: editingCourse.id,\n            student_name: student.student_name,\n            student_no: student.student_no,\n            added_at: student.added_at || new Date().toISOString()\n          }));\n          setStudentClassRelations(apiRelations);\n        } else {\n          setStudentClassRelations([]);\n        }\n        \n        // 刷新课程列表（因为学生数量发生变化）\n        try {\n          const coursesData = await getTeacherCourses();\n          if (coursesData && coursesData.courses) {\n            setCourses(coursesData.courses);\n            // 更新当前编辑的课程信息\n            const updatedCourse = coursesData.courses.find(c => c.id === editingCourse.id);\n            if (updatedCourse) {\n              setEditingCourse(updatedCourse);\n            }\n          }\n        } catch (error) {\n          console.warn('刷新课程列表失败:', error);\n        }\n      } catch (apiError) {\n        console.error('从课程中移除学生失败:', apiError);\n        setError(apiError.response?.data?.error || '移除学生失败');\n        return;\n      }\n    } catch (error) {\n      setError('移除学生失败');\n    }\n  };\n\n  // 学生管理标签页渲染函数\n  const renderStudentsTab = () => (\n    <div className=\"tab-content\">\n      <div className=\"sub-tabs\">\n        <button \n          className={`sub-tab-btn ${activeSubTab === 'list' ? 'active' : ''}`}\n          onClick={() => setActiveSubTab('list')}\n        >\n          学生列表\n        </button>\n        <button \n          className={`sub-tab-btn ${activeSubTab === 'add' ? 'active' : ''}`}\n          onClick={() => setActiveSubTab('add')}\n        >\n          添加学生\n        </button>\n        <button \n          className={`sub-tab-btn ${activeSubTab === 'import' ? 'active' : ''}`}\n          onClick={() => setActiveSubTab('import')}\n        >\n          批量导入\n        </button>\n      </div>\n\n      {activeSubTab === 'list' && (\n        <div className=\"section-content\">\n          <div className=\"section-header\">\n            <h2>学生列表</h2>\n            <button \n              className=\"add-btn\"\n              onClick={() => setActiveSubTab('add')}\n            >\n              添加学生\n            </button>\n          </div>\n          \n          <div className=\"students-table\">\n            <table>\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>学号</th>\n                  <th>姓名</th>\n                  <th>邮箱</th>\n                  <th>手机号</th>\n                  <th>学校</th>\n                  <th>专业</th>\n                  <th>班级</th>\n                  <th>操作</th>\n                </tr>\n              </thead>\n              <tbody>\n                {users.map(user => (\n                  <tr key={user.id}>\n                    <td>{user.id}</td>\n                    <td>{user.username}</td>\n                    <td>{user.name}</td>\n                    <td>{user.email || '-'}</td>\n                    <td>{user.phone || '-'}</td>\n                    <td>{getSchoolName(user.school_id)}</td>\n                    <td>{getMajorName(user.major_id)}</td>\n                    <td>{getClassName(user.class_id)}</td>\n                    <td>\n                      <button \n                        className=\"action-btn edit\"\n                        onClick={() => handleEditStudentClick(user)}\n                      >\n                        编辑\n                      </button>\n                      <button \n                        className=\"action-btn delete\"\n                        onClick={() => handleDeleteStudent(user.id)}\n                      >\n                        删除\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n\n      {activeSubTab === 'add' && (\n        <div className=\"section-content\">\n          <div className=\"section-header\">\n            <h2>➕ 添加学生</h2>\n            <button \n              className=\"secondary-btn\"\n              onClick={() => setActiveSubTab('list')}\n            >\n              ← 返回学生列表\n            </button>\n          </div>\n          \n          <div className=\"add-student-form\">\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>学号：<span className=\"required-mark\">*</span></label>\n                <input \n                  type=\"text\" \n                  placeholder=\"请输入学号\"\n                  value={addStudentForm.student_no}\n                  onChange={(e) => setAddStudentForm(prev => ({ ...prev, student_no: e.target.value }))}\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label>姓名：<span className=\"required-mark\">*</span></label>\n                <input \n                  type=\"text\" \n                  placeholder=\"请输入学生姓名\"\n                  value={addStudentForm.name}\n                  onChange={(e) => setAddStudentForm(prev => ({ ...prev, name: e.target.value }))}\n                />\n              </div>\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>密码：<span className=\"required-mark\">*</span></label>\n                <input \n                  type=\"password\" \n                  placeholder=\"请输入初始密码\"\n                  value={addStudentForm.password}\n                  onChange={(e) => setAddStudentForm(prev => ({ ...prev, password: e.target.value }))}\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label>邮箱：</label>\n                <input \n                  type=\"email\" \n                  placeholder=\"请输入邮箱地址\"\n                  value={addStudentForm.email}\n                  onChange={(e) => setAddStudentForm(prev => ({ ...prev, email: e.target.value }))}\n                />\n              </div>\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>手机号：</label>\n                <input \n                  type=\"tel\" \n                  placeholder=\"请输入手机号码\"\n                  value={addStudentForm.phone}\n                  onChange={(e) => setAddStudentForm(prev => ({ ...prev, phone: e.target.value }))}\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label>学校：</label>\n                <select \n                  value={addStudentForm.school_id} \n                  onChange={(e) => handleAddStudentSchoolChange(e.target.value)}\n                >\n                  <option value=\"\">请选择学校（可选）</option>\n                  {schools.map(school => (\n                    <option key={school.id} value={school.id}>\n                      {school.name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>院部：</label>\n                <select \n                  value={addStudentForm.department_id} \n                  onChange={(e) => handleAddStudentDepartmentChange(e.target.value)}\n                  disabled={!addStudentForm.school_id}\n                >\n                  <option value=\"\">请选择院部（可选）</option>\n                  {getAddStudentSchoolDepartments().map(department => (\n                    <option key={department.id} value={department.id}>\n                      {department.name}\n                    </option>\n                  ))}\n                </select>\n                {/* 调试信息 */}\n                <div style={{ fontSize: '12px', color: '#666', marginTop: '5px' }}>\n                  当前学校ID: {addStudentForm.school_id} | \n                  可用院部数量: {getAddStudentSchoolDepartments().length} | \n                  总院部数量: {departments.length}\n                </div>\n              </div>\n              \n              <div className=\"form-group\">\n                <label>专业：</label>\n                <select \n                  value={addStudentForm.major_id} \n                  onChange={(e) => handleAddStudentMajorChange(e.target.value)}\n                  disabled={!addStudentForm.department_id}\n                >\n                  <option value=\"\">请选择专业（可选）</option>\n                  {getAddStudentDepartmentMajors().map(major => (\n                    <option key={major.id} value={major.id}>\n                      {major.name}\n                    </option>\n                  ))}\n                </select>\n                {/* 调试信息 */}\n                <div style={{ fontSize: '12px', color: '#666', marginTop: '5px' }}>\n                  当前院部ID: {addStudentForm.department_id} | \n                  可用专业数量: {getAddStudentDepartmentMajors().length} | \n                  总专业数量: {majors.length}\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>班级：</label>\n                <select \n                  value={addStudentForm.class_id} \n                  onChange={(e) => setAddStudentForm(prev => ({ ...prev, class_id: e.target.value }))}\n                  disabled={!addStudentForm.major_id}\n                >\n                  <option value=\"\">请选择班级（可选）</option>\n                  {getAddStudentMajorClasses().map(classItem => (\n                    <option key={classItem.id} value={classItem.id}>\n                      {classItem.name}\n                    </option>\n                  ))}\n                </select>\n                {/* 调试信息 */}\n                <div style={{ fontSize: '12px', color: '#666', marginTop: '5px' }}>\n                  当前专业ID: {addStudentForm.major_id} | \n                  可用班级数量: {getAddStudentMajorClasses().length} | \n                  总班级数量: {classes.length}\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"form-actions\">\n              <button \n                className=\"submit-btn\"\n                onClick={handleAddStudent}\n                disabled={loading || !addStudentForm.student_no || !addStudentForm.name || !addStudentForm.password}\n              >\n                {loading ? '创建中...' : '创建学生账号'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {activeSubTab === 'import' && (\n        <div className=\"section-content\">\n          <div className=\"section-header\">\n            <h2>📥 批量导入学生</h2>\n            <button \n              className=\"secondary-btn\"\n              onClick={() => setActiveSubTab('list')}\n            >\n              ← 返回学生列表\n            </button>\n          </div>\n          \n          <div className=\"import-form\">\n            <div className=\"form-help\">\n              <h3>导入说明</h3>\n              <p>请按以下步骤操作：</p>\n              <ol>\n                <li>点击下方\"下载Excel模板\"按钮，下载标准格式的Excel文件（.xlsx格式）</li>\n                <li>在Excel文件中填写学生信息（学号、姓名、密码）</li>\n                <li>选择学校、院部、专业、班级信息</li>\n                <li>上传填写好的Excel文件</li>\n                <li>系统将自动识别并添加学生信息</li>\n              </ol>\n              <p><strong>注意：</strong>学号、姓名、密码为必填项，学校、院部、专业、班级信息将应用到所有导入的学生</p>\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>学校：</label>\n                <select \n                  value={selectedSchool} \n                  onChange={(e) => handleSchoolChange(e.target.value)}\n                >\n                  <option value=\"\">请选择学校（必选）</option>\n                  {schools.map(school => (\n                    <option key={school.id} value={school.id}>\n                      {school.name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              \n              <div className=\"form-group\">\n                <label>院部：</label>\n                <select \n                  value={selectedDepartment} \n                  onChange={(e) => handleDepartmentChange(e.target.value)}\n                  disabled={!selectedSchool}\n                >\n                  <option value=\"\">请选择院部（必选）</option>\n                  {getCurrentSchoolDepartments().map(department => (\n                    <option key={department.id} value={department.id}>\n                      {department.name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>专业：</label>\n                <select \n                  value={selectedMajor} \n                  onChange={(e) => handleMajorChange(e.target.value)}\n                  disabled={!selectedDepartment}\n                >\n                  <option value=\"\">请选择专业（必选）</option>\n                  {getCurrentDepartmentMajors().map(major => (\n                    <option key={major.id} value={major.id}>\n                      {major.name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              \n              <div className=\"form-group\">\n                <label>班级：</label>\n                <select \n                  value={selectedClass} \n                  onChange={(e) => setSelectedClass(e.target.value)}\n                  disabled={!selectedMajor}\n                >\n                  <option value=\"\">请选择班级（必选）</option>\n                  {getCurrentMajorClasses().map(classItem => (\n                    <option key={classItem.id} value={classItem.id}>\n                      {classItem.name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <button \n                  className=\"download-btn\"\n                  onClick={handleDownloadTemplate}\n                  disabled={loading}\n                >\n                  📥 下载Excel模板\n                </button>\n                <span className=\"form-help-text\">下载包含学号、姓名、密码三列的标准Excel模板（.xlsx格式）</span>\n              </div>\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>上传Excel文件：<span className=\"required-mark\">*</span></label>\n                <input \n                  type=\"file\" \n                  accept=\".xlsx,.xls\"\n                  onChange={handleFileUpload}\n                  disabled={loading || !selectedSchool || !selectedDepartment || !selectedMajor || !selectedClass}\n                />\n                <span className=\"form-help-text\">支持.xlsx和.xls格式，文件大小不超过5MB。建议使用下载的Excel模板填写数据。</span>\n              </div>\n            </div>\n            \n            {uploadedFile && (\n              <div className=\"form-row\">\n                <div className=\"form-group\">\n                  <div className=\"file-info\">\n                    <span>📎 已选择文件: {uploadedFile.name}</span>\n                    <button \n                      className=\"remove-file-btn\"\n                      onClick={handleRemoveFile}\n                    >\n                      ✕ 移除\n                    </button>\n                  </div>\n                </div>\n              </div>\n            )}\n            \n            <div className=\"form-actions\">\n              <button \n                className=\"submit-btn\"\n                onClick={handleBatchImport}\n                disabled={loading || !uploadedFile || !selectedSchool || !selectedDepartment || !selectedMajor || !selectedClass}\n              >\n                {loading ? '导入中...' : '开始导入'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n\n  // 题目管理标签页渲染函数\n  const renderProblemsTab = () => (\n    <div className=\"tab-content\">\n      <div className=\"sub-tabs\">\n        <button \n          className={`sub-tab-btn ${activeSubTab === 'list' ? 'active' : ''}`}\n          onClick={() => setActiveSubTab('list')}\n        >\n          题目列表\n        </button>\n        <button \n          className={`sub-tab-btn ${activeSubTab === 'create' ? 'active' : ''}`}\n          onClick={() => setActiveSubTab('create')}\n        >\n          创建题目\n        </button>\n        <button \n          className={`sub-tab-btn ${activeSubTab === 'ai' ? 'active' : ''}`}\n          onClick={() => setActiveSubTab('ai')}\n        >\n          AI生题\n        </button>\n      </div>\n\n      {activeSubTab === 'list' && (\n        <div className=\"section-content\">\n          <div className=\"section-header\">\n            <h2>题目列表</h2>\n            <button \n              className=\"add-btn\"\n              onClick={() => setActiveSubTab('create')}\n            >\n              创建题目\n            </button>\n          </div>\n          \n          <div className=\"problems-table\">\n            <table>\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>标题</th>\n                  <th>类型</th>\n                  <th>难度</th>\n                  <th>时间限制</th>\n                  <th>内存限制</th>\n                  <th>操作</th>\n                </tr>\n              </thead>\n              <tbody>\n                {problems.map(problem => {\n                  // 调试信息：打印每个题目的类型\n                  console.log(`=== 题目 ${problem.id} 调试信息 ===`);\n                  console.log('题目标题:', problem.title);\n                  console.log('原始类型:', problem.type);\n                  console.log('完整题目对象:', problem);\n                  console.log('所有字段名:', Object.keys(problem));\n                  console.log('选项字段:', problem.options);\n                  console.log('答案字段:', problem.answer);\n                  console.log('测试用例字段:', problem.test_cases);\n                  console.log('期望输出字段:', problem.expected_output);\n                  \n                  const inferredType = inferProblemType(problem);\n                  console.log('推断类型:', inferredType);\n                  console.log('=== 调试信息结束 ===');\n                  \n                  return (\n                    <tr key={problem.id}>\n                      <td>{problem.id}</td>\n                      <td>{problem.title}</td>\n                      <td>\n                        {(() => {\n                          const inferredType = inferProblemType(problem);\n                          const displayType = inferredType === 'choice' ? '选择题' : \n                                            inferredType === 'judge' ? '判断题' : \n                                            inferredType === 'short_answer' ? '简答题' : '编程题';\n                          \n                          return (\n                            <span className={`type-badge ${inferredType}`}>\n                              {displayType}\n                            </span>\n                          );\n                        })()}\n                        {/* 调试信息 */}\n                        <small style={{display: 'block', color: '#999', fontSize: '10px'}}>\n                          原始类型: {problem.type || 'undefined'} | 推断类型: {inferProblemType(problem)}\n                        </small>\n                      </td>\n                      <td>\n                        <span className={`difficulty-badge ${problem.difficulty}`}>\n                          {problem.difficulty === 'easy' ? '简单' : \n                           problem.difficulty === 'medium' ? '中等' : '困难'}\n                        </span>\n                      </td>\n                      <td>{problem.time_limit || '-'}ms</td>\n                      <td>{problem.memory_limit || '-'}MB</td>\n                      <td>\n                        <button \n                          className=\"action-btn edit\"\n                          onClick={() => handleEditProblem(problem)}\n                        >\n                          编辑\n                        </button>\n                        <button \n                          className=\"action-btn delete\"\n                          onClick={() => handleDeleteProblem(problem.id)}\n                        >\n                          删除\n                        </button>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n\n      {activeSubTab === 'create' && (\n        <div className=\"section-content\">\n          <div className=\"section-header\">\n            <h2>{isEditing ? '✏️ 编辑题目' : '➕ 创建题目'}</h2>\n            <button \n              className=\"secondary-btn\"\n              onClick={handleCancelEdit}\n            >\n              ← 返回题目列表\n            </button>\n          </div>\n          \n          <div className=\"problem-form\">\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>题目标题：<span className=\"required-mark\">*</span></label>\n                <input \n                  type=\"text\" \n                  placeholder=\"请输入题目标题\"\n                  value={problemForm.title}\n                  onChange={(e) => setProblemForm(prev => ({ ...prev, title: e.target.value }))}\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label>题目类型：<span className=\"required-mark\">*</span></label>\n                <select \n                  value={problemForm.type}\n                  onChange={(e) => handleProblemTypeChange(e.target.value)}\n                >\n                  <option value=\"programming\">编程题</option>\n                  <option value=\"choice\">选择题</option>\n                  <option value=\"judge\">判断题</option>\n                  <option value=\"short_answer\">简答题</option>\n                </select>\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>难度：<span className=\"required-mark\">*</span></label>\n                <select \n                  value={problemForm.difficulty}\n                  onChange={(e) => setProblemForm(prev => ({ ...prev, difficulty: e.target.value }))}\n                >\n                  <option value=\"easy\">简单</option>\n                  <option value=\"medium\">中等</option>\n                  <option value=\"hard\">困难</option>\n                </select>\n              </div>\n              \n              {problemForm.type === 'choice' && (\n                <div className=\"form-group\">\n                  <label>选择类型：</label>\n                  <div className=\"checkbox-group\">\n                    <label className=\"checkbox-label\">\n                      <input \n                        type=\"checkbox\"\n                        checked={problemForm.is_multiple_choice}\n                        onChange={(e) => setProblemForm(prev => ({ \n                          ...prev, \n                          is_multiple_choice: e.target.checked \n                        }))}\n                      />\n                      <span>多选题</span>\n                    </label>\n                  </div>\n                </div>\n              )}\n            </div>\n            \n            <div className=\"form-group\">\n              <label>题目描述：<span className=\"required-mark\">*</span></label>\n              <textarea\n                placeholder=\"请输入题目描述\"\n                value={problemForm.description}\n                onChange={(e) => setProblemForm(prev => ({ ...prev, description: e.target.value }))}\n                rows={6}\n              />\n            </div>\n\n            {/* 选择题选项管理 */}\n            {problemForm.type === 'choice' && (\n              <div className=\"form-group\">\n                <label>选项：<span className=\"required-mark\">*</span></label>\n                <div className=\"choice-options\">\n                  {problemForm.options.map((option, index) => (\n                    <div key={option.id} className=\"choice-option\">\n                      <div className=\"option-header\">\n                        <span className=\"option-label\">选项 {String.fromCharCode(65 + index)}</span>\n                        <div className=\"option-controls\">\n                          <label className=\"checkbox-label\">\n                            <input \n                              type=\"checkbox\"\n                              checked={option.is_correct}\n                              onChange={() => toggleChoiceOptionCorrect(option.id)}\n                            />\n                            <span>正确答案</span>\n                          </label>\n                          {problemForm.options.length > 2 && (\n                            <button \n                              type=\"button\"\n                              className=\"remove-option-btn\"\n                              onClick={() => removeChoiceOption(option.id)}\n                            >\n                              删除\n                            </button>\n                          )}\n                        </div>\n                      </div>\n                      <input \n                        type=\"text\" \n                        placeholder={`请输入选项 ${String.fromCharCode(65 + index)} 的内容`}\n                        value={option.text}\n                        onChange={(e) => updateChoiceOption(option.id, 'text', e.target.value)}\n                        className=\"option-input\"\n                      />\n                    </div>\n                  ))}\n                  <button \n                    type=\"button\"\n                    className=\"add-option-btn\"\n                    onClick={addChoiceOption}\n                  >\n                    + 添加选项\n                  </button>\n                </div>\n                <small>至少需要2个选项，最多支持10个选项</small>\n              </div>\n            )}\n\n            {/* 判断题选项管理 */}\n            {problemForm.type === 'judge' && (\n              <div className=\"form-group\">\n                <label>选项：<span className=\"required-mark\">*</span></label>\n                <div className=\"choice-options\">\n                  {problemForm.options.map((option, index) => (\n                    <div key={option.id} className=\"choice-option\">\n                      <div className=\"option-header\">\n                        <span className=\"option-label\">选项 {index + 1}</span>\n                        <div className=\"option-controls\">\n                          <label className=\"checkbox-label\">\n                            <input \n                              type=\"checkbox\"\n                              checked={option.is_correct}\n                              onChange={() => toggleChoiceOptionCorrect(option.id)}\n                            />\n                            <span>正确答案</span>\n                          </label>\n                        </div>\n                      </div>\n                      <input \n                        type=\"text\" \n                        value={option.text}\n                        onChange={(e) => updateChoiceOption(option.id, 'text', e.target.value)}\n                        className=\"option-input\"\n                        readOnly\n                      />\n                      <small className=\"option-hint\">判断题选项不可编辑</small>\n                    </div>\n                  ))}\n                </div>\n                <small>判断题固定为\"正确\"和\"错误\"两个选项，请选择其中一个作为正确答案</small>\n              </div>\n            )}\n            \n            {/* 简答题答案 */}\n            {problemForm.type === 'short_answer' && (\n              <div className=\"form-group\">\n                <label>答案：<span className=\"required-mark\">*</span></label>\n                <textarea\n                  placeholder=\"请输入简答题的标准答案\"\n                  value={problemForm.answer}\n                  onChange={(e) => setProblemForm(prev => ({ ...prev, answer: e.target.value }))}\n                  rows={6}\n                />\n                <small>请提供详细的答案内容，供学生参考和教师评分使用</small>\n              </div>\n            )}\n            \n            {/* 编程题相关字段 */}\n            {problemForm.type === 'programming' && (\n              <>\n                <div className=\"form-group\">\n                  <label>测试用例管理：<span className=\"required-mark\">*</span></label>\n                  <div className=\"test-cases-manager\">\n                    <div className=\"test-cases-header\">\n                      <span>测试用例</span>\n                      <button \n                        type=\"button\" \n                        className=\"add-test-case-btn\"\n                        onClick={() => addTestCase()}\n                      >\n                        ➕ 添加测试用例\n                      </button>\n                    </div>\n                    \n                    {problemForm.testCases && problemForm.testCases.length > 0 ? (\n                      <div className=\"test-cases-list\">\n                        {problemForm.testCases.map((testCase, index) => (\n                          <div key={testCase.id} className=\"test-case-item\">\n                            <div className=\"test-case-header\">\n                              <span className=\"test-case-number\">测试用例 {index + 1}</span>\n                              <button \n                                type=\"button\"\n                                className=\"remove-test-case-btn\"\n                                onClick={() => removeTestCase(testCase.id)}\n                              >\n                                ❌\n                              </button>\n                            </div>\n                            \n                            <div className=\"test-case-content\">\n                              <div className=\"test-case-input\">\n                                <label>输入：</label>\n                                <textarea\n                                  placeholder=\"输入数据（如果没有输入请留空）\"\n                                  value={testCase.input || ''}\n                                  onChange={(e) => updateTestCase(testCase.id, 'input', e.target.value)}\n                                  rows={3}\n                                />\n                                <small>如果没有输入，请留空</small>\n                              </div>\n                              \n                              <div className=\"test-case-output\">\n                                <label>期望输出：<span className=\"required-mark\">*</span></label>\n                                <textarea\n                                  placeholder=\"期望的输出结果\"\n                                  value={testCase.output || ''}\n                                  onChange={(e) => updateTestCase(testCase.id, 'output', e.target.value)}\n                                  rows={3}\n                                />\n                              </div>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    ) : (\n                      <div className=\"no-test-cases\">\n                        <p>还没有添加测试用例，请点击\"添加测试用例\"按钮添加</p>\n                      </div>\n                    )}\n                  </div>\n                </div>\n                \n                <div className=\"form-row\">\n                  <div className=\"form-group\">\n                    <label>时间限制：<span className=\"required-mark\">*</span></label>\n                    <input \n                      type=\"number\" \n                      placeholder=\"请输入时间限制（毫秒）\"\n                      value={problemForm.time_limit}\n                      onChange={(e) => setProblemForm(prev => ({ ...prev, time_limit: parseInt(e.target.value) || 1000 }))}\n                      min=\"100\"\n                      max=\"10000\"\n                    />\n                    <small>单位：毫秒，范围：100-10000</small>\n                  </div>\n                  \n                  <div className=\"form-group\">\n                    <label>内存限制：<span className=\"required-mark\">*</span></label>\n                    <input \n                      type=\"number\" \n                      placeholder=\"请输入内存限制（MB）\"\n                      value={problemForm.memory_limit}\n                      onChange={(e) => setProblemForm(prev => ({ ...prev, memory_limit: parseInt(e.target.value) || 128 }))}\n                      min=\"16\"\n                      max=\"512\"\n                    />\n                    <small>单位：MB，范围：16-512</small>\n                  </div>\n                </div>\n              </>\n            )}\n            \n            <div className=\"form-actions\">\n              <button \n                className=\"submit-btn\"\n                onClick={handleCreateProblem}\n                disabled={loading || !problemForm.title || !problemForm.description || \n                  (problemForm.type === 'programming' && (problemForm.testCases.length === 0 || \n                    problemForm.testCases.some(tc => !tc.output.trim()))) ||\n                  (problemForm.type === 'choice' && (problemForm.options.length < 2 || \n                    problemForm.options.some(option => !option.text) || \n                    problemForm.correct_answers.length === 0)) ||\n                  (problemForm.type === 'judge' && problemForm.correct_answers.length !== 1) ||\n                  (problemForm.type === 'short_answer' && !problemForm.answer)}\n              >\n                {loading ? (isEditing ? '更新中...' : '创建中...') : (isEditing ? '更新题目' : '创建题目')}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {activeSubTab === 'ai' && (\n        <AIProblemGenerationPage />\n      )}\n    </div>\n  );\n\n  // 课程查看标签页渲染函数（只读功能）\n  const renderCoursesTab = () => (\n    <div className=\"tab-content\">\n      <div className=\"sub-tabs\">\n        <button \n          className={`sub-tab-btn ${activeSubTab === 'list' ? 'active' : ''}`}\n          onClick={() => {\n            setActiveSubTab('list');\n            // 如果当前在课程详情页，清除课程详情状态\n            if (activeSubTab === 'detail') {\n              setEditingCourse(null);\n            }\n            // 清除添加学生上下文\n            setAddingStudentContext('');\n          }}\n        >\n          课程列表\n        </button>\n        <button \n          className={`sub-tab-btn ${activeSubTab === 'detail' ? 'active' : ''}`}\n          onClick={() => setActiveSubTab('detail')}\n          style={{ display: (editingCourse && activeSubTab === 'detail') ? 'inline-block' : 'none' }}\n        >\n          课程详情\n        </button>\n        <button \n          className={`sub-tab-btn ${activeSubTab === 'add-student-to-course' ? 'active' : ''}`}\n          onClick={() => setActiveSubTab('add-student-to-course')}\n          style={{ display: (editingCourse && activeSubTab === 'detail') ? 'inline-block' : 'none' }}\n        >\n          添加学生\n        </button>\n      </div>\n\n      {activeSubTab === 'list' && (\n        <div className=\"section-content\">\n          <div className=\"section-header\">\n            <h2>我的课程</h2>\n            <div className=\"section-info\">\n              <p>💡 点击任意课程卡片即可查看详情、管理学生和布置作业</p>\n            </div>\n          </div>\n          \n          <div className=\"courses-grid\">\n            {courses.length === 0 ? (\n              <div className=\"empty-state\">\n                <p>暂无课程，请联系管理员添加课程</p>\n              </div>\n            ) : (\n              courses.map(course => (\n                <div \n                  key={course.id} \n                  className=\"course-card\"\n                  onClick={() => handleViewCourseDetail(course.id)}\n                  style={{ cursor: 'pointer' }}\n                >\n                  <div className=\"course-header\">\n                    <h3>{course.name}</h3>\n                    <span className=\"course-status active\">进行中</span>\n                  </div>\n                  <div className=\"course-info\">\n                    <p><strong>教学班：</strong>{course.class_name}</p>\n                    <p><strong>专业：</strong>{course.major_name}</p>\n                    <p><strong>学校：</strong>{course.school_name}</p>\n                    <p><strong>学生数量：</strong>{course.student_count || 0}人</p>\n                    <p><strong>创建时间：</strong>{formatDate(course.created_at)}</p>\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n      )}\n\n      {activeSubTab === 'detail' && editingCourse && (\n        <div className=\"section-content\">\n          <div className=\"section-header\">\n            <h2>📚 课程详情：{editingCourse.name}</h2>\n            <button \n              className=\"secondary-btn\"\n              onClick={() => {\n                setActiveSubTab('list');\n                setEditingCourse(null);\n              }}\n            >\n              ← 返回课程列表\n            </button>\n          </div>\n          \n          <div className=\"course-detail\">\n            <div className=\"course-info-section\">\n              <h3>课程基本信息</h3>\n              <div className=\"info-grid\">\n                <div className=\"info-item\">\n                  <label>课程名称：</label>\n                  <span>{editingCourse.name}</span>\n                </div>\n                <div className=\"info-item\">\n                  <label>课程描述：</label>\n                  <span>{editingCourse.description}</span>\n                </div>\n                <div className=\"info-item\">\n                  <label>教学班：</label>\n                  <span>{editingCourse.class_name}</span>\n                </div>\n                <div className=\"info-item\">\n                  <label>专业：</label>\n                  <span>{editingCourse.major_name}</span>\n                </div>\n                <div className=\"info-item\">\n                  <label>学校：</label>\n                  <span>{editingCourse.school_name}</span>\n                </div>\n                <div className=\"info-item\">\n                  <label>学生数量：</label>\n                  <span>{editingCourse.student_count || 0}人</span>\n                </div>\n                <div className=\"info-item\">\n                  <label>创建时间：</label>\n                  <span>{formatDate(editingCourse.created_at)}</span>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"course-students-section\">\n              <div className=\"section-header\">\n                <h3>教学班学生</h3>\n                <button \n                  className=\"add-btn\"\n                  onClick={() => {\n                    // 设置添加学生上下文为课程详情页\n                    setAddingStudentContext('course-detail');\n                    setActiveSubTab('add-student-to-course');\n                  }}\n                >\n                  添加学生\n                </button>\n              </div>\n              <div className=\"students-table\">\n                <table>\n                  <thead>\n                    <tr>\n                      <th>学号</th>\n                      <th>姓名</th>\n                      <th>邮箱</th>\n                      <th>状态</th>\n                      <th>操作</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {(() => {\n                      // 获取当前课程的所有学生\n                      const courseStudents = [];\n                      \n                      // 1. 添加原本属于该教学班的学生\n                      const originalStudents = users.filter(user => \n                        user.class_id === editingCourse.class_id && user.role === 'student'\n                      );\n                      courseStudents.push(...originalStudents);\n                      \n                      // 2. 添加通过关联关系添加的学生\n                      const relatedStudents = studentClassRelations\n                        .filter(relation => relation.course_id === editingCourse.id)\n                        .map(relation => {\n                          // 查找学生的完整信息\n                          const studentInfo = users.find(user => user.id === relation.student_id);\n                          return {\n                            ...studentInfo,\n                            // 使用关联关系中的信息作为后备\n                            name: studentInfo ? studentInfo.name : relation.student_name,\n                            username: studentInfo ? studentInfo.username : relation.student_no,\n                            // 标记这是通过关联关系添加的学生\n                            isRelatedStudent: true,\n                            relationId: `${relation.student_id}_${relation.course_id}`\n                          };\n                        });\n                      courseStudents.push(...relatedStudents);\n                      \n                      if (courseStudents.length === 0) {\n                        return (\n                          <tr>\n                            <td colSpan=\"5\">\n                              <div className=\"empty-state\">\n                                <p>该教学班暂无学生</p>\n                              </div>\n                            </td>\n                          </tr>\n                        );\n                      }\n                      \n                      return courseStudents.map(student => (\n                        <tr key={student.id || student.relationId}>\n                          <td>{student.username}</td>\n                          <td>{student.name}</td>\n                          <td>{student.email || '-'}</td>\n                          <td>\n                            <span className={`status-badge ${student.isRelatedStudent ? 'related' : 'original'}`}>\n                              {student.isRelatedStudent ? '已添加' : '原班级'}\n                            </span>\n                          </td>\n                          <td>\n                            {student.isRelatedStudent && (\n                              <button \n                                className=\"action-btn delete\"\n                                onClick={() => handleRemoveStudentFromCourse(student.relationId)}\n                              >\n                                移除\n                              </button>\n                            )}\n                          </td>\n                        </tr>\n                      ));\n                    })()}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n\n            <div className=\"course-assignments-section\">\n              <div className=\"section-header\">\n                <h3>已布置作业</h3>\n                <button \n                  className=\"add-btn\"\n                  onClick={() => {\n                    // 自动设置当前课程ID到作业表单\n                    setAssignmentForm(prev => ({\n                      ...prev,\n                      course_id: editingCourse.id\n                    }));\n                    // 设置编辑作业上下文为课程详情页\n                    setEditingAssignmentContext('course-detail');\n                    setActiveSubTab('create-assignment');\n                  }}\n                >\n                  布置作业\n                </button>\n              </div>\n              <div className=\"assignments-table\">\n                <table>\n                  <thead>\n                    <tr>\n                      <th>作业名称</th>\n                      <th>描述</th>\n                      <th>截止时间</th>\n                      <th>状态</th>\n                      <th>操作</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {assignments.filter(assignment => assignment.course_id === editingCourse.id).map(assignment => (\n                      <tr key={assignment.id}>\n                        <td>{assignment.name}</td>\n                        <td>{assignment.description}</td>\n                        <td>{formatDate(assignment.due_date)}</td>\n                        <td>\n                          <span className={`status-badge ${assignment.is_active ? 'active' : 'inactive'}`}>\n                            {assignment.is_active ? '进行中' : '已结束'}\n                          </span>\n                        </td>\n                        <td>\n                          <button \n                            className=\"action-btn edit\"\n                            onClick={() => handleEditAssignment(assignment)}\n                          >\n                            编辑\n                          </button>\n                          <button \n                            className=\"action-btn delete\"\n                            onClick={() => handleDeleteAssignment(assignment.id)}\n                          >\n                            删除\n                          </button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n                {assignments.filter(assignment => assignment.course_id === editingCourse.id).length === 0 && (\n                  <div className=\"empty-state\">\n                    <p>该课程暂无作业</p>\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {/* 作业创建表单 */}\n            {activeSubTab === 'create-assignment' && (\n              <div className=\"course-assignment-form\">\n                <div className=\"section-header\">\n                  <h3>📝 布置作业（{editingCourse.name}）</h3>\n                  <button \n                    className=\"secondary-btn\"\n                    onClick={() => setActiveSubTab('detail')}\n                  >\n                    ← 返回课程详情\n                  </button>\n                </div>\n                \n                <div className=\"assignment-form\">\n                  <div className=\"form-row\">\n                    <div className=\"form-group\">\n                      <label>作业名称：<span className=\"required-mark\">*</span></label>\n                      <input \n                        type=\"text\" \n                        placeholder=\"请输入作业名称\"\n                        value={assignmentForm.name}\n                        onChange={(e) => setAssignmentForm(prev => ({ ...prev, name: e.target.value }))}\n                      />\n                    </div>\n                    \n                    <div className=\"form-group\">\n                      <label>课程：</label>\n                      <input \n                        type=\"text\" \n                        value={editingCourse.name}\n                        disabled\n                        className=\"disabled-input\"\n                      />\n                    </div>\n                  </div>\n                  \n                  <div className=\"form-group\">\n                    <label>作业描述：<span className=\"required-mark\">*</span></label>\n                    <textarea\n                      placeholder=\"请输入作业描述\"\n                      value={assignmentForm.description}\n                      onChange={(e) => setAssignmentForm(prev => ({ ...prev, description: e.target.value }))}\n                      rows={4}\n                    />\n                  </div>\n                  \n                  <div className=\"form-group\">\n                    <label>作业要求：<span className=\"required-mark\">*</span></label>\n                    <textarea\n                      placeholder=\"请输入作业要求\"\n                      value={assignmentForm.requirements}\n                      onChange={(e) => setAssignmentForm(prev => ({ ...prev, requirements: e.target.value }))}\n                      rows={4}\n                    />\n                  </div>\n                  \n                  <div className=\"form-row\">\n                    <div className=\"form-group\">\n                      <label>截止时间：<span className=\"required-mark\">*</span></label>\n                      <input \n                        type=\"datetime-local\" \n                        value={assignmentForm.due_date}\n                        onChange={(e) => setAssignmentForm(prev => ({ ...prev, due_date: e.target.value }))}\n                      />\n                    </div>\n                  </div>\n                  \n                  <div className=\"form-group\">\n                    <label>选择题目：</label>\n                    <div className=\"problem-selection\">\n                      {problems.map(problem => (\n                        <label key={problem.id} className=\"problem-checkbox\">\n                          <input \n                            type=\"checkbox\" \n                            value={problem.id}\n                            checked={assignmentForm.problem_ids.includes(problem.id)}\n                            onChange={(e) => {\n                              if (e.target.checked) {\n                                setAssignmentForm(prev => ({ \n                                  ...prev, \n                                  problem_ids: [...prev.problem_ids, problem.id] \n                                }));\n                              } else {\n                                setAssignmentForm(prev => ({ \n                                  ...prev, \n                                  problem_ids: prev.problem_ids.filter(id => id !== problem.id) \n                                }));\n                              }\n                            }}\n                          />\n                          <span className=\"problem-title\">{problem.title}</span>\n                          <span className={`difficulty-badge ${problem.difficulty}`}>\n                            {problem.difficulty === 'easy' ? '简单' : \n                             problem.difficulty === 'medium' ? '中等' : '困难'}\n                          </span>\n                        </label>\n                      ))}\n                    </div>\n                  </div>\n                  \n                  <div className=\"form-actions\">\n                    <button \n                      className=\"submit-btn\"\n                      onClick={handleCreateAssignment}\n                      disabled={loading || !assignmentForm.name || !assignmentForm.description || !assignmentForm.requirements || !assignmentForm.due_date || !assignmentForm.course_id}\n                    >\n                      {loading ? '创建中...' : '布置作业'}\n                    </button>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* 添加学生到课程的表单 */}\n            {activeSubTab === 'add-student-to-course' && editingCourse && (\n              <div className=\"section-content\">\n                <div className=\"section-header\">\n                  <h3>👥 添加学生到课程：{editingCourse.name}</h3>\n                  <button \n                    className=\"secondary-btn\"\n                    onClick={() => setActiveSubTab('detail')}\n                  >\n                    ← 返回课程详情\n                  </button>\n                </div>\n                \n                <div className=\"add-student-to-course-form\">\n                  <div className=\"form-help\">\n                    <p>请选择要添加到该课程的学生：</p>\n                    <p>注意：只能添加已存在的学生账号</p>\n                  </div>\n                  \n                  <div className=\"form-row\">\n                    <div className=\"form-group\">\n                      <label>学号：<span className=\"required-mark\">*</span></label>\n                      <input \n                        type=\"text\" \n                        placeholder=\"请输入学号\"\n                        value={addStudentForm.student_no}\n                        onChange={(e) => setAddStudentForm(prev => ({ ...prev, student_no: e.target.value }))}\n                      />\n                    </div>\n                    \n                    <div className=\"form-group\">\n                      <label>姓名：<span className=\"required-mark\">*</span></label>\n                      <input \n                        type=\"text\" \n                        placeholder=\"请输入学生姓名\"\n                        value={addStudentForm.name}\n                        onChange={(e) => setAddStudentForm(prev => ({ ...prev, name: e.target.value }))}\n                      />\n                    </div>\n                  </div>\n                  \n                  <div className=\"form-actions\">\n                    <button \n                      className=\"submit-btn\"\n                      onClick={handleAddStudentToCourse}\n                      disabled={loading || !addStudentForm.student_no || !addStudentForm.name}\n                    >\n                      {loading ? '添加中...' : '添加学生到课程'}\n                    </button>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n\n  // 学生相关处理函数\n  const handleAddStudent = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      setSuccess('');\n      \n      await registerStudent(addStudentForm);\n      setSuccess('学生账号创建成功！');\n      \n      // 重置表单\n      setAddStudentForm({\n        student_no: '',\n        name: '',\n        password: '',\n        email: '',\n        phone: '',\n        school_id: '',\n        department_id: '',\n        major_id: '',\n        class_id: ''\n      });\n      \n      // 刷新用户列表\n      const usersData = await getUsers(1, 50, 'student');\n      setUsers(usersData.users);\n      \n      // 刷新课程列表（因为学生数量可能发生变化）\n      try {\n        const coursesData = await getTeacherCourses();\n        if (coursesData && coursesData.courses) {\n          setCourses(coursesData.courses);\n        }\n      } catch (error) {\n        console.warn('刷新课程列表失败:', error);\n      }\n      \n      // 切换到学生列表\n      setActiveSubTab('list');\n      \n    } catch (error) {\n      setError(error.response?.data?.error || '创建学生账号失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleEditStudentClick = (user) => {\n    setEditingUser(user);\n    setEditForm({\n      email: user.email || '',\n      phone: user.phone || '',\n      school_id: user.school_id || '',\n      major_id: user.major_id || '',\n      class_id: user.class_id || '',\n      new_password: ''\n    });\n    setError('');\n    setSuccess('');\n  };\n\n  const handleSaveStudent = async () => {\n    if (!editingUser) return;\n    try {\n      setLoading(true);\n      setError('');\n      setSuccess('');\n      await updateUser(editingUser.id, editForm);\n      setSuccess('学生信息已更新');\n      // 刷新列表\n      const usersData = await getUsers(1, 50, 'student');\n      setUsers(usersData.users);\n      \n      // 刷新课程列表（因为学生数量可能发生变化）\n      try {\n        const coursesData = await getTeacherCourses();\n        if (coursesData && coursesData.courses) {\n          setCourses(coursesData.courses);\n        }\n      } catch (error) {\n        console.warn('刷新课程列表失败:', error);\n      }\n      \n      setEditingUser(null);\n    } catch (error) {\n      setError(error.response?.data?.error || '更新学生信息失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCancelEditStudent = () => {\n    setEditingUser(null);\n    setEditForm({ email: '', phone: '', school_id: '', major_id: '', class_id: '', new_password: '' });\n  };\n\n  const handleDeleteStudent = async (userId) => {\n    if (!window.confirm('确定要删除该学生吗？此操作不可恢复。')) return;\n    try {\n      setLoading(true);\n      setError('');\n      setSuccess('');\n      await deleteUser(userId);\n      setSuccess('学生已删除');\n      const usersData = await getUsers(1, 50, 'student');\n      setUsers(usersData.users);\n      \n      // 刷新课程列表（因为学生数量可能发生变化）\n      try {\n        const coursesData = await getTeacherCourses();\n        if (coursesData && coursesData.courses) {\n          setCourses(coursesData.courses);\n        }\n      } catch (error) {\n        console.warn('刷新课程列表失败:', error);\n      }\n      \n    } catch (error) {\n      setError(error.response?.data?.error || '删除学生失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAddStudentSchoolChange = async (schoolId) => {\n    setAddStudentForm(prev => ({ \n      ...prev, \n      school_id: schoolId, \n      department_id: '', \n      major_id: '', \n      class_id: '' \n    }));\n    \n    // 不再重置全局的departments、majors和classes数组\n    // 这些数组应该保持完整，用于学生列表显示\n  };\n\n  const handleAddStudentDepartmentChange = async (departmentId) => {\n    setAddStudentForm(prev => ({ \n      ...prev, \n      department_id: departmentId, \n      major_id: '', \n      class_id: '' \n    }));\n    \n    // 不再重置全局的majors和classes数组\n    // 这些数组应该保持完整，用于学生列表显示\n  };\n\n  const handleAddStudentMajorChange = async (majorId) => {\n    setAddStudentForm(prev => ({ \n      ...prev, \n      major_id: majorId, \n      class_id: '' \n    }));\n    \n    // 不再重置全局的classes数组\n    // 这个数组应该保持完整，用于学生列表显示\n  };\n\n  // 选择题选项管理函数\n  const addChoiceOption = () => {\n    setProblemForm(prev => {\n      // 计算下一个可用的字母ID\n      const existingIds = prev.options.map(option => option.id);\n      let nextId = 'A';\n      for (let i = 0; i < 26; i++) {\n        const candidateId = String.fromCharCode(65 + i); // A, B, C, D...\n        if (!existingIds.includes(candidateId)) {\n          nextId = candidateId;\n          break;\n        }\n      }\n      \n      return {\n        ...prev,\n        options: [...prev.options, { id: nextId, text: '', is_correct: false }]\n      };\n    });\n  };\n\n  const removeChoiceOption = (optionId) => {\n    setProblemForm(prev => ({\n      ...prev,\n      options: prev.options.filter(option => option.id !== optionId)\n    }));\n  };\n\n  const updateChoiceOption = (optionId, field, value) => {\n    setProblemForm(prev => ({\n      ...prev,\n      options: prev.options.map(option => \n        option.id === optionId ? { ...option, [field]: value } : option\n      )\n    }));\n  };\n\n  const toggleChoiceOptionCorrect = (optionId) => {\n    setProblemForm(prev => {\n      let updatedOptions;\n      \n      if (prev.type === 'judge') {\n        // 判断题：单选模式，点击一个选项时取消其他选项\n        updatedOptions = prev.options.map(option => ({\n          ...option,\n          is_correct: option.id === optionId ? !option.is_correct : false\n        }));\n      } else {\n        // 选择题：多选模式，可以同时选择多个选项\n        updatedOptions = prev.options.map(option => \n          option.id === optionId ? { ...option, is_correct: !option.is_correct } : option\n        );\n      }\n      \n      // 更新正确答案数组 - 统一使用选项ID\n      const correctAnswers = updatedOptions\n        .filter(option => option.is_correct)\n        .map(option => option.id);\n      \n      return {\n        ...prev,\n        options: updatedOptions,\n        correct_answers: correctAnswers\n      };\n    });\n  };\n\n  const handleProblemTypeChange = (type) => {\n    setProblemForm(prev => {\n      if (type === 'choice') {\n        // 切换到选择题时，初始化至少两个选项\n        return {\n          ...prev,\n          type,\n          options: [\n            { id: 'A', text: '', is_correct: false },\n            { id: 'B', text: '', is_correct: false }\n          ],\n          correct_answers: [],\n          is_multiple_choice: false\n        };\n      } else if (type === 'judge') {\n        // 切换到判断题时，初始化两个固定选项\n        return {\n          ...prev,\n          type,\n          options: [\n            { id: 'A', text: '正确', is_correct: false },\n            { id: 'B', text: '错误', is_correct: false }\n          ],\n          correct_answers: [],\n          is_multiple_choice: false\n        };\n      } else if (type === 'short_answer') {\n        // 切换到简答题时，清空选项相关字段，添加答案字段\n        return {\n          ...prev,\n          type,\n          options: [],\n          correct_answers: [],\n          is_multiple_choice: false,\n          answer: '' // 简答题答案\n        };\n      } else {\n        // 切换到其他题型时，清空选择题相关字段\n        return {\n          ...prev,\n          type,\n          options: [],\n          correct_answers: [],\n          is_multiple_choice: false\n        };\n      }\n    });\n  };\n\n  // 获取当前选中学校对应的专业列表（用于选择器显示）\n  const getCurrentSchoolMajors = () => {\n    if (!selectedSchool) return [];\n    return majors.filter(major => major.school_id === selectedSchool);\n  };\n\n  // 获取当前选中专业对应的班级列表（用于选择器显示）\n  const getCurrentMajorClasses = () => {\n    if (!selectedMajor) return [];\n    \n    const majorId = selectedMajor;\n    const filteredClasses = classes.filter(classItem => {\n      const classMajorId = classItem.major_id;\n      const isMatch = classMajorId === majorId || classMajorId === parseInt(majorId) || parseInt(classMajorId) === majorId;\n      return isMatch;\n    });\n    \n    return filteredClasses;\n  };\n\n  // 获取添加学生表单中选中学校对应的专业列表\n  const getAddStudentSchoolMajors = () => {\n    if (!addStudentForm.school_id) return [];\n    \n    const schoolId = addStudentForm.school_id;\n    const filteredMajors = majors.filter(major => {\n      const majorSchoolId = major.school_id;\n      const isMatch = majorSchoolId === schoolId || majorSchoolId === parseInt(schoolId) || parseInt(majorSchoolId) === schoolId;\n      return isMatch;\n    });\n    \n    return filteredMajors;\n  };\n\n  // 获取添加学生表单中选中学校对应的院部列表\n  const getAddStudentSchoolDepartments = () => {\n    if (!addStudentForm.school_id) return [];\n    \n    const schoolId = addStudentForm.school_id;\n    const filteredDepartments = departments.filter(department => {\n      const deptSchoolId = department.school_id;\n      const isMatch = deptSchoolId === schoolId || deptSchoolId === parseInt(schoolId) || parseInt(deptSchoolId) === schoolId;\n      return isMatch;\n    });\n    \n    return filteredDepartments;\n  };\n\n  // 获取添加学生表单中选中院部对应的专业列表\n  const getAddStudentDepartmentMajors = () => {\n    if (!addStudentForm.department_id) return [];\n    \n    const departmentId = addStudentForm.department_id;\n    const filteredMajors = majors.filter(major => {\n      const majorDeptId = major.department_id;\n      const isMatch = majorDeptId === departmentId || majorDeptId === parseInt(departmentId) || parseInt(majorDeptId) === departmentId;\n      return isMatch;\n    });\n    \n    return filteredMajors;\n  };\n\n  // 获取添加学生表单中选中专业对应的班级列表\n  const getAddStudentMajorClasses = () => {\n    if (!addStudentForm.major_id) return [];\n    \n    const majorId = addStudentForm.major_id;\n    const filteredClasses = classes.filter(classItem => {\n      const classMajorId = classItem.major_id;\n      const isMatch = classMajorId === majorId || classMajorId === parseInt(majorId) || parseInt(classMajorId) === majorId;\n      return isMatch;\n    });\n    \n    return filteredClasses;\n  };\n\n  // 获取编辑学生表单中选中学校对应的专业列表\n  const getEditStudentSchoolMajors = () => {\n    if (!editForm.school_id) return [];\n    \n    const schoolId = editForm.school_id;\n    const filteredMajors = majors.filter(major => {\n      const majorSchoolId = major.school_id;\n      const isMatch = majorSchoolId === schoolId || majorSchoolId === parseInt(schoolId) || parseInt(majorSchoolId) === schoolId;\n      return isMatch;\n    });\n    \n    return filteredMajors;\n  };\n\n  // 获取编辑学生表单中选中专业对应的班级列表\n  const getEditStudentMajorClasses = () => {\n    if (!editForm.major_id) return [];\n    \n    const majorId = editForm.major_id;\n    const filteredClasses = classes.filter(classItem => {\n      const classMajorId = classItem.major_id;\n      const isMatch = classMajorId === majorId || classMajorId === parseInt(majorId) || parseInt(classMajorId) === majorId;\n      return isMatch;\n    });\n    \n    return filteredClasses;\n  };\n\n  // 获取当前选中学校对应的院部列表\n  const getCurrentSchoolDepartments = () => {\n    if (!selectedSchool) return [];\n    \n    const schoolId = selectedSchool;\n    const filteredDepartments = departments.filter(department => {\n      const deptSchoolId = department.school_id;\n      const isMatch = deptSchoolId === schoolId || deptSchoolId === parseInt(schoolId) || parseInt(deptSchoolId) === schoolId;\n      return isMatch;\n    });\n    \n    return filteredDepartments;\n  };\n\n  // 获取当前选中院部对应的专业列表\n  const getCurrentDepartmentMajors = () => {\n    if (!selectedDepartment) return [];\n    \n    const departmentId = selectedDepartment;\n    const filteredMajors = majors.filter(major => {\n      const majorDeptId = major.department_id;\n      const isMatch = majorDeptId === departmentId || majorDeptId === parseInt(departmentId) || parseInt(majorDeptId) === departmentId;\n      return isMatch;\n    });\n    \n    return filteredMajors;\n  };\n\n\n\n\n\n  return (\n    <div className=\"teacher-dashboard\">\n      <div className=\"dashboard-header\">\n        <h1>教师管理控制台</h1>\n      </div>\n      \n      <div className=\"dashboard-tabs\">\n        <button \n          className={`tab-btn ${activeTab === 'students' ? 'active' : ''}`}\n          onClick={() => {\n            setActiveTab('students');\n            setActiveSubTab('list');\n          }}\n        >\n          学生管理\n        </button>\n        <button \n          className={`tab-btn ${activeTab === 'problems' ? 'active' : ''}`}\n          onClick={() => {\n            setActiveTab('problems');\n            setActiveSubTab('list');\n          }}\n        >\n          题目管理\n        </button>\n        <button \n          className={`tab-btn ${activeTab === 'courses' ? 'active' : ''}`}\n          onClick={() => {\n            setActiveTab('courses');\n            setActiveSubTab('list');\n            // 清除课程详情状态\n            setEditingCourse(null);\n            setEditingAssignmentContext('');\n            setAddingStudentContext('');\n          }}\n        >\n          我的课程\n        </button>\n      </div>\n      \n      {error && <div className=\"error-message\">{error}</div>}\n      {success && <div className=\"success-message\">{success}</div>}\n      \n      {activeTab === 'students' && renderStudentsTab()}\n      {activeTab === 'problems' && renderProblemsTab()}\n      {activeTab === 'courses' && renderCoursesTab()}\n      \n      {/* 独立的布置作业表单面板 */}\n      {activeTab === 'courses' && activeSubTab === 'create-assignment' && editingCourse && (\n        <div className=\"tab-content\">\n          <div className=\"section-header\">\n            <h3>📝 布置作业（{editingCourse.name}）</h3>\n            <button \n              className=\"secondary-btn\"\n              onClick={() => setActiveSubTab('detail')}\n            >\n              ← 返回课程详情\n            </button>\n          </div>\n          \n          <div className=\"assignment-form\">\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>作业名称：<span className=\"required-mark\">*</span></label>\n                <input \n                  type=\"text\" \n                  placeholder=\"请输入作业名称\"\n                  value={assignmentForm.name}\n                  onChange={(e) => setAssignmentForm(prev => ({ ...prev, name: e.target.value }))}\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label>课程：</label>\n                <input \n                  type=\"text\" \n                  value={editingCourse.name}\n                  disabled\n                  className=\"disabled-input\"\n                />\n              </div>\n            </div>\n            \n            <div className=\"form-group\">\n              <label>作业描述：<span className=\"required-mark\">*</span></label>\n              <textarea\n                placeholder=\"请输入作业描述\"\n                value={assignmentForm.description}\n                onChange={(e) => setAssignmentForm(prev => ({ ...prev, description: e.target.value }))}\n                rows={4}\n              />\n            </div>\n            \n            <div className=\"form-group\">\n              <label>作业要求：<span className=\"required-mark\">*</span></label>\n              <textarea\n                placeholder=\"请输入作业要求\"\n                value={assignmentForm.requirements}\n                onChange={(e) => setAssignmentForm(prev => ({ ...prev, requirements: e.target.value }))}\n                rows={4}\n              />\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>截止时间：<span className=\"required-mark\">*</span></label>\n                <input \n                  type=\"datetime-local\" \n                  value={assignmentForm.due_date}\n                  onChange={(e) => setAssignmentForm(prev => ({ ...prev, due_date: e.target.value }))}\n                />\n              </div>\n            </div>\n            \n            <div className=\"form-group\">\n              <label>选择题目：</label>\n              <div className=\"problem-selection\">\n                {problems.map(problem => (\n                  <label key={problem.id} className=\"problem-checkbox\">\n                    <input \n                      type=\"checkbox\" \n                      value={problem.id}\n                      checked={assignmentForm.problem_ids.includes(problem.id)}\n                      onChange={(e) => {\n                        if (e.target.checked) {\n                          setAssignmentForm(prev => ({ \n                            ...prev, \n                            problem_ids: [...prev.problem_ids, problem.id] \n                          }));\n                        } else {\n                          setAssignmentForm(prev => ({ \n                            ...prev, \n                            problem_ids: prev.problem_ids.filter(id => id !== problem.id) \n                          }));\n                        }\n                      }}\n                    />\n                    <span className=\"problem-title\">{problem.title}</span>\n                    <span className={`difficulty-badge ${problem.difficulty}`}>\n                      {problem.difficulty === 'easy' ? '简单' : \n                       problem.difficulty === 'medium' ? '中等' : '困难'}\n                    </span>\n                  </label>\n                ))}\n              </div>\n            </div>\n            \n            <div className=\"form-actions\">\n              <button \n                className=\"submit-btn\"\n                onClick={handleCreateAssignment}\n                disabled={loading || !assignmentForm.name || !assignmentForm.description || !assignmentForm.requirements || !assignmentForm.due_date || !assignmentForm.course_id}\n              >\n                {loading ? '创建中...' : '布置作业'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 独立的添加学生到课程表单面板 */}\n      {activeTab === 'courses' && activeSubTab === 'add-student-to-course' && editingCourse && (\n        <div className=\"tab-content\">\n          <div className=\"section-header\">\n            <h3>👥 添加学生到课程：{editingCourse.name}</h3>\n            <button \n              className=\"secondary-btn\"\n              onClick={() => setActiveSubTab('detail')}\n            >\n              ← 返回课程详情\n            </button>\n          </div>\n          \n          <div className=\"add-student-to-course-form\">\n            <div className=\"form-help\">\n              <p>请选择要添加到该课程的学生：</p>\n              <p>注意：只能添加已存在的学生账号</p>\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>学号：<span className=\"required-mark\">*</span></label>\n                <input \n                  type=\"text\" \n                  placeholder=\"请输入学号\"\n                  value={addStudentForm.student_no}\n                  onChange={(e) => setAddStudentForm(prev => ({ ...prev, student_no: e.target.value }))}\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label>姓名：<span className=\"required-mark\">*</span></label>\n                <input \n                  type=\"text\" \n                  placeholder=\"请输入学生姓名\"\n                  value={addStudentForm.name}\n                  onChange={(e) => setAddStudentForm(prev => ({ ...prev, name: e.target.value }))}\n                />\n              </div>\n            </div>\n            \n            <div className=\"form-actions\">\n              <button \n                className=\"submit-btn\"\n                onClick={handleAddStudentToCourse}\n                disabled={loading || !addStudentForm.student_no || !addStudentForm.name}\n              >\n                {loading ? '添加中...' : '添加学生到课程'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* 编辑学生表单 - 全局显示 */}\n      {editingUser && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal\">\n            <div className=\"modal-header\">\n              <h3>编辑学生：{editingUser.name}（学号{editingUser.username}）</h3>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"form-row\">\n                <div className=\"form-group\">\n                  <label>邮箱：</label>\n                  <input type=\"email\" value={editForm.email} onChange={(e) => setEditForm(prev => ({ ...prev, email: e.target.value }))} />\n                </div>\n                <div className=\"form-group\">\n                  <label>手机号：</label>\n                  <input type=\"tel\" value={editForm.phone} onChange={(e) => setEditForm(prev => ({ ...prev, phone: e.target.value }))} />\n                </div>\n              </div>\n              <div className=\"form-row\">\n                <div className=\"form-group\">\n                  <label>学校：</label>\n                  <select value={editForm.school_id} onChange={(e) => {\n                    const val = e.target.value;\n                    setEditForm(prev => ({ ...prev, school_id: val, major_id: '', class_id: '' }));\n                  }}>\n                    <option value=\"\">请选择学校</option>\n                    {schools.map(s => <option key={s.id} value={s.id}>{s.name}</option>)}\n                  </select>\n                </div>\n                <div className=\"form-group\">\n                  <label>专业：</label>\n                  <select value={editForm.major_id} onChange={(e) => {\n                    const val = e.target.value;\n                    setEditForm(prev => ({ ...prev, major_id: val, class_id: '' }));\n                  }} disabled={!editForm.school_id}>\n                    <option value=\"\">请选择专业</option>\n                    {getEditStudentSchoolMajors().map(m => <option key={m.id} value={m.id}>{m.name}</option>)}\n                  </select>\n                </div>\n              </div>\n              <div className=\"form-row\">\n                <div className=\"form-group\">\n                  <label>班级：</label>\n                  <select value={editForm.class_id} onChange={(e) => setEditForm(prev => ({ ...prev, class_id: e.target.value }))} disabled={!editForm.major_id}>\n                    <option value=\"\">请选择班级</option>\n                    {getEditStudentMajorClasses().map(c => <option key={c.id} value={c.id}>{c.name}</option>)}\n                  </select>\n                </div>\n                <div className=\"form-group\">\n                  <label>重置密码（可选）：</label>\n                  <input type=\"password\" value={editForm.new_password} onChange={(e) => setEditForm(prev => ({ ...prev, new_password: e.target.value }))} />\n                </div>\n              </div>\n            </div>\n            <div className=\"modal-footer\">\n              <button className=\"secondary-btn\" onClick={handleCancelEditStudent}>取消</button>\n              <button className=\"submit-btn\" onClick={handleSaveStudent} disabled={loading}>{loading ? '保存中...' : '保存'}</button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TeacherDashboardPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
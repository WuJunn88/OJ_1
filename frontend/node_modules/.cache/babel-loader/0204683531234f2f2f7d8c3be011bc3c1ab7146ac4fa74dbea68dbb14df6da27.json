{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import'./AssignmentWhitelistManager.css';import{getAssignmentOverdueUsers,addUserToOverdueWhitelist,removeUserFromOverdueWhitelist,getCourseStudents}from'../services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AssignmentWhitelistManager=_ref=>{let{assignment,onUpdate}=_ref;const[overdueUsers,setOverdueUsers]=useState([]);const[isLoading,setIsLoading]=useState(false);const[selectedUser,setSelectedUser]=useState('');const[message,setMessage]=useState('');const[courseStudents,setCourseStudents]=useState([]);// 加载逾期用户白名单\nconst loadOverdueUsers=useCallback(async()=>{try{setIsLoading(true);const response=await getAssignmentOverdueUsers(assignment.id);console.log('loadOverdueUsers response:',response);console.log('overdue_users:',response.overdue_users);setOverdueUsers(response.overdue_users||[]);}catch(error){console.error('加载白名单失败:',error);setMessage('加载白名单失败');}finally{setIsLoading(false);}},[assignment.id]);// 加载课程学生列表\nconst loadCourseStudents=useCallback(async()=>{try{// 检查作业是否有课程ID\nif(!assignment.course_id){console.error('作业缺少课程ID，无法获取学生列表');setMessage('作业缺少课程信息，无法加载学生列表');return;}// 使用真实API获取课程学生列表\nconst studentsData=await getCourseStudents(assignment.course_id);if(studentsData&&Array.isArray(studentsData)){// 统一处理学生数据字段名\nconst normalizedStudents=studentsData.map(student=>({id:student.id||student.student_id,name:student.name||student.student_name||'未知姓名',username:student.username||student.student_no||'未知学号'}));setCourseStudents(normalizedStudents);console.log(\"\\u6210\\u529F\\u52A0\\u8F7D\\u8BFE\\u7A0B \".concat(assignment.course_id,\" \\u7684\\u5B66\\u751F\\u5217\\u8868\\uFF0C\\u5171 \").concat(normalizedStudents.length,\" \\u4EBA\"));console.log('学生数据示例:',normalizedStudents[0]);}else{console.error('获取课程学生数据格式错误:',studentsData);setMessage('获取课程学生数据格式错误');setCourseStudents([]);}}catch(error){console.error('加载课程学生失败:',error);setMessage('加载课程学生失败: '+(error.message||'未知错误'));setCourseStudents([]);}},[assignment.course_id]);// 添加用户到白名单\nconst addUserToWhitelist=async()=>{if(!selectedUser){setMessage('请选择要添加的学生');return;}try{setIsLoading(true);const response=await addUserToOverdueWhitelist(assignment.id,parseInt(selectedUser));// 直接使用返回的完整用户信息更新状态\nconsole.log('addUserToWhitelist response:',response);if(response&&response.overdue_users){console.log('Setting overdueUsers to:',response.overdue_users);setOverdueUsers(response.overdue_users);}setSelectedUser('');setMessage('学生已添加到白名单');// 通知父组件更新\nif(onUpdate){onUpdate();}}catch(error){console.error('添加学生失败:',error);setMessage(error.message||'添加学生失败');}finally{setIsLoading(false);}};// 从白名单移除用户\nconst removeUserFromWhitelist=async userId=>{try{setIsLoading(true);const response=await removeUserFromOverdueWhitelist(assignment.id,userId);// 直接使用返回的完整用户信息更新状态\nconsole.log('removeUserFromWhitelist response:',response);if(response&&response.overdue_users){console.log('Setting overdueUsers to:',response.overdue_users);setOverdueUsers(response.overdue_users);}setMessage('学生已从白名单中移除');// 通知父组件更新\nif(onUpdate){onUpdate();}}catch(error){console.error('移除学生失败:',error);setMessage(error.message||'移除学生失败');}finally{setIsLoading(false);}};// 组件挂载时加载数据\nuseEffect(()=>{if(assignment.allow_overdue_submission){loadOverdueUsers();loadCourseStudents();}},[assignment.id,assignment.course_id,assignment.allow_overdue_submission,loadOverdueUsers,loadCourseStudents]);// 如果作业不允许补交，不显示组件\nif(!assignment.allow_overdue_submission){return null;}return/*#__PURE__*/_jsxs(\"div\",{className:\"assignment-whitelist-manager\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"whitelist-header\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"\\uD83D\\uDC65 \\u8865\\u4EA4\\u767D\\u540D\\u5355\\u7BA1\\u7406\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"whitelist-count\",children:[\"(\",overdueUsers.length,\"\\u4EBA)\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"whitelist-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"add-student-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"add-student-form\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"student-selector-info\",children:/*#__PURE__*/_jsxs(\"small\",{children:[\"\\u8BFE\\u7A0B\\u5B66\\u751F\\u603B\\u6570: \",courseStudents.length,\" | \\u5DF2\\u5728\\u767D\\u540D\\u5355: \",overdueUsers.length]})}),/*#__PURE__*/_jsxs(\"select\",{value:selectedUser,onChange:e=>setSelectedUser(e.target.value),disabled:isLoading,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\u9009\\u62E9\\u5B66\\u751F...\"}),courseStudents.filter(student=>!overdueUsers.some(u=>u.id===student.id)).map(student=>/*#__PURE__*/_jsxs(\"option\",{value:student.id,children:[student.name,\" (\",student.username,\")\"]},student.id))]}),/*#__PURE__*/_jsx(\"button\",{onClick:addUserToWhitelist,disabled:!selectedUser||isLoading,className:\"add-student-btn\",children:isLoading?'添加中...':'添加到白名单'})]}),courseStudents.length===0&&/*#__PURE__*/_jsx(\"div\",{className:\"no-students-warning\",children:/*#__PURE__*/_jsx(\"small\",{children:\"\\u26A0\\uFE0F \\u672A\\u627E\\u5230\\u8BFE\\u7A0B\\u5B66\\u751F\\uFF0C\\u8BF7\\u68C0\\u67E5\\u4F5C\\u4E1A\\u662F\\u5426\\u5173\\u8054\\u4E86\\u6B63\\u786E\\u7684\\u8BFE\\u7A0B\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"whitelist-students\",children:[/*#__PURE__*/_jsxs(\"div\",{style:{padding:'10px',background:'#f0f0f0',margin:'10px 0',fontSize:'12px'},children:[\"\\u8C03\\u8BD5\\u4FE1\\u606F: overdueUsers = \",JSON.stringify(overdueUsers)]}),isLoading?/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"\\u52A0\\u8F7D\\u4E2D...\"}):overdueUsers.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"student-list\",children:overdueUsers.map(user=>/*#__PURE__*/_jsxs(\"div\",{className:\"student-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"student-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"student-name\",children:user.name}),/*#__PURE__*/_jsxs(\"span\",{className:\"student-username\",children:[\"(\",user.username,\")\"]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"remove-student-btn\",onClick:()=>removeUserFromWhitelist(user.id),disabled:isLoading,title:\"\\u4ECE\\u767D\\u540D\\u5355\\u4E2D\\u79FB\\u9664\",children:\"\\u2715\"})]},user.id))}):/*#__PURE__*/_jsxs(\"div\",{className:\"empty-whitelist\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\u6682\\u65E0\\u767D\\u540D\\u5355\\u5B66\\u751F\"}),/*#__PURE__*/_jsx(\"small\",{children:\"\\u6DFB\\u52A0\\u5B66\\u751F\\u5230\\u767D\\u540D\\u5355\\u540E\\uFF0C\\u4ED6\\u4EEC\\u5C31\\u53EF\\u4EE5\\u5728\\u622A\\u6B62\\u65F6\\u95F4\\u540E\\u8865\\u4EA4\\u4F5C\\u4E1A\"})]})]}),message&&/*#__PURE__*/_jsx(\"div\",{className:\"message \".concat(message.includes('失败')?'error':'success'),children:message}),/*#__PURE__*/_jsxs(\"div\",{className:\"whitelist-info\",children:[/*#__PURE__*/_jsx(\"h6\",{children:\"\\uD83D\\uDCA1 \\u767D\\u540D\\u5355\\u8BF4\\u660E\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"\\u53EA\\u6709\\u767D\\u540D\\u5355\\u4E2D\\u7684\\u5B66\\u751F\\u53EF\\u4EE5\\u5728\\u622A\\u6B62\\u65F6\\u95F4\\u540E\\u8865\\u4EA4\\u4F5C\\u4E1A\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u8865\\u4EA4\\u622A\\u6B62\\u65F6\\u95F4\\u540E\\uFF0C\\u7CFB\\u7EDF\\u5C06\\u62D2\\u7EDD\\u6240\\u6709\\u8865\\u4EA4\\u8BF7\\u6C42\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u53EF\\u4EE5\\u968F\\u65F6\\u6DFB\\u52A0\\u6216\\u79FB\\u9664\\u767D\\u540D\\u5355\\u5B66\\u751F\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u5EFA\\u8BAE\\u53EA\\u5C06\\u786E\\u5B9E\\u9700\\u8981\\u8865\\u4EA4\\u7684\\u5B66\\u751F\\u6DFB\\u52A0\\u5230\\u767D\\u540D\\u5355\"})]})]})]})]});};export default AssignmentWhitelistManager;","map":{"version":3,"names":["React","useState","useEffect","useCallback","getAssignmentOverdueUsers","addUserToOverdueWhitelist","removeUserFromOverdueWhitelist","getCourseStudents","jsx","_jsx","jsxs","_jsxs","AssignmentWhitelistManager","_ref","assignment","onUpdate","overdueUsers","setOverdueUsers","isLoading","setIsLoading","selectedUser","setSelectedUser","message","setMessage","courseStudents","setCourseStudents","loadOverdueUsers","response","id","console","log","overdue_users","error","loadCourseStudents","course_id","studentsData","Array","isArray","normalizedStudents","map","student","student_id","name","student_name","username","student_no","concat","length","addUserToWhitelist","parseInt","removeUserFromWhitelist","userId","allow_overdue_submission","className","children","value","onChange","e","target","disabled","filter","some","u","onClick","style","padding","background","margin","fontSize","JSON","stringify","user","title","includes"],"sources":["/Volumes/坞城/OJ_1/frontend/src/components/AssignmentWhitelistManager.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport './AssignmentWhitelistManager.css';\nimport { \n  getAssignmentOverdueUsers, \n  addUserToOverdueWhitelist, \n  removeUserFromOverdueWhitelist,\n  getCourseStudents\n} from '../services/api';\n\nconst AssignmentWhitelistManager = ({ assignment, onUpdate }) => {\n  const [overdueUsers, setOverdueUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedUser, setSelectedUser] = useState('');\n  const [message, setMessage] = useState('');\n  const [courseStudents, setCourseStudents] = useState([]);\n\n  // 加载逾期用户白名单\n  const loadOverdueUsers = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      const response = await getAssignmentOverdueUsers(assignment.id);\n      console.log('loadOverdueUsers response:', response);\n      console.log('overdue_users:', response.overdue_users);\n      setOverdueUsers(response.overdue_users || []);\n    } catch (error) {\n      console.error('加载白名单失败:', error);\n      setMessage('加载白名单失败');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [assignment.id]);\n\n  // 加载课程学生列表\n  const loadCourseStudents = useCallback(async () => {\n    try {\n      // 检查作业是否有课程ID\n      if (!assignment.course_id) {\n        console.error('作业缺少课程ID，无法获取学生列表');\n        setMessage('作业缺少课程信息，无法加载学生列表');\n        return;\n      }\n\n      // 使用真实API获取课程学生列表\n      const studentsData = await getCourseStudents(assignment.course_id);\n      if (studentsData && Array.isArray(studentsData)) {\n        // 统一处理学生数据字段名\n        const normalizedStudents = studentsData.map(student => ({\n          id: student.id || student.student_id,\n          name: student.name || student.student_name || '未知姓名',\n          username: student.username || student.student_no || '未知学号'\n        }));\n        \n        setCourseStudents(normalizedStudents);\n        console.log(`成功加载课程 ${assignment.course_id} 的学生列表，共 ${normalizedStudents.length} 人`);\n        console.log('学生数据示例:', normalizedStudents[0]);\n      } else {\n        console.error('获取课程学生数据格式错误:', studentsData);\n        setMessage('获取课程学生数据格式错误');\n        setCourseStudents([]);\n      }\n    } catch (error) {\n      console.error('加载课程学生失败:', error);\n      setMessage('加载课程学生失败: ' + (error.message || '未知错误'));\n      setCourseStudents([]);\n    }\n  }, [assignment.course_id]);\n\n  // 添加用户到白名单\n  const addUserToWhitelist = async () => {\n    if (!selectedUser) {\n      setMessage('请选择要添加的学生');\n      return;\n    }\n\n    try {\n      setIsLoading(true);\n      const response = await addUserToOverdueWhitelist(assignment.id, parseInt(selectedUser));\n      \n      // 直接使用返回的完整用户信息更新状态\n      console.log('addUserToWhitelist response:', response);\n      if (response && response.overdue_users) {\n        console.log('Setting overdueUsers to:', response.overdue_users);\n        setOverdueUsers(response.overdue_users);\n      }\n      setSelectedUser('');\n      setMessage('学生已添加到白名单');\n      \n      // 通知父组件更新\n      if (onUpdate) {\n        onUpdate();\n      }\n    } catch (error) {\n      console.error('添加学生失败:', error);\n      setMessage(error.message || '添加学生失败');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // 从白名单移除用户\n  const removeUserFromWhitelist = async (userId) => {\n    try {\n      setIsLoading(true);\n      const response = await removeUserFromOverdueWhitelist(assignment.id, userId);\n      \n      // 直接使用返回的完整用户信息更新状态\n      console.log('removeUserFromWhitelist response:', response);\n      if (response && response.overdue_users) {\n        console.log('Setting overdueUsers to:', response.overdue_users);\n        setOverdueUsers(response.overdue_users);\n      }\n      setMessage('学生已从白名单中移除');\n      \n      // 通知父组件更新\n      if (onUpdate) {\n        onUpdate();\n      }\n    } catch (error) {\n      console.error('移除学生失败:', error);\n      setMessage(error.message || '移除学生失败');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // 组件挂载时加载数据\n  useEffect(() => {\n    if (assignment.allow_overdue_submission) {\n      loadOverdueUsers();\n      loadCourseStudents();\n    }\n  }, [assignment.id, assignment.course_id, assignment.allow_overdue_submission, loadOverdueUsers, loadCourseStudents]);\n\n  // 如果作业不允许补交，不显示组件\n  if (!assignment.allow_overdue_submission) {\n    return null;\n  }\n\n  return (\n    <div className=\"assignment-whitelist-manager\">\n      <div className=\"whitelist-header\">\n        <h5>👥 补交白名单管理</h5>\n        <span className=\"whitelist-count\">({overdueUsers.length}人)</span>\n      </div>\n\n      <div className=\"whitelist-content\">\n        {/* 添加学生到白名单 */}\n        <div className=\"add-student-section\">\n          <div className=\"add-student-form\">\n            <div className=\"student-selector-info\">\n              <small>课程学生总数: {courseStudents.length} | 已在白名单: {overdueUsers.length}</small>\n            </div>\n            <select\n              value={selectedUser}\n              onChange={(e) => setSelectedUser(e.target.value)}\n              disabled={isLoading}\n            >\n              <option value=\"\">选择学生...</option>\n              {courseStudents\n                .filter(student => !overdueUsers.some(u => u.id === student.id))\n                .map(student => (\n                  <option key={student.id} value={student.id}>\n                    {student.name} ({student.username})\n                  </option>\n                ))}\n            </select>\n            <button\n              onClick={addUserToWhitelist}\n              disabled={!selectedUser || isLoading}\n              className=\"add-student-btn\"\n            >\n              {isLoading ? '添加中...' : '添加到白名单'}\n            </button>\n          </div>\n          {courseStudents.length === 0 && (\n            <div className=\"no-students-warning\">\n              <small>⚠️ 未找到课程学生，请检查作业是否关联了正确的课程</small>\n            </div>\n          )}\n        </div>\n\n        {/* 白名单学生列表 */}\n        <div className=\"whitelist-students\">\n          {/* 调试信息 */}\n          <div style={{ padding: '10px', background: '#f0f0f0', margin: '10px 0', fontSize: '12px' }}>\n            调试信息: overdueUsers = {JSON.stringify(overdueUsers)}\n          </div>\n          \n          {isLoading ? (\n            <div className=\"loading\">加载中...</div>\n          ) : overdueUsers.length > 0 ? (\n            <div className=\"student-list\">\n              {overdueUsers.map(user => (\n                <div key={user.id} className=\"student-item\">\n                  <div className=\"student-info\">\n                    <span className=\"student-name\">{user.name}</span>\n                    <span className=\"student-username\">({user.username})</span>\n                  </div>\n                  <button\n                    className=\"remove-student-btn\"\n                    onClick={() => removeUserFromWhitelist(user.id)}\n                    disabled={isLoading}\n                    title=\"从白名单中移除\"\n                  >\n                    ✕\n                  </button>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className=\"empty-whitelist\">\n              <p>暂无白名单学生</p>\n              <small>添加学生到白名单后，他们就可以在截止时间后补交作业</small>\n            </div>\n          )}\n        </div>\n\n        {/* 消息提示 */}\n        {message && (\n          <div className={`message ${message.includes('失败') ? 'error' : 'success'}`}>\n            {message}\n          </div>\n        )}\n\n        {/* 白名单说明 */}\n        <div className=\"whitelist-info\">\n          <h6>💡 白名单说明</h6>\n          <ul>\n            <li>只有白名单中的学生可以在截止时间后补交作业</li>\n            <li>补交截止时间后，系统将拒绝所有补交请求</li>\n            <li>可以随时添加或移除白名单学生</li>\n            <li>建议只将确实需要补交的学生添加到白名单</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AssignmentWhitelistManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import'./AssignmentWhitelistManager.css';import{getAssignmentOverdueUsers,addUserToOverdueWhitelist,removeUserFromOverdueWhitelist}from'../services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AssignmentWhitelistManager=_ref=>{let{assignment,onUpdate}=_ref;const[overdueUsers,setOverdueUsers]=useState([]);const[isLoading,setIsLoading]=useState(false);const[selectedUser,setSelectedUser]=useState('');const[message,setMessage]=useState('');const[courseStudents,setCourseStudents]=useState([]);// 加载逾期用户白名单\nconst loadOverdueUsers=useCallback(async()=>{try{setIsLoading(true);const response=await getAssignmentOverdueUsers(assignment.id);setOverdueUsers(response.overdue_users||[]);}catch(error){console.error('加载白名单失败:',error);setMessage('加载白名单失败');}finally{setIsLoading(false);}},[assignment.id]);// 加载课程学生列表\nconst loadCourseStudents=useCallback(async()=>{try{// 这里应该调用获取课程学生的API\n// 暂时使用模拟数据\nconst mockStudents=[{id:1,name:'张三',username:'zhangsan001'},{id:2,name:'李四',username:'lisi002'},{id:3,name:'王五',username:'wangwu003'}];setCourseStudents(mockStudents);}catch(error){console.error('加载课程学生失败:',error);}},[]);// 添加用户到白名单\nconst addUserToWhitelist=async()=>{if(!selectedUser){setMessage('请选择要添加的学生');return;}try{setIsLoading(true);const response=await addUserToOverdueWhitelist(assignment.id,parseInt(selectedUser));setOverdueUsers(response.overdue_users||[]);setSelectedUser('');setMessage('学生已添加到白名单');// 通知父组件更新\nif(onUpdate){onUpdate();}}catch(error){console.error('添加学生失败:',error);setMessage(error.message||'添加学生失败');}finally{setIsLoading(false);}};// 从白名单移除用户\nconst removeUserFromWhitelist=async userId=>{try{setIsLoading(true);const response=await removeUserFromOverdueWhitelist(assignment.id,userId);setOverdueUsers(response.overdue_users||[]);setMessage('学生已从白名单中移除');// 通知父组件更新\nif(onUpdate){onUpdate();}}catch(error){console.error('移除学生失败:',error);setMessage(error.message||'移除学生失败');}finally{setIsLoading(false);}};// 组件挂载时加载数据\nuseEffect(()=>{if(assignment.allow_overdue_submission){loadOverdueUsers();loadCourseStudents();}},[assignment.id,assignment.allow_overdue_submission,loadOverdueUsers,loadCourseStudents]);// 如果作业不允许补交，不显示组件\nif(!assignment.allow_overdue_submission){return null;}return/*#__PURE__*/_jsxs(\"div\",{className:\"assignment-whitelist-manager\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"whitelist-header\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"\\uD83D\\uDC65 \\u8865\\u4EA4\\u767D\\u540D\\u5355\\u7BA1\\u7406\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"whitelist-count\",children:[\"(\",overdueUsers.length,\"\\u4EBA)\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"whitelist-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"add-student-section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"add-student-form\",children:[/*#__PURE__*/_jsxs(\"select\",{value:selectedUser,onChange:e=>setSelectedUser(e.target.value),disabled:isLoading,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\u9009\\u62E9\\u5B66\\u751F...\"}),courseStudents.filter(student=>!overdueUsers.some(u=>u.id===student.id)).map(student=>/*#__PURE__*/_jsxs(\"option\",{value:student.id,children:[student.name,\" (\",student.username,\")\"]},student.id))]}),/*#__PURE__*/_jsx(\"button\",{onClick:addUserToWhitelist,disabled:!selectedUser||isLoading,className:\"add-student-btn\",children:isLoading?'添加中...':'添加到白名单'})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"whitelist-students\",children:isLoading?/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"\\u52A0\\u8F7D\\u4E2D...\"}):overdueUsers.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"student-list\",children:overdueUsers.map(user=>/*#__PURE__*/_jsxs(\"div\",{className:\"student-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"student-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"student-name\",children:user.name}),/*#__PURE__*/_jsxs(\"span\",{className:\"student-username\",children:[\"(\",user.username,\")\"]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"remove-student-btn\",onClick:()=>removeUserFromWhitelist(user.id),disabled:isLoading,title:\"\\u4ECE\\u767D\\u540D\\u5355\\u4E2D\\u79FB\\u9664\",children:\"\\u2715\"})]},user.id))}):/*#__PURE__*/_jsxs(\"div\",{className:\"empty-whitelist\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\u6682\\u65E0\\u767D\\u540D\\u5355\\u5B66\\u751F\"}),/*#__PURE__*/_jsx(\"small\",{children:\"\\u6DFB\\u52A0\\u5B66\\u751F\\u5230\\u767D\\u540D\\u5355\\u540E\\uFF0C\\u4ED6\\u4EEC\\u5C31\\u53EF\\u4EE5\\u5728\\u622A\\u6B62\\u65F6\\u95F4\\u540E\\u8865\\u4EA4\\u4F5C\\u4E1A\"})]})}),message&&/*#__PURE__*/_jsx(\"div\",{className:\"message \".concat(message.includes('失败')?'error':'success'),children:message}),/*#__PURE__*/_jsxs(\"div\",{className:\"whitelist-info\",children:[/*#__PURE__*/_jsx(\"h6\",{children:\"\\uD83D\\uDCA1 \\u767D\\u540D\\u5355\\u8BF4\\u660E\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"\\u53EA\\u6709\\u767D\\u540D\\u5355\\u4E2D\\u7684\\u5B66\\u751F\\u53EF\\u4EE5\\u5728\\u622A\\u6B62\\u65F6\\u95F4\\u540E\\u8865\\u4EA4\\u4F5C\\u4E1A\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u8865\\u4EA4\\u622A\\u6B62\\u65F6\\u95F4\\u540E\\uFF0C\\u7CFB\\u7EDF\\u5C06\\u62D2\\u7EDD\\u6240\\u6709\\u8865\\u4EA4\\u8BF7\\u6C42\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u53EF\\u4EE5\\u968F\\u65F6\\u6DFB\\u52A0\\u6216\\u79FB\\u9664\\u767D\\u540D\\u5355\\u5B66\\u751F\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u5EFA\\u8BAE\\u53EA\\u5C06\\u786E\\u5B9E\\u9700\\u8981\\u8865\\u4EA4\\u7684\\u5B66\\u751F\\u6DFB\\u52A0\\u5230\\u767D\\u540D\\u5355\"})]})]})]})]});};export default AssignmentWhitelistManager;","map":{"version":3,"names":["React","useState","useEffect","useCallback","getAssignmentOverdueUsers","addUserToOverdueWhitelist","removeUserFromOverdueWhitelist","jsx","_jsx","jsxs","_jsxs","AssignmentWhitelistManager","_ref","assignment","onUpdate","overdueUsers","setOverdueUsers","isLoading","setIsLoading","selectedUser","setSelectedUser","message","setMessage","courseStudents","setCourseStudents","loadOverdueUsers","response","id","overdue_users","error","console","loadCourseStudents","mockStudents","name","username","addUserToWhitelist","parseInt","removeUserFromWhitelist","userId","allow_overdue_submission","className","children","length","value","onChange","e","target","disabled","filter","student","some","u","map","onClick","user","title","concat","includes"],"sources":["/Volumes/坞城/OJ_1/frontend/src/components/AssignmentWhitelistManager.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport './AssignmentWhitelistManager.css';\nimport { \n  getAssignmentOverdueUsers, \n  addUserToOverdueWhitelist, \n  removeUserFromOverdueWhitelist \n} from '../services/api';\n\nconst AssignmentWhitelistManager = ({ assignment, onUpdate }) => {\n  const [overdueUsers, setOverdueUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedUser, setSelectedUser] = useState('');\n  const [message, setMessage] = useState('');\n  const [courseStudents, setCourseStudents] = useState([]);\n\n  // 加载逾期用户白名单\n  const loadOverdueUsers = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      const response = await getAssignmentOverdueUsers(assignment.id);\n      setOverdueUsers(response.overdue_users || []);\n    } catch (error) {\n      console.error('加载白名单失败:', error);\n      setMessage('加载白名单失败');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [assignment.id]);\n\n  // 加载课程学生列表\n  const loadCourseStudents = useCallback(async () => {\n    try {\n      // 这里应该调用获取课程学生的API\n      // 暂时使用模拟数据\n      const mockStudents = [\n        { id: 1, name: '张三', username: 'zhangsan001' },\n        { id: 2, name: '李四', username: 'lisi002' },\n        { id: 3, name: '王五', username: 'wangwu003' }\n      ];\n      setCourseStudents(mockStudents);\n    } catch (error) {\n      console.error('加载课程学生失败:', error);\n    }\n  }, []);\n\n  // 添加用户到白名单\n  const addUserToWhitelist = async () => {\n    if (!selectedUser) {\n      setMessage('请选择要添加的学生');\n      return;\n    }\n\n    try {\n      setIsLoading(true);\n      const response = await addUserToOverdueWhitelist(assignment.id, parseInt(selectedUser));\n      \n      setOverdueUsers(response.overdue_users || []);\n      setSelectedUser('');\n      setMessage('学生已添加到白名单');\n      \n      // 通知父组件更新\n      if (onUpdate) {\n        onUpdate();\n      }\n    } catch (error) {\n      console.error('添加学生失败:', error);\n      setMessage(error.message || '添加学生失败');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // 从白名单移除用户\n  const removeUserFromWhitelist = async (userId) => {\n    try {\n      setIsLoading(true);\n      const response = await removeUserFromOverdueWhitelist(assignment.id, userId);\n      \n      setOverdueUsers(response.overdue_users || []);\n      setMessage('学生已从白名单中移除');\n      \n      // 通知父组件更新\n      if (onUpdate) {\n        onUpdate();\n      }\n    } catch (error) {\n      console.error('移除学生失败:', error);\n      setMessage(error.message || '移除学生失败');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // 组件挂载时加载数据\n  useEffect(() => {\n    if (assignment.allow_overdue_submission) {\n      loadOverdueUsers();\n      loadCourseStudents();\n    }\n  }, [assignment.id, assignment.allow_overdue_submission, loadOverdueUsers, loadCourseStudents]);\n\n  // 如果作业不允许补交，不显示组件\n  if (!assignment.allow_overdue_submission) {\n    return null;\n  }\n\n  return (\n    <div className=\"assignment-whitelist-manager\">\n      <div className=\"whitelist-header\">\n        <h5>👥 补交白名单管理</h5>\n        <span className=\"whitelist-count\">({overdueUsers.length}人)</span>\n      </div>\n\n      <div className=\"whitelist-content\">\n        {/* 添加学生到白名单 */}\n        <div className=\"add-student-section\">\n          <div className=\"add-student-form\">\n            <select\n              value={selectedUser}\n              onChange={(e) => setSelectedUser(e.target.value)}\n              disabled={isLoading}\n            >\n              <option value=\"\">选择学生...</option>\n              {courseStudents\n                .filter(student => !overdueUsers.some(u => u.id === student.id))\n                .map(student => (\n                  <option key={student.id} value={student.id}>\n                    {student.name} ({student.username})\n                  </option>\n                ))}\n            </select>\n            <button\n              onClick={addUserToWhitelist}\n              disabled={!selectedUser || isLoading}\n              className=\"add-student-btn\"\n            >\n              {isLoading ? '添加中...' : '添加到白名单'}\n            </button>\n          </div>\n        </div>\n\n        {/* 白名单学生列表 */}\n        <div className=\"whitelist-students\">\n          {isLoading ? (\n            <div className=\"loading\">加载中...</div>\n          ) : overdueUsers.length > 0 ? (\n            <div className=\"student-list\">\n              {overdueUsers.map(user => (\n                <div key={user.id} className=\"student-item\">\n                  <div className=\"student-info\">\n                    <span className=\"student-name\">{user.name}</span>\n                    <span className=\"student-username\">({user.username})</span>\n                  </div>\n                  <button\n                    className=\"remove-student-btn\"\n                    onClick={() => removeUserFromWhitelist(user.id)}\n                    disabled={isLoading}\n                    title=\"从白名单中移除\"\n                  >\n                    ✕\n                  </button>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className=\"empty-whitelist\">\n              <p>暂无白名单学生</p>\n              <small>添加学生到白名单后，他们就可以在截止时间后补交作业</small>\n            </div>\n          )}\n        </div>\n\n        {/* 消息提示 */}\n        {message && (\n          <div className={`message ${message.includes('失败') ? 'error' : 'success'}`}>\n            {message}\n          </div>\n        )}\n\n        {/* 白名单说明 */}\n        <div className=\"whitelist-info\">\n          <h6>💡 白名单说明</h6>\n          <ul>\n            <li>只有白名单中的学生可以在截止时间后补交作业</li>\n            <li>补交截止时间后，系统将拒绝所有补交请求</li>\n            <li>可以随时添加或移除白名单学生</li>\n            <li>建议只将确实需要补交的学生添加到白名单</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AssignmentWhitelistManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
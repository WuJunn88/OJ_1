{"ast":null,"code":"import _objectSpread from\"/Volumes/\\u575E\\u57CE/OJ_1/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useCallback}from'react';import{getUsers,getSchools,getMajors,getClasses,getProblems,createProblem,updateProblem,deleteProblem,updateUser,deleteUser,registerStudent,getTeacherCourses,getCourseAssignments,createAssignment,updateAssignment,deleteAssignment,getCourseStudents,addStudentToCourse,removeStudentFromCourse,getDepartments,batchImportStudentsFromExcel,excludeOriginalStudent,aiSelectProblems,previewAiSelectedProblems}from'../services/api';import*as XLSX from'xlsx';import'./TeacherDashboardPage.css';import AIProblemGenerationPage from'./AIProblemGenerationPage';import AssignmentWhitelistManager from'../components/AssignmentWhitelistManager';import{mockCourses,mockAssignments,formatDate}from'../testData/courses';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const TeacherDashboardPage=()=>{const[activeTab,setActiveTab]=useState('students');const[activeSubTab,setActiveSubTab]=useState('list');// 子标签页\nconst[users,setUsers]=useState([]);const[problems,setProblems]=useState([]);const[schools,setSchools]=useState([]);const[departments,setDepartments]=useState([]);const[majors,setMajors]=useState([]);const[classes,setClasses]=useState([]);const[loading,setLoading]=useState(false);const[error,setError]=useState('');const[success,setSuccess]=useState('');// 批量导入相关状态\nconst[selectedSchool,setSelectedSchool]=useState('');const[selectedDepartment,setSelectedDepartment]=useState('');const[selectedMajor,setSelectedMajor]=useState('');const[selectedClass,setSelectedClass]=useState('');const[uploadedFile,setUploadedFile]=useState(null);// 手动创建题目相关状态\nconst[problemForm,setProblemForm]=useState({title:'',description:'',type:'programming',// 题目类型：programming(编程题), choice(选择题), judge(判断题), short_answer(简答题)\ntestCases:[],// 测试用例数组，每个元素包含 {id, input, output}\ndifficulty:'easy',time_limit:1000,memory_limit:128,// 选择题相关字段\noptions:[],// 选项数组\ncorrect_answers:[],// 正确答案数组（支持多选）\nis_multiple_choice:false,// 是否多选\n// 简答题相关字段\nanswer:''// 简答题答案\n});// 滚动动画相关状态\nconst[scrollAnimations,setScrollAnimations]=useState({formVisible:false,bottomFormVisible:false});// 课程详情页荷叶式动画状态\nconst[courseDetailAnimations,setCourseDetailAnimations]=useState({courseInfoVisible:false,studentsSectionVisible:false,assignmentsSectionVisible:false});// 编辑题目状态\nconst[editingProblem,setEditingProblem]=useState(null);const[isEditing,setIsEditing]=useState(false);// 分页相关状态\nconst[currentPage,setCurrentPage]=useState(1);const[perPage,setPerPage]=useState(20);// 每页显示20个题目\nconst[totalProblems,setTotalProblems]=useState(0);const[totalPages,setTotalPages]=useState(0);// 测试用例管理函数\nconst addTestCase=()=>{const newTestCase={id:Date.now()+Math.random(),// 生成唯一ID\ninput:'',output:''};setProblemForm(prev=>_objectSpread(_objectSpread({},prev),{},{testCases:[...prev.testCases,newTestCase]}));};const removeTestCase=testCaseId=>{setProblemForm(prev=>_objectSpread(_objectSpread({},prev),{},{testCases:prev.testCases.filter(tc=>tc.id!==testCaseId)}));};const updateTestCase=(testCaseId,field,value)=>{setProblemForm(prev=>_objectSpread(_objectSpread({},prev),{},{testCases:prev.testCases.map(tc=>tc.id===testCaseId?_objectSpread(_objectSpread({},tc),{},{[field]:value}):tc)}));};// 解析后端测试用例格式的函数\nconst parseTestCases=(testCasesStr,expectedOutputStr)=>{if(!testCasesStr&&!expectedOutputStr){return[];}// 优先尝试解析JSON数组格式：[ { input, output }, ... ]\ntry{if(testCasesStr&&testCasesStr.trim().startsWith('[')){const parsed=JSON.parse(testCasesStr);if(Array.isArray(parsed)){return parsed.map((tc,idx)=>({id:Date.now()+Math.random()+idx,input:tc&&typeof tc.input!=='undefined'?String(tc.input):'',output:tc&&typeof tc.output!=='undefined'?String(tc.output):''}));}}}catch(e){// JSON解析失败则回退到旧格式\nconsole.warn('解析JSON测试用例失败，回退旧格式:',e);}const testCases=testCasesStr?testCasesStr.split('\\n').filter(line=>line.trim()):[];const expectedOutputs=expectedOutputStr?expectedOutputStr.split('\\n').filter(line=>line.trim()):[];const maxLength=Math.max(testCases.length,expectedOutputs.length);const result=[];for(let i=0;i<maxLength;i++){result.push({id:Date.now()+Math.random()+i,// 生成唯一ID\ninput:testCases[i]||'',// 如果没有输入则使用空字符串\noutput:expectedOutputs[i]||''// 输出是必填的\n});}return result;};// 添加学生相关状态（按新规则：学号、姓名、密码必填）\nconst[addStudentForm,setAddStudentForm]=useState({student_no:'',name:'',password:'',email:'',phone:'',school_id:'',department_id:'',major_id:'',class_id:''});// 学生编辑相关状态\nconst[editingUser,setEditingUser]=useState(null);const[editForm,setEditForm]=useState({email:'',phone:'',school_id:'',major_id:'',class_id:'',new_password:''});// 课程相关状态（只读，用于查看）\nconst[courses,setCourses]=useState([]);const[editingCourse,setEditingCourse]=useState(null);// 作业相关状态\nconst[assignments,setAssignments]=useState([]);const[assignmentForm,setAssignmentForm]=useState({name:'',description:'',requirements:'',due_date:'',course_id:'',problem_ids:[],// 补交作业相关字段\nallow_overdue_submission:false,overdue_deadline:'',overdue_score_ratio:0.8});// 编辑作业状态\nconst[editingAssignment,setEditingAssignment]=useState(null);const[isEditingAssignment,setIsEditingAssignment]=useState(false);const[editingAssignmentContext,setEditingAssignmentContext]=useState('');// 记录编辑作业时的上下文\n// 添加学生到课程的状态\nconst[addingStudentContext,setAddingStudentContext]=useState('');// 记录添加学生时的上下文\n// 学生-教学班关联关系状态\nconst[studentClassRelations,setStudentClassRelations]=useState([]);// 存储学生与教学班的关联关系\n// 智能选题相关状态\nconst[aiSelectionForm,setAiSelectionForm]=useState({requirements:'',problem_count:3});const[aiSelectedProblems,setAiSelectedProblems]=useState([]);const[isAiSelecting,setIsAiSelecting]=useState(false);const[aiSelectionResult,setAiSelectionResult]=useState(null);useEffect(()=>{fetchInitialData();},[]);// 滚动监听和动画触发\nuseEffect(()=>{const handleScroll=()=>{const scrollY=window.scrollY;const windowHeight=window.innerHeight;const documentHeight=document.documentElement.scrollHeight;// 检测表单是否进入视口\nif(scrollY>100){setScrollAnimations(prev=>_objectSpread(_objectSpread({},prev),{},{formVisible:true}));}// 检测是否接近底部，触发底部表单动画\nif(scrollY+windowHeight>documentHeight-200){setScrollAnimations(prev=>_objectSpread(_objectSpread({},prev),{},{bottomFormVisible:true}));}};window.addEventListener('scroll',handleScroll);// 初始触发\nhandleScroll();return()=>window.removeEventListener('scroll',handleScroll);},[]);// 课程详情页荷叶式动画滚动监听\nuseEffect(()=>{if(activeSubTab==='detail'&&editingCourse){const handleCourseDetailScroll=()=>{const scrollY=window.scrollY;const windowHeight=window.innerHeight;// 课程基本信息 - 当滚动到页面中央时浮现\nif(scrollY>windowHeight*0.3){setCourseDetailAnimations(prev=>_objectSpread(_objectSpread({},prev),{},{courseInfoVisible:true}));}// 教学班学生 - 当滚动到页面中央偏下时浮现\nif(scrollY>windowHeight*0.6){setCourseDetailAnimations(prev=>_objectSpread(_objectSpread({},prev),{},{studentsSectionVisible:true}));}// 已布置作业 - 当滚动到页面底部时浮现\nif(scrollY>windowHeight*0.9){setCourseDetailAnimations(prev=>_objectSpread(_objectSpread({},prev),{},{assignmentsSectionVisible:true}));}};window.addEventListener('scroll',handleCourseDetailScroll);// 初始触发\nhandleCourseDetailScroll();return()=>window.removeEventListener('scroll',handleCourseDetailScroll);}},[activeSubTab,editingCourse]);useEffect(()=>{fetchInitialData();// 监听多种通知方式，用于AI生题成功后的数据刷新\nconst handleStorageChange=e=>{if(e.key==='refreshProblems'&&e.newValue==='true'){console.log('检测到题目创建成功标记，自动刷新题目列表');// 清除标记\nlocalStorage.removeItem('refreshProblems');// 刷新题目列表\nfetchProblems();}};const handleProblemCreated=e=>{console.log('检测到题目创建成功事件，自动刷新题目列表');fetchProblems();};const handleMessage=e=>{if(e.data&&e.data.type==='PROBLEM_CREATED'){console.log('检测到题目创建成功消息，自动刷新题目列表');fetchProblems();}};// 监听storage事件（跨标签页）\nwindow.addEventListener('storage',handleStorageChange);// 监听自定义事件\nwindow.addEventListener('problemCreated',handleProblemCreated);// 监听postMessage\nwindow.addEventListener('message',handleMessage);// 检查是否需要刷新（当前标签页）\nconst shouldRefresh=localStorage.getItem('refreshProblems');if(shouldRefresh==='true'){console.log('检测到题目创建成功标记，自动刷新题目列表');localStorage.removeItem('refreshProblems');fetchProblems();}return()=>{window.removeEventListener('storage',handleStorageChange);window.removeEventListener('problemCreated',handleProblemCreated);window.removeEventListener('message',handleMessage);};},[]);// 从API加载学生-课程关联关系\nconst fetchStudentClassRelations=async courseId=>{try{const courseStudentsData=await getCourseStudents(courseId);if(courseStudentsData&&courseStudentsData.length>0){const apiRelations=courseStudentsData.map(student=>({student_id:student.student_id,class_id:student.class_id,course_id:courseId,student_name:student.student_name,student_no:student.student_no,added_at:student.added_at||new Date().toISOString()}));setStudentClassRelations(apiRelations);}else{setStudentClassRelations([]);}}catch(error){console.error('获取课程学生关联关系失败:',error);setStudentClassRelations([]);}};// 刷新题目列表\nconst fetchProblems=async function(){let page=arguments.length>0&&arguments[0]!==undefined?arguments[0]:currentPage;try{const problemsData=await getProblems(page,perPage);if(problemsData&&problemsData.problems){setProblems(problemsData.problems);setTotalProblems(problemsData.total);setTotalPages(problemsData.pages);setCurrentPage(page);console.log(\"\\u9898\\u76EE\\u5217\\u8868\\u5237\\u65B0\\u6210\\u529F\\uFF0C\\u7B2C\".concat(page,\"\\u9875\\uFF0C\\u9898\\u76EE\\u6570\\u91CF: \").concat(problemsData.problems.length,\"\\uFF0C\\u603B\\u8BA1: \").concat(problemsData.total));}}catch(error){console.warn('刷新题目列表失败:',error);}};// 分页控制函数\nconst handlePageChange=newPage=>{setCurrentPage(newPage);fetchProblems(newPage);};const handlePerPageChange=newPerPage=>{setPerPage(newPerPage);setCurrentPage(1);// 重置到第一页\nfetchProblems(1);};// 监听课程变化，加载课程学生关联关系\nuseEffect(()=>{const loadCourseStudents=async()=>{if(editingCourse&&editingCourse.id){console.log('开始加载课程学生数据，课程ID:',editingCourse.id);await fetchStudentClassRelations(editingCourse.id);}};loadCourseStudents();},[editingCourse]);// eslint-disable-line react-hooks/exhaustive-deps\nconst fetchInitialData=useCallback(async()=>{try{setLoading(true);setError('');setSuccess('');const[schoolsData,usersData,problemsData]=await Promise.all([getSchools(),getUsers(1,50,'student'),getProblems(1,perPage)// 使用分页参数\n]);setSchools(schoolsData);setUsers(usersData.users);setProblems(problemsData.problems);setTotalProblems(problemsData.total);setTotalPages(problemsData.pages);setCurrentPage(1);// 获取所有专业和班级数据 - 确保schools数据已经设置\nif(schoolsData&&schoolsData.length>0){await fetchAllMajorsAndClasses(schoolsData);}// 调试信息：打印题目数据\nconsole.log('从API获取的题目数据:',problemsData.problems);if(problemsData.problems&&problemsData.problems.length>0){problemsData.problems.forEach((problem,index)=>{console.log(\"\\u9898\\u76EE \".concat(index+1,\":\"),{id:problem.id,title:problem.title,type:problem.type,difficulty:problem.difficulty});});}// 获取课程和作业数据（使用测试数据）\ntry{console.log('开始获取课程和作业数据...');const[coursesData,assignmentsData]=await Promise.all([getTeacherCourses(),getCourseAssignments()]);console.log('API返回的课程数据:',coursesData);console.log('API返回的作业数据:',assignmentsData);if(coursesData&&coursesData.courses){console.log('使用API返回的课程数据，课程数量:',coursesData.courses.length);setCourses(coursesData.courses);}else{console.log('API返回的课程数据无效，使用测试数据');setCourses(mockCourses);}if(assignmentsData&&assignmentsData.assignments){console.log('使用API返回的作业数据，作业数量:',assignmentsData.assignments.length);setAssignments(assignmentsData.assignments);}else{console.log('API返回的作业数据无效，使用测试数据');setAssignments(mockAssignments);}}catch(error){var _error$response;console.warn('获取课程或作业数据失败，使用测试数据:',error);console.log('错误详情:',((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||error.message);setCourses(mockCourses);setAssignments(mockAssignments);}// 学生-课程关联关系数据将在进入课程详情页时从API加载\n}catch(error){var _error$response2,_error$response2$data;setError((error===null||error===void 0?void 0:(_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.error)||'获取数据失败');console.error('Error fetching data:',error);}finally{setLoading(false);}},[perPage]);// 获取所有专业和班级数据的函数\nconst fetchAllMajorsAndClasses=async function(){let schoolsData=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;// 防止重复调用\nif(fetchAllMajorsAndClasses.isLoading){console.log('fetchAllMajorsAndClasses 正在执行中，跳过重复调用');return;}fetchAllMajorsAndClasses.isLoading=true;try{// 使用传入的schoolsData参数，如果没有传入则使用state中的schools\nconst schoolsToUse=schoolsData||schools;if(!schoolsToUse||schoolsToUse.length===0){console.warn('没有学校数据，无法获取专业和班级');return;}console.log('开始获取数据，学校数量:',schoolsToUse.length);console.log('学校数据:',schoolsToUse);// 按照正确的层次结构获取数据：学校 → 院部 → 专业 → 班级\nconst allDepartments=[];const allMajors=[];const allClasses=[];for(const school of schoolsToUse){try{console.log(\"\\u6B63\\u5728\\u83B7\\u53D6\\u5B66\\u6821 \".concat(school.id,\" (\").concat(school.name,\") \\u7684\\u6570\\u636E...\"));// 1. 获取学校的院部\nconst departmentsData=await getDepartments(school.id);console.log(\"\\u5B66\\u6821 \".concat(school.id,\" \\u7684\\u9662\\u90E8\\u6570\\u636E:\"),departmentsData);allDepartments.push(...departmentsData);// 2. 获取学校下的所有专业（按school_id过滤）\ntry{console.log(\"\\u6B63\\u5728\\u83B7\\u53D6\\u5B66\\u6821 \".concat(school.id,\" \\u7684\\u4E13\\u4E1A...\"));const majorsData=await getMajors(school.id);console.log(\"\\u5B66\\u6821 \".concat(school.id,\" \\u7684\\u4E13\\u4E1A\\u6570\\u636E:\"),majorsData);allMajors.push(...majorsData);// 3. 获取每个专业的班级\nfor(const major of majorsData){try{console.log(\"\\u6B63\\u5728\\u83B7\\u53D6\\u4E13\\u4E1A \".concat(major.id,\" (\").concat(major.name,\") \\u7684\\u73ED\\u7EA7...\"));const classesData=await getClasses(major.id);console.log(\"\\u4E13\\u4E1A \".concat(major.id,\" \\u7684\\u73ED\\u7EA7\\u6570\\u636E:\"),classesData);allClasses.push(...classesData);}catch(error){console.error(\"\\u83B7\\u53D6\\u4E13\\u4E1A \".concat(major.id,\" \\u7684\\u73ED\\u7EA7\\u5931\\u8D25:\"),error);}}}catch(error){console.error(\"\\u83B7\\u53D6\\u5B66\\u6821 \".concat(school.id,\" \\u7684\\u4E13\\u4E1A\\u5931\\u8D25:\"),error);}}catch(error){console.error(\"\\u83B7\\u53D6\\u5B66\\u6821 \".concat(school.id,\" \\u7684\\u9662\\u90E8\\u5931\\u8D25:\"),error);}}console.log('最终获取到的数据:');console.log('院部:',allDepartments);console.log('专业:',allMajors);console.log('班级:',allClasses);setDepartments(allDepartments);setMajors(allMajors);setClasses(allClasses);console.log('获取到的所有院部:',allDepartments);console.log('获取到的所有专业:',allMajors);console.log('获取到的所有班级:',allClasses);}catch(error){console.error('获取所有院部、专业和班级失败:',error);}finally{fetchAllMajorsAndClasses.isLoading=false;}};const handleSchoolChange=async schoolId=>{setSelectedSchool(schoolId);setSelectedDepartment('');setSelectedMajor('');setSelectedClass('');// 不再重置全局的departments、majors和classes数组\n// 这些数组应该保持完整，用于学生列表显示\n};const handleDepartmentChange=async departmentId=>{setSelectedDepartment(departmentId);setSelectedMajor('');setSelectedClass('');// 不再重置全局的majors和classes数组\n// 这些数组应该保持完整，用于学生列表显示\n};const handleMajorChange=async majorId=>{setSelectedMajor(majorId);setSelectedClass('');// 不再重置全局的classes数组\n// 这个数组应该保持完整，用于学生列表显示\n};const handleBatchImport=async()=>{if(!uploadedFile){setError('请选择要上传的Excel文件');setSuccess('');return;}if(!selectedSchool||!selectedDepartment||!selectedMajor||!selectedClass){setError('请选择学校、院部、专业和班级');setSuccess('');return;}try{var _resp$success_count,_resp$failed_count;setLoading(true);setError('');setSuccess('');// 创建FormData对象来上传文件\nconst formData=new FormData();formData.append('file',uploadedFile);formData.append('school_id',selectedSchool);formData.append('department_id',selectedDepartment);formData.append('major_id',selectedMajor);formData.append('class_id',selectedClass);// 调用新的批量导入API\nconst resp=await batchImportStudentsFromExcel(formData);const msg=(resp===null||resp===void 0?void 0:resp.message)||\"\\u6279\\u91CF\\u5BFC\\u5165\\u5B8C\\u6210: \\u6210\\u529F \".concat((_resp$success_count=resp===null||resp===void 0?void 0:resp.success_count)!==null&&_resp$success_count!==void 0?_resp$success_count:0,\" \\u4E2A, \\u5931\\u8D25 \").concat((_resp$failed_count=resp===null||resp===void 0?void 0:resp.failed_count)!==null&&_resp$failed_count!==void 0?_resp$failed_count:0,\" \\u4E2A\");setSuccess(msg);if(resp!==null&&resp!==void 0&&resp.errors&&resp.errors.length>0){const preview=resp.errors.slice(0,5).join('；');setError(\"\\u90E8\\u5206\\u5BFC\\u5165\\u5931\\u8D25\\uFF1A\".concat(preview).concat(resp.errors.length>5?' 等':''));}// 刷新用户列表\nconst usersData=await getUsers(1,50,'student');setUsers(usersData.users);// 清理上传的文件\nsetUploadedFile(null);}catch(error){var _error$response3,_error$response3$data;setError(((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.error)||'批量导入失败');}finally{setLoading(false);}};// 下载Excel模板\nconst handleDownloadTemplate=()=>{// 创建Excel模板数据\nconst templateData=[['学号','姓名','密码'],['2021001','张三','123456'],['2021002','李四','123456'],['2021003','王五','123456']];// 创建工作簿\nconst workbook=XLSX.utils.book_new();// 创建工作表\nconst worksheet=XLSX.utils.aoa_to_sheet(templateData);// 设置列宽\nconst colWidths=[{wch:15},// 学号列宽\n{wch:15},// 姓名列宽\n{wch:15}// 密码列宽\n];worksheet['!cols']=colWidths;// 将工作表添加到工作簿\nXLSX.utils.book_append_sheet(workbook,worksheet,'学生信息');// 生成Excel文件并下载\nXLSX.writeFile(workbook,'学生信息导入模板.xlsx');setSuccess('Excel模板下载成功！请填写学生信息后重新上传。');};// 处理文件上传\nconst handleFileUpload=event=>{const file=event.target.files[0];if(file){// 检查文件类型\nconst validTypes=['.xlsx','.xls','.csv'];const fileExtension=file.name.substring(file.name.lastIndexOf('.')).toLowerCase();if(!validTypes.includes(fileExtension)){setError('请选择有效的Excel文件格式（.xlsx, .xls, .csv）');return;}// 检查文件大小（5MB限制）\nif(file.size>5*1024*1024){setError('文件大小不能超过5MB');return;}setUploadedFile(file);setError('');setSuccess('文件选择成功！');}};// 移除上传的文件\nconst handleRemoveFile=()=>{setUploadedFile(null);setError('');setSuccess('');};const handleCreateProblem=async()=>{try{setLoading(true);setError('');setSuccess('');// 构建提交给后端的数据\nconst submitData=_objectSpread({},problemForm);// 如果是选择题，需要将options数组转换为choice_options字符串\nif(problemForm.type==='choice'){// 将选项数组转换为字符串格式：A.选项内容\\nB.选项内容\\nC.选项内容\nsubmitData.choice_options=problemForm.options.map(option=>\"\".concat(option.id,\".\").concat(option.text)).join('\\n');// 将正确答案数组转换为expected_output字符串\nsubmitData.expected_output=problemForm.correct_answers.join(',');// 删除前端特有的字段，避免后端报错\ndelete submitData.options;delete submitData.correct_answers;}// 如果是判断题，需要特殊处理\nif(problemForm.type==='judge'){// 判断题的选项固定为\"正确\"和\"错误\"\nsubmitData.choice_options='A.正确\\nB.错误';// 将正确答案转换为expected_output\nsubmitData.expected_output=problemForm.correct_answers.join(',');// 删除前端特有的字段\ndelete submitData.options;delete submitData.correct_answers;}// 如果是简答题，需要特殊处理\nif(problemForm.type==='short_answer'){// 将简答题答案设置为expected_output\nsubmitData.expected_output=problemForm.answer;// 删除前端特有的字段\ndelete submitData.answer;}// 如果是编程题，改为JSON结构提交测试用例\nif(problemForm.type==='programming'){const testCases=problemForm.testCases||[];if(testCases.length===0){throw new Error('编程题至少需要一个测试用例');}// 以结构化JSON传输，支持多行输入/输出与空输入\nconst structured=testCases.map(tc=>({input:tc.input||'',output:tc.output||''}));submitData.test_cases=JSON.stringify(structured);// expected_output 保留为所有输出拼接（兼容旧后端或列表展示）\nsubmitData.expected_output=testCases.map(tc=>tc.output||'').join('\\n');// 删除前端特有字段\ndelete submitData.testCases;}// 添加调试信息\nconsole.log('提交的题目数据:',submitData);console.log('题目类型:',submitData.type);console.log('完整表单数据:',JSON.stringify(submitData,null,2));if(isEditing&&editingProblem){console.log('更新题目，ID:',editingProblem.id);await updateProblem(editingProblem.id,submitData);setSuccess('题目更新成功！');}else{console.log('创建新题目');await createProblem(submitData);setSuccess('题目创建成功！');}// 重置表单\nsetProblemForm({title:'',description:'',type:'programming',testCases:[],difficulty:'easy',time_limit:1000,memory_limit:128,options:[],correct_answers:[],is_multiple_choice:false,answer:''});setIsEditing(false);setEditingProblem(null);// 刷新题目列表\nconst problemsData=await getProblems(1,perPage);// 使用分页参数\nsetProblems(problemsData.problems);setTotalProblems(problemsData.total);setTotalPages(problemsData.pages);setCurrentPage(1);// 切换到题目列表\nsetActiveSubTab('list');}catch(error){var _error$response4,_error$response4$data;console.error('题目操作失败:',error);setError(((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.error)||error.message||'操作失败');}finally{setLoading(false);}};const handleEditProblem=problem=>{setEditingProblem(problem);// 根据题目类型初始化表单数据\nlet initialOptions=[];let initialCorrectAnswers=[];if(problem.type==='choice'){// 解析选择题的choice_options字符串\nif(problem.choice_options){const optionLines=problem.choice_options.split('\\n').filter(line=>line.trim());initialOptions=optionLines.map((line,index)=>{const match=line.match(/^([A-Z])\\.(.+)$/);if(match){return{id:match[1],// 使用字母ID (A, B, C...)\ntext:match[2].trim(),is_correct:false};}return{id:String.fromCharCode(65+index),// 如果没有匹配到字母，使用默认字母ID\ntext:line.trim(),is_correct:false};});}// 解析expected_output中的正确答案\nif(problem.expected_output){const correctAnswers=problem.expected_output.split(',').filter(ans=>ans.trim());initialCorrectAnswers=correctAnswers;// 设置选项的正确状态\ninitialOptions=initialOptions.map(option=>_objectSpread(_objectSpread({},option),{},{is_correct:correctAnswers.includes(option.id)}));}}else if(problem.type==='judge'){// 判断题固定选项\ninitialOptions=[{id:'A',text:'正确',is_correct:false},{id:'B',text:'错误',is_correct:false}];// 根据expected_output设置正确答案\nif(problem.expected_output){const correctAnswer=problem.expected_output.trim();if(correctAnswer==='A'){initialOptions[0].is_correct=true;initialCorrectAnswers=['A'];}else if(correctAnswer==='B'){initialOptions[1].is_correct=true;initialCorrectAnswers=['B'];}}}setProblemForm({title:problem.title,description:problem.description,type:problem.type||'programming',testCases:problem.type==='programming'?parseTestCases(problem.test_cases,problem.expected_output):[],difficulty:problem.difficulty,time_limit:problem.time_limit||1000,memory_limit:problem.memory_limit||128,options:initialOptions,correct_answers:initialCorrectAnswers,is_multiple_choice:problem.is_multiple_choice||false,answer:problem.answer||''});setIsEditing(true);setActiveSubTab('create');};const handleDeleteProblem=async problemId=>{if(!window.confirm('确定要删除这个题目吗？此操作不可恢复。')){return;}try{setLoading(true);setError('');setSuccess('');await deleteProblem(problemId);setSuccess('题目删除成功！');// 刷新题目列表\nconst problemsData=await getProblems(1,perPage);// 使用分页参数\nsetProblems(problemsData.problems);setTotalProblems(problemsData.total);setTotalPages(problemsData.pages);setCurrentPage(1);}catch(error){var _error$response5,_error$response5$data;setError(((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.error)||'删除题目失败');}finally{setLoading(false);}};// 根据题目特征推断题目类型\nconst inferProblemType=problem=>{console.log('开始推断题目类型，题目数据:',problem);// 优先使用明确设置的题目类型\nif(problem.type&&problem.type!=='undefined'){console.log('使用明确设置的题目类型:',problem.type);return problem.type;}// 如果没有明确设置类型，则通过特征推断\nconsole.log('没有明确设置类型，开始推断...');// 检查所有可能的选项字段\nconst options=problem.options||problem.choices||problem.alternatives||problem.option_list||[];console.log('检查到的选项:',options);// 如果有选项，判断是选择题还是判断题\nif(Array.isArray(options)&&options.length>0){console.log('发现选项，数量:',options.length);// 检查是否是判断题（只有两个选项：正确、错误）\nif(options.length===2){const optionTexts=options.map(opt=>{const text=opt.text||opt.option_text||opt.content||opt.label||'';console.log('选项文本:',text);return text;});if(optionTexts.includes('正确')&&optionTexts.includes('错误')){console.log('推断为判断题');return'judge';}}console.log('推断为选择题');return'choice';}// 检查所有可能的答案字段\nconst answer=problem.answer||problem.solution||problem.correct_answer||problem.answer_text||'';console.log('检查到的答案:',answer);if(answer&&answer.trim()){console.log('推断为简答题');return'short_answer';}// 检查编程题相关字段\nconst testCases=problem.test_cases||problem.test_cases_text||problem.test_input||'';const expectedOutput=problem.expected_output||problem.expected_result||problem.expected_answer||'';console.log('检查到的测试用例:',testCases);console.log('检查到的期望输出:',expectedOutput);if(testCases&&expectedOutput){console.log('推断为编程题');return'programming';}// 如果都无法推断，默认返回编程题\nconsole.log('无法推断类型，默认返回编程题');return'programming';};// 根据ID获取学校名称\nconst getSchoolName=schoolId=>{if(!schoolId)return'-';const school=schools.find(s=>{const sId=s.id;return sId===schoolId||sId===parseInt(schoolId)||parseInt(sId)===schoolId;});return school?school.name:schoolId;};// 根据ID获取专业名称\nconst getMajorName=majorId=>{if(!majorId)return'-';const major=majors.find(m=>{const mId=m.id;return mId===majorId||mId===parseInt(majorId)||parseInt(mId)===majorId;});return major?major.name:majorId;};// 根据ID获取班级名称\nconst getClassName=classId=>{if(!classId)return'-';const classItem=classes.find(c=>{const cId=c.id;return cId===classId||cId===parseInt(classId)||parseInt(cId)===classId;});return classItem?classItem.name:classId;};const handleCancelEdit=()=>{setIsEditing(false);setEditingProblem(null);setProblemForm({title:'',description:'',type:'programming',testCases:[],difficulty:'easy',time_limit:1000,memory_limit:128,options:[],correct_answers:[],is_multiple_choice:false,answer:''});setActiveSubTab('list');};// 课程相关处理函数（只读功能）\nconst handleViewCourseDetail=courseId=>{const course=courses.find(c=>c.id===courseId);if(course){setActiveTab('courses');setActiveSubTab('detail');setEditingCourse(course);}};// 作业相关处理函数\nconst handleCreateAssignment=async()=>{try{setLoading(true);setError('');setSuccess('');// 如果在课程详情页面创建作业，自动设置课程ID\nconst assignmentData=_objectSpread({},assignmentForm);if(activeSubTab==='create-assignment'&&editingCourse){assignmentData.course_id=editingCourse.id;}if(isEditingAssignment&&editingAssignment){await updateAssignment(editingAssignment.id,assignmentData);setSuccess('作业更新成功！');}else{await createAssignment(assignmentData);setSuccess('作业布置成功！');}// 重置表单\nsetAssignmentForm({name:'',description:'',requirements:'',due_date:'',course_id:'',problem_ids:[],// 重置补交设置\nallow_overdue_submission:false,overdue_deadline:'',overdue_score_ratio:0.8});setIsEditingAssignment(false);setEditingAssignment(null);// 刷新作业列表\nconst assignmentsData=await getCourseAssignments();setAssignments(assignmentsData.assignments||[]);// 如果在课程详情页面，返回到课程详情；否则返回到课程列表\nif(activeSubTab==='create-assignment'){setActiveSubTab('detail');}else{setActiveSubTab('list');}}catch(error){var _error$response6,_error$response6$data;setError(((_error$response6=error.response)===null||_error$response6===void 0?void 0:(_error$response6$data=_error$response6.data)===null||_error$response6$data===void 0?void 0:_error$response6$data.error)||(isEditingAssignment?'更新作业失败':'布置作业失败'));}finally{setLoading(false);}};const handleEditAssignment=assignment=>{setEditingAssignment(assignment);setAssignmentForm({name:assignment.name,description:assignment.description||'',requirements:assignment.requirements||'',due_date:assignment.due_date||'',course_id:assignment.course_id||'',problem_ids:assignment.problem_ids||[],// 补交作业相关字段\nallow_overdue_submission:assignment.allow_overdue_submission||false,overdue_deadline:assignment.overdue_deadline||'',overdue_score_ratio:assignment.overdue_score_ratio||0.8});setIsEditingAssignment(true);// 记录编辑作业时的上下文\nif(activeSubTab==='detail'&&editingCourse){setEditingAssignmentContext('course-detail');}else{setEditingAssignmentContext('course-list');}// 切换到作业创建模式\nsetActiveSubTab('create-assignment');};const handleDeleteAssignment=async assignmentId=>{if(!window.confirm('确定要删除该作业吗？此操作不可恢复。'))return;try{setLoading(true);setError('');setSuccess('');await deleteAssignment(assignmentId);setSuccess('作业已删除');// 刷新作业列表\nconst assignmentsData=await getCourseAssignments();setAssignments(assignmentsData.assignments||[]);}catch(error){var _error$response7,_error$response7$data;setError(((_error$response7=error.response)===null||_error$response7===void 0?void 0:(_error$response7$data=_error$response7.data)===null||_error$response7$data===void 0?void 0:_error$response7$data.error)||'删除作业失败');}finally{setLoading(false);}};// 学生-课程关联关系处理函数\nconst handleAddStudentToCourse=async()=>{if(!editingCourse)return;try{setLoading(true);setError('');setSuccess('');// 查找学生是否已存在\nconst existingStudent=users.find(user=>user.username===addStudentForm.student_no&&user.role==='student');if(!existingStudent){setError('学生不存在，请先创建学生账号');return;}// 使用API添加学生到课程\ntry{const payload={student_id:existingStudent.id};if(editingCourse.class_id){payload.class_id=editingCourse.class_id;}await addStudentToCourse(editingCourse.id,payload);setSuccess('学生已成功添加到课程！');// 重新加载课程学生数据\nconst courseStudentsData=await getCourseStudents(editingCourse.id);if(courseStudentsData&&courseStudentsData.length>0){const apiRelations=courseStudentsData.map(student=>({student_id:student.student_id,class_id:student.class_id,course_id:editingCourse.id,student_name:student.student_name,student_no:student.student_no,added_at:student.added_at||new Date().toISOString()}));setStudentClassRelations(apiRelations);}else{setStudentClassRelations([]);}// 刷新课程列表（因为学生数量发生变化）\ntry{const coursesData=await getTeacherCourses();if(coursesData&&coursesData.courses){setCourses(coursesData.courses);// 更新当前编辑的课程信息\nconst updatedCourse=coursesData.courses.find(c=>c.id===editingCourse.id);if(updatedCourse){setEditingCourse(updatedCourse);}}}catch(error){console.warn('刷新课程列表失败:',error);}}catch(apiError){var _apiError$response,_apiError$response$da;console.error('添加学生到课程失败:',apiError);setError(((_apiError$response=apiError.response)===null||_apiError$response===void 0?void 0:(_apiError$response$da=_apiError$response.data)===null||_apiError$response$da===void 0?void 0:_apiError$response$da.error)||'添加学生失败');return;}// 重置表单\nsetAddStudentForm({student_no:'',name:'',password:'',email:'',phone:'',school_id:'',department_id:'',major_id:'',class_id:''});// 返回到课程详情页\nsetActiveSubTab('detail');}catch(error){var _error$response8,_error$response8$data;setError(((_error$response8=error.response)===null||_error$response8===void 0?void 0:(_error$response8$data=_error$response8.data)===null||_error$response8$data===void 0?void 0:_error$response8$data.error)||'添加学生失败');}finally{setLoading(false);}};const handleRemoveStudentFromCourse=async relationId=>{if(!window.confirm('确定要从该课程中移除该学生吗？'))return;try{// 解析relationId获取学生ID和课程ID\nconst[studentId]=relationId.split('_');// 使用API从课程中移除学生\ntry{await removeStudentFromCourse(editingCourse.id,studentId);setSuccess('学生已从课程中移除');// 重新加载课程学生数据\nconst courseStudentsData=await getCourseStudents(editingCourse.id);if(courseStudentsData&&courseStudentsData.length>0){const apiRelations=courseStudentsData.map(student=>({student_id:student.student_id,class_id:student.class_id,course_id:editingCourse.id,student_name:student.student_name,student_no:student.student_no,added_at:student.added_at||new Date().toISOString()}));setStudentClassRelations(apiRelations);}else{setStudentClassRelations([]);}// 刷新课程列表（因为学生数量发生变化）\ntry{const coursesData=await getTeacherCourses();if(coursesData&&coursesData.courses){setCourses(coursesData.courses);// 更新当前编辑的课程信息\nconst updatedCourse=coursesData.courses.find(c=>c.id===editingCourse.id);if(updatedCourse){setEditingCourse(updatedCourse);}}}catch(error){console.warn('刷新课程列表失败:',error);}}catch(apiError){var _apiError$response2,_apiError$response2$d;console.error('从课程中移除学生失败:',apiError);setError(((_apiError$response2=apiError.response)===null||_apiError$response2===void 0?void 0:(_apiError$response2$d=_apiError$response2.data)===null||_apiError$response2$d===void 0?void 0:_apiError$response2$d.error)||'移除学生失败');return;}}catch(error){setError('移除学生失败');}};// 学生管理标签页渲染函数\nconst renderStudentsTab=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"tab-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sub-tabs\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"sub-tab-btn \".concat(activeSubTab==='list'?'active':''),onClick:()=>setActiveSubTab('list'),children:\"\\u5B66\\u751F\\u5217\\u8868\"}),/*#__PURE__*/_jsx(\"button\",{className:\"sub-tab-btn \".concat(activeSubTab==='add'?'active':''),onClick:()=>setActiveSubTab('add'),children:\"\\u6DFB\\u52A0\\u5B66\\u751F\"}),/*#__PURE__*/_jsx(\"button\",{className:\"sub-tab-btn \".concat(activeSubTab==='import'?'active':''),onClick:()=>setActiveSubTab('import'),children:\"\\u6279\\u91CF\\u5BFC\\u5165\"})]}),activeSubTab==='list'&&/*#__PURE__*/_jsxs(\"div\",{className:\"section-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u5B66\\u751F\\u5217\\u8868\"}),/*#__PURE__*/_jsx(\"button\",{className:\"add-btn\",onClick:()=>setActiveSubTab('add'),children:\"\\u6DFB\\u52A0\\u5B66\\u751F\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"students-table\",children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u5B66\\u53F7\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u59D3\\u540D\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u90AE\\u7BB1\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u624B\\u673A\\u53F7\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u5B66\\u6821\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u4E13\\u4E1A\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u73ED\\u7EA7\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u64CD\\u4F5C\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:users.map(user=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:user.id}),/*#__PURE__*/_jsx(\"td\",{children:user.username}),/*#__PURE__*/_jsx(\"td\",{children:user.name}),/*#__PURE__*/_jsx(\"td\",{children:user.email||'-'}),/*#__PURE__*/_jsx(\"td\",{children:user.phone||'-'}),/*#__PURE__*/_jsx(\"td\",{children:getSchoolName(user.school_id)}),/*#__PURE__*/_jsx(\"td\",{children:getMajorName(user.major_id)}),/*#__PURE__*/_jsx(\"td\",{children:getClassName(user.class_id)}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"action-btn edit\",onClick:()=>handleEditStudentClick(user),children:\"\\u7F16\\u8F91\"}),/*#__PURE__*/_jsx(\"button\",{className:\"action-btn delete\",onClick:()=>handleDeleteStudent(user.id),children:\"\\u5220\\u9664\"})]})]},user.id))})]})})]}),activeSubTab==='add'&&/*#__PURE__*/_jsxs(\"div\",{className:\"section-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u2795 \\u6DFB\\u52A0\\u5B66\\u751F\"}),/*#__PURE__*/_jsx(\"button\",{className:\"secondary-btn\",onClick:()=>setActiveSubTab('list'),children:\"\\u2190 \\u8FD4\\u56DE\\u5B66\\u751F\\u5217\\u8868\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"add-student-form \".concat(scrollAnimations.formVisible?'form-visible':''),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",style:{display:'grid',gridTemplateColumns:'1fr 1fr',gap:'20px'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u5B66\\u53F7\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u5B66\\u53F7\",value:addStudentForm.student_no,onChange:e=>setAddStudentForm(prev=>_objectSpread(_objectSpread({},prev),{},{student_no:e.target.value}))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u59D3\\u540D\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u5B66\\u751F\\u59D3\\u540D\",value:addStudentForm.name,onChange:e=>setAddStudentForm(prev=>_objectSpread(_objectSpread({},prev),{},{name:e.target.value}))})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",style:{display:'grid',gridTemplateColumns:'1fr 1fr',gap:'20px'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u5BC6\\u7801\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u521D\\u59CB\\u5BC6\\u7801\",value:addStudentForm.password,onChange:e=>setAddStudentForm(prev=>_objectSpread(_objectSpread({},prev),{},{password:e.target.value}))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u90AE\\u7BB1\\uFF1A\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u90AE\\u7BB1\\u5730\\u5740\",value:addStudentForm.email,onChange:e=>setAddStudentForm(prev=>_objectSpread(_objectSpread({},prev),{},{email:e.target.value}))})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",style:{display:'grid',gridTemplateColumns:'1fr 1fr',gap:'20px'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u624B\\u673A\\u53F7\\uFF1A\"}),/*#__PURE__*/_jsx(\"input\",{type:\"tel\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u624B\\u673A\\u53F7\\u7801\",value:addStudentForm.phone,onChange:e=>setAddStudentForm(prev=>_objectSpread(_objectSpread({},prev),{},{phone:e.target.value}))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u5B66\\u6821\\uFF1A\"}),/*#__PURE__*/_jsxs(\"select\",{value:addStudentForm.school_id,onChange:e=>handleAddStudentSchoolChange(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\u8BF7\\u9009\\u62E9\\u5B66\\u6821\\uFF08\\u53EF\\u9009\\uFF09\"}),schools.map(school=>/*#__PURE__*/_jsx(\"option\",{value:school.id,children:school.name},school.id))]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",style:{display:'grid',gridTemplateColumns:'1fr 1fr',gap:'20px'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u9662\\u90E8\\uFF1A\"}),/*#__PURE__*/_jsxs(\"select\",{value:addStudentForm.department_id,onChange:e=>handleAddStudentDepartmentChange(e.target.value),disabled:!addStudentForm.school_id,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\u8BF7\\u9009\\u62E9\\u9662\\u90E8\\uFF08\\u53EF\\u9009\\uFF09\"}),getAddStudentSchoolDepartments().map(department=>/*#__PURE__*/_jsx(\"option\",{value:department.id,children:department.name},department.id))]}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'12px',color:'#666',marginTop:'5px'},children:[\"\\u5F53\\u524D\\u5B66\\u6821ID: \",addStudentForm.school_id,\" | \\u53EF\\u7528\\u9662\\u90E8\\u6570\\u91CF: \",getAddStudentSchoolDepartments().length,\" | \\u603B\\u9662\\u90E8\\u6570\\u91CF: \",departments.length]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u4E13\\u4E1A\\uFF1A\"}),/*#__PURE__*/_jsxs(\"select\",{value:addStudentForm.major_id,onChange:e=>handleAddStudentMajorChange(e.target.value),disabled:!addStudentForm.department_id,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\u8BF7\\u9009\\u62E9\\u4E13\\u4E1A\\uFF08\\u53EF\\u9009\\uFF09\"}),getAddStudentDepartmentMajors().map(major=>/*#__PURE__*/_jsx(\"option\",{value:major.id,children:major.name},major.id))]}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'12px',color:'#666',marginTop:'5px'},children:[\"\\u5F53\\u524D\\u9662\\u90E8ID: \",addStudentForm.department_id,\" | \\u53EF\\u7528\\u4E13\\u4E1A\\u6570\\u91CF: \",getAddStudentDepartmentMajors().length,\" | \\u603B\\u4E13\\u4E1A\\u6570\\u91CF: \",majors.length]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-row\",style:{display:'grid',gridTemplateColumns:'1fr 1fr',gap:'20px'},children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u73ED\\u7EA7\\uFF1A\"}),/*#__PURE__*/_jsxs(\"select\",{value:addStudentForm.class_id,onChange:e=>setAddStudentForm(prev=>_objectSpread(_objectSpread({},prev),{},{class_id:e.target.value})),disabled:!addStudentForm.major_id,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\u8BF7\\u9009\\u62E9\\u73ED\\u7EA7\\uFF08\\u53EF\\u9009\\uFF09\"}),getAddStudentMajorClasses().map(classItem=>/*#__PURE__*/_jsx(\"option\",{value:classItem.id,children:classItem.name},classItem.id))]}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'12px',color:'#666',marginTop:'5px'},children:[\"\\u5F53\\u524D\\u4E13\\u4E1AID: \",addStudentForm.major_id,\" | \\u53EF\\u7528\\u73ED\\u7EA7\\u6570\\u91CF: \",getAddStudentMajorClasses().length,\" | \\u603B\\u73ED\\u7EA7\\u6570\\u91CF: \",classes.length]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-actions \".concat(scrollAnimations.bottomFormVisible?'bottom-form-visible':''),children:/*#__PURE__*/_jsx(\"button\",{className:\"submit-btn\",onClick:handleAddStudent,disabled:loading||!addStudentForm.student_no||!addStudentForm.name||!addStudentForm.password,children:loading?'创建中...':'创建学生账号'})})]})]}),activeSubTab==='import'&&/*#__PURE__*/_jsxs(\"div\",{className:\"section-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83D\\uDCE5 \\u6279\\u91CF\\u5BFC\\u5165\\u5B66\\u751F\"}),/*#__PURE__*/_jsx(\"button\",{className:\"secondary-btn\",onClick:()=>setActiveSubTab('list'),children:\"\\u2190 \\u8FD4\\u56DE\\u5B66\\u751F\\u5217\\u8868\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"import-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-help\",style:{display:'block',visibility:'visible',opacity:'1',background:'#f8f9fa',padding:'20px',borderRadius:'8px',borderLeft:'4px solid #667eea',marginBottom:'25px'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{color:'#333',fontSize:'18px',fontWeight:'600',margin:'0 0 15px 0'},children:\"\\u5BFC\\u5165\\u8BF4\\u660E\"}),/*#__PURE__*/_jsx(\"p\",{style:{color:'#666',fontSize:'14px',lineHeight:'1.6',margin:'10px 0'},children:\"\\u8BF7\\u6309\\u4EE5\\u4E0B\\u6B65\\u9AA4\\u64CD\\u4F5C\\uFF1A\"}),/*#__PURE__*/_jsxs(\"ol\",{style:{margin:'15px 0',paddingLeft:'20px'},children:[/*#__PURE__*/_jsx(\"li\",{style:{margin:'8px 0',color:'#495057',lineHeight:'1.5'},children:\"\\u70B9\\u51FB\\u4E0B\\u65B9\\\"\\u4E0B\\u8F7DExcel\\u6A21\\u677F\\\"\\u6309\\u94AE\\uFF0C\\u4E0B\\u8F7D\\u6807\\u51C6\\u683C\\u5F0F\\u7684Excel\\u6587\\u4EF6\\uFF08.xlsx\\u683C\\u5F0F\\uFF09\"}),/*#__PURE__*/_jsx(\"li\",{style:{margin:'8px 0',color:'#495057',lineHeight:'1.5'},children:\"\\u5728Excel\\u6587\\u4EF6\\u4E2D\\u586B\\u5199\\u5B66\\u751F\\u4FE1\\u606F\\uFF08\\u5B66\\u53F7\\u3001\\u59D3\\u540D\\u3001\\u5BC6\\u7801\\uFF09\"}),/*#__PURE__*/_jsx(\"li\",{style:{margin:'8px 0',color:'#495057',lineHeight:'1.5'},children:\"\\u9009\\u62E9\\u5B66\\u6821\\u3001\\u9662\\u90E8\\u3001\\u4E13\\u4E1A\\u3001\\u73ED\\u7EA7\\u4FE1\\u606F\"}),/*#__PURE__*/_jsx(\"li\",{style:{margin:'8px 0',color:'#495057',lineHeight:'1.5'},children:\"\\u4E0A\\u4F20\\u586B\\u5199\\u597D\\u7684Excel\\u6587\\u4EF6\"}),/*#__PURE__*/_jsx(\"li\",{style:{margin:'8px 0',color:'#495057',lineHeight:'1.5'},children:\"\\u7CFB\\u7EDF\\u5C06\\u81EA\\u52A8\\u8BC6\\u522B\\u5E76\\u6DFB\\u52A0\\u5B66\\u751F\\u4FE1\\u606F\"})]}),/*#__PURE__*/_jsxs(\"p\",{style:{color:'#666',fontSize:'14px',lineHeight:'1.6',margin:'10px 0'},children:[/*#__PURE__*/_jsx(\"strong\",{style:{color:'#dc3545',fontWeight:'600'},children:\"\\u6CE8\\u610F\\uFF1A\"}),\"\\u5B66\\u53F7\\u3001\\u59D3\\u540D\\u3001\\u5BC6\\u7801\\u4E3A\\u5FC5\\u586B\\u9879\\uFF0C\\u5B66\\u6821\\u3001\\u9662\\u90E8\\u3001\\u4E13\\u4E1A\\u3001\\u73ED\\u7EA7\\u4FE1\\u606F\\u5C06\\u5E94\\u7528\\u5230\\u6240\\u6709\\u5BFC\\u5165\\u7684\\u5B66\\u751F\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u5B66\\u6821\\uFF1A\"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedSchool,onChange:e=>handleSchoolChange(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\u8BF7\\u9009\\u62E9\\u5B66\\u6821\\uFF08\\u5FC5\\u9009\\uFF09\"}),schools.map(school=>/*#__PURE__*/_jsx(\"option\",{value:school.id,children:school.name},school.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u9662\\u90E8\\uFF1A\"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedDepartment,onChange:e=>handleDepartmentChange(e.target.value),disabled:!selectedSchool,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\u8BF7\\u9009\\u62E9\\u9662\\u90E8\\uFF08\\u5FC5\\u9009\\uFF09\"}),getCurrentSchoolDepartments().map(department=>/*#__PURE__*/_jsx(\"option\",{value:department.id,children:department.name},department.id))]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u4E13\\u4E1A\\uFF1A\"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedMajor,onChange:e=>handleMajorChange(e.target.value),disabled:!selectedDepartment,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\u8BF7\\u9009\\u62E9\\u4E13\\u4E1A\\uFF08\\u5FC5\\u9009\\uFF09\"}),getCurrentDepartmentMajors().map(major=>/*#__PURE__*/_jsx(\"option\",{value:major.id,children:major.name},major.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u73ED\\u7EA7\\uFF1A\"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedClass,onChange:e=>setSelectedClass(e.target.value),disabled:!selectedMajor,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\u8BF7\\u9009\\u62E9\\u73ED\\u7EA7\\uFF08\\u5FC5\\u9009\\uFF09\"}),getCurrentMajorClasses().map(classItem=>/*#__PURE__*/_jsx(\"option\",{value:classItem.id,children:classItem.name},classItem.id))]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"download-btn\",onClick:handleDownloadTemplate,disabled:loading,children:\"\\uD83D\\uDCE5 \\u4E0B\\u8F7DExcel\\u6A21\\u677F\"}),/*#__PURE__*/_jsx(\"span\",{className:\"form-help-text\",children:\"\\u4E0B\\u8F7D\\u5305\\u542B\\u5B66\\u53F7\\u3001\\u59D3\\u540D\\u3001\\u5BC6\\u7801\\u4E09\\u5217\\u7684\\u6807\\u51C6Excel\\u6A21\\u677F\\uFF08.xlsx\\u683C\\u5F0F\\uFF09\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u4E0A\\u4F20Excel\\u6587\\u4EF6\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\".xlsx,.xls\",onChange:handleFileUpload,disabled:loading||!selectedSchool||!selectedDepartment||!selectedMajor||!selectedClass}),/*#__PURE__*/_jsx(\"span\",{className:\"form-help-text\",children:\"\\u652F\\u6301.xlsx\\u548C.xls\\u683C\\u5F0F\\uFF0C\\u6587\\u4EF6\\u5927\\u5C0F\\u4E0D\\u8D85\\u8FC75MB\\u3002\\u5EFA\\u8BAE\\u4F7F\\u7528\\u4E0B\\u8F7D\\u7684Excel\\u6A21\\u677F\\u586B\\u5199\\u6570\\u636E\\u3002\"})]})}),uploadedFile&&/*#__PURE__*/_jsx(\"div\",{className:\"form-row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"file-info\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"\\uD83D\\uDCCE \\u5DF2\\u9009\\u62E9\\u6587\\u4EF6: \",uploadedFile.name]}),/*#__PURE__*/_jsx(\"button\",{className:\"remove-file-btn\",onClick:handleRemoveFile,children:\"\\u2715 \\u79FB\\u9664\"})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"submit-btn\",onClick:handleBatchImport,disabled:loading||!uploadedFile||!selectedSchool||!selectedDepartment||!selectedMajor||!selectedClass,children:loading?'导入中...':'开始导入'})})]})]})]});// 题目管理标签页渲染函数\nconst renderProblemsTab=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"tab-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sub-tabs\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"sub-tab-btn \".concat(activeSubTab==='list'?'active':''),onClick:()=>setActiveSubTab('list'),children:\"\\u9898\\u76EE\\u5217\\u8868\"}),/*#__PURE__*/_jsx(\"button\",{className:\"sub-tab-btn \".concat(activeSubTab==='create'?'active':''),onClick:()=>setActiveSubTab('create'),children:\"\\u521B\\u5EFA\\u9898\\u76EE\"}),/*#__PURE__*/_jsx(\"button\",{className:\"sub-tab-btn \".concat(activeSubTab==='ai'?'active':''),onClick:()=>setActiveSubTab('ai'),children:\"AI\\u751F\\u9898\"})]}),activeSubTab==='list'&&/*#__PURE__*/_jsxs(\"div\",{className:\"section-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u9898\\u76EE\\u5217\\u8868\"}),/*#__PURE__*/_jsx(\"button\",{className:\"add-btn\",onClick:()=>setActiveSubTab('create'),children:\"\\u521B\\u5EFA\\u9898\\u76EE\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"problems-table\",children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u6807\\u9898\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u7C7B\\u578B\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u96BE\\u5EA6\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u65F6\\u95F4\\u9650\\u5236\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u5185\\u5B58\\u9650\\u5236\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u64CD\\u4F5C\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:problems.map(problem=>{// 调试信息：打印每个题目的类型\nconsole.log(\"=== \\u9898\\u76EE \".concat(problem.id,\" \\u8C03\\u8BD5\\u4FE1\\u606F ===\"));console.log('题目标题:',problem.title);console.log('原始类型:',problem.type);console.log('完整题目对象:',problem);console.log('所有字段名:',Object.keys(problem));console.log('选项字段:',problem.options);console.log('答案字段:',problem.answer);console.log('测试用例字段:',problem.test_cases);console.log('期望输出字段:',problem.expected_output);const inferredType=inferProblemType(problem);console.log('推断类型:',inferredType);console.log('=== 调试信息结束 ===');return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:problem.id}),/*#__PURE__*/_jsx(\"td\",{children:problem.title}),/*#__PURE__*/_jsxs(\"td\",{children:[(()=>{const inferredType=inferProblemType(problem);const displayType=inferredType==='choice'?'选择题':inferredType==='judge'?'判断题':inferredType==='short_answer'?'简答题':'编程题';return/*#__PURE__*/_jsx(\"span\",{className:\"type-badge \".concat(inferredType),children:displayType});})(),/*#__PURE__*/_jsxs(\"small\",{style:{display:'block',color:'#999',fontSize:'10px'},children:[\"\\u539F\\u59CB\\u7C7B\\u578B: \",problem.type||'undefined',\" | \\u63A8\\u65AD\\u7C7B\\u578B: \",inferProblemType(problem)]})]}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"span\",{className:\"difficulty-badge \".concat(problem.difficulty),children:problem.difficulty==='easy'?'简单':problem.difficulty==='medium'?'中等':'困难'})}),/*#__PURE__*/_jsxs(\"td\",{children:[problem.time_limit||'-',\"ms\"]}),/*#__PURE__*/_jsxs(\"td\",{children:[problem.memory_limit||'-',\"MB\"]}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"action-btn edit\",onClick:()=>handleEditProblem(problem),children:\"\\u7F16\\u8F91\"}),/*#__PURE__*/_jsx(\"button\",{className:\"action-btn delete\",onClick:()=>handleDeleteProblem(problem.id),children:\"\\u5220\\u9664\"})]})]},problem.id);})})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"pagination-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"pagination-info\",children:/*#__PURE__*/_jsxs(\"span\",{children:[\"\\u663E\\u793A\\u7B2C \",(currentPage-1)*perPage+1,\" - \",Math.min(currentPage*perPage,totalProblems),\" \\u9898\\uFF0C\\u5171 \",totalProblems,\" \\u9898\"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"pagination-controls\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"per-page-selector\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u6BCF\\u9875\\u663E\\u793A\\uFF1A\"}),/*#__PURE__*/_jsxs(\"select\",{value:perPage,onChange:e=>handlePerPageChange(parseInt(e.target.value)),children:[/*#__PURE__*/_jsx(\"option\",{value:10,children:\"10\"}),/*#__PURE__*/_jsx(\"option\",{value:20,children:\"20\"}),/*#__PURE__*/_jsx(\"option\",{value:50,children:\"50\"}),/*#__PURE__*/_jsx(\"option\",{value:100,children:\"100\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"page-navigation\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"page-btn\",onClick:()=>handlePageChange(1),disabled:currentPage===1,children:\"\\xAB \\u9996\\u9875\"}),/*#__PURE__*/_jsx(\"button\",{className:\"page-btn\",onClick:()=>handlePageChange(currentPage-1),disabled:currentPage===1,children:\"\\u2039 \\u4E0A\\u4E00\\u9875\"}),/*#__PURE__*/_jsx(\"div\",{className:\"page-numbers\",children:(()=>{const pages=[];const maxVisiblePages=5;let startPage=Math.max(1,currentPage-Math.floor(maxVisiblePages/2));let endPage=Math.min(totalPages,startPage+maxVisiblePages-1);if(endPage-startPage+1<maxVisiblePages){startPage=Math.max(1,endPage-maxVisiblePages+1);}for(let i=startPage;i<=endPage;i++){pages.push(/*#__PURE__*/_jsx(\"button\",{className:\"page-btn \".concat(i===currentPage?'active':''),onClick:()=>handlePageChange(i),children:i},i));}return pages;})()}),/*#__PURE__*/_jsx(\"button\",{className:\"page-btn\",onClick:()=>handlePageChange(currentPage+1),disabled:currentPage===totalPages,children:\"\\u4E0B\\u4E00\\u9875 \\u203A\"}),/*#__PURE__*/_jsx(\"button\",{className:\"page-btn\",onClick:()=>handlePageChange(totalPages),disabled:currentPage===totalPages,children:\"\\u672B\\u9875 \\xBB\"})]})]})]})]}),activeSubTab==='create'&&/*#__PURE__*/_jsxs(\"div\",{className:\"section-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:isEditing?'✏️ 编辑题目':'➕ 创建题目'}),/*#__PURE__*/_jsx(\"button\",{className:\"secondary-btn\",onClick:handleCancelEdit,children:\"\\u2190 \\u8FD4\\u56DE\\u9898\\u76EE\\u5217\\u8868\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"problem-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u9898\\u76EE\\u6807\\u9898\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u9898\\u76EE\\u6807\\u9898\",value:problemForm.title,onChange:e=>setProblemForm(prev=>_objectSpread(_objectSpread({},prev),{},{title:e.target.value}))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u9898\\u76EE\\u7C7B\\u578B\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsxs(\"select\",{value:problemForm.type,onChange:e=>handleProblemTypeChange(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"programming\",children:\"\\u7F16\\u7A0B\\u9898\"}),/*#__PURE__*/_jsx(\"option\",{value:\"choice\",children:\"\\u9009\\u62E9\\u9898\"}),/*#__PURE__*/_jsx(\"option\",{value:\"judge\",children:\"\\u5224\\u65AD\\u9898\"}),/*#__PURE__*/_jsx(\"option\",{value:\"short_answer\",children:\"\\u7B80\\u7B54\\u9898\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u96BE\\u5EA6\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsxs(\"select\",{value:problemForm.difficulty,onChange:e=>setProblemForm(prev=>_objectSpread(_objectSpread({},prev),{},{difficulty:e.target.value})),children:[/*#__PURE__*/_jsx(\"option\",{value:\"easy\",children:\"\\u7B80\\u5355\"}),/*#__PURE__*/_jsx(\"option\",{value:\"medium\",children:\"\\u4E2D\\u7B49\"}),/*#__PURE__*/_jsx(\"option\",{value:\"hard\",children:\"\\u56F0\\u96BE\"})]})]}),problemForm.type==='choice'&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u9009\\u62E9\\u7C7B\\u578B\\uFF1A\"}),/*#__PURE__*/_jsx(\"div\",{className:\"checkbox-group\",children:/*#__PURE__*/_jsxs(\"label\",{className:\"checkbox-label\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:problemForm.is_multiple_choice,onChange:e=>setProblemForm(prev=>_objectSpread(_objectSpread({},prev),{},{is_multiple_choice:e.target.checked}))}),/*#__PURE__*/_jsx(\"span\",{children:\"\\u591A\\u9009\\u9898\"})]})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u9898\\u76EE\\u63CF\\u8FF0\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"\\u8BF7\\u8F93\\u5165\\u9898\\u76EE\\u63CF\\u8FF0\",value:problemForm.description,onChange:e=>setProblemForm(prev=>_objectSpread(_objectSpread({},prev),{},{description:e.target.value})),rows:6})]}),problemForm.type==='choice'&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u9009\\u9879\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"choice-options\",children:[problemForm.options.map((option,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"choice-option\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"option-header\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"option-label\",children:[\"\\u9009\\u9879 \",String.fromCharCode(65+index)]}),/*#__PURE__*/_jsxs(\"div\",{className:\"option-controls\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"checkbox-label\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:option.is_correct,onChange:()=>toggleChoiceOptionCorrect(option.id)}),/*#__PURE__*/_jsx(\"span\",{children:\"\\u6B63\\u786E\\u7B54\\u6848\"})]}),problemForm.options.length>2&&/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"remove-option-btn\",onClick:()=>removeChoiceOption(option.id),children:\"\\u5220\\u9664\"})]})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u9009\\u9879 \".concat(String.fromCharCode(65+index),\" \\u7684\\u5185\\u5BB9\"),value:option.text,onChange:e=>updateChoiceOption(option.id,'text',e.target.value),className:\"option-input\"})]},option.id)),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"add-option-btn\",onClick:addChoiceOption,children:\"+ \\u6DFB\\u52A0\\u9009\\u9879\"})]}),/*#__PURE__*/_jsx(\"small\",{children:\"\\u81F3\\u5C11\\u9700\\u89812\\u4E2A\\u9009\\u9879\\uFF0C\\u6700\\u591A\\u652F\\u630110\\u4E2A\\u9009\\u9879\"})]}),problemForm.type==='judge'&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u9009\\u9879\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"choice-options\",children:problemForm.options.map((option,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"choice-option\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"option-header\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"option-label\",children:[\"\\u9009\\u9879 \",index+1]}),/*#__PURE__*/_jsx(\"div\",{className:\"option-controls\",children:/*#__PURE__*/_jsxs(\"label\",{className:\"checkbox-label\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:option.is_correct,onChange:()=>toggleChoiceOptionCorrect(option.id)}),/*#__PURE__*/_jsx(\"span\",{children:\"\\u6B63\\u786E\\u7B54\\u6848\"})]})})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:option.text,onChange:e=>updateChoiceOption(option.id,'text',e.target.value),className:\"option-input\",readOnly:true}),/*#__PURE__*/_jsx(\"small\",{className:\"option-hint\",children:\"\\u5224\\u65AD\\u9898\\u9009\\u9879\\u4E0D\\u53EF\\u7F16\\u8F91\"})]},option.id))}),/*#__PURE__*/_jsx(\"small\",{children:\"\\u5224\\u65AD\\u9898\\u56FA\\u5B9A\\u4E3A\\\"\\u6B63\\u786E\\\"\\u548C\\\"\\u9519\\u8BEF\\\"\\u4E24\\u4E2A\\u9009\\u9879\\uFF0C\\u8BF7\\u9009\\u62E9\\u5176\\u4E2D\\u4E00\\u4E2A\\u4F5C\\u4E3A\\u6B63\\u786E\\u7B54\\u6848\"})]}),problemForm.type==='short_answer'&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u7B54\\u6848\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"\\u8BF7\\u8F93\\u5165\\u7B80\\u7B54\\u9898\\u7684\\u6807\\u51C6\\u7B54\\u6848\",value:problemForm.answer,onChange:e=>setProblemForm(prev=>_objectSpread(_objectSpread({},prev),{},{answer:e.target.value})),rows:6}),/*#__PURE__*/_jsx(\"small\",{children:\"\\u8BF7\\u63D0\\u4F9B\\u8BE6\\u7EC6\\u7684\\u7B54\\u6848\\u5185\\u5BB9\\uFF0C\\u4F9B\\u5B66\\u751F\\u53C2\\u8003\\u548C\\u6559\\u5E08\\u8BC4\\u5206\\u4F7F\\u7528\"})]}),problemForm.type==='programming'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u6D4B\\u8BD5\\u7528\\u4F8B\\u7BA1\\u7406\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"test-cases-manager\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"test-cases-header\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\u6D4B\\u8BD5\\u7528\\u4F8B\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"add-test-case-btn\",onClick:()=>addTestCase(),children:\"\\u2795 \\u6DFB\\u52A0\\u6D4B\\u8BD5\\u7528\\u4F8B\"})]}),problemForm.testCases&&problemForm.testCases.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"test-cases-list\",children:problemForm.testCases.map((testCase,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"test-case-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"test-case-header\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"test-case-number\",children:[\"\\u6D4B\\u8BD5\\u7528\\u4F8B \",index+1]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"remove-test-case-btn\",onClick:()=>removeTestCase(testCase.id),children:\"\\u274C\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"test-case-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"test-case-input\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u8F93\\u5165\\uFF1A\"}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"\\u8F93\\u5165\\u6570\\u636E\\uFF08\\u5982\\u679C\\u6CA1\\u6709\\u8F93\\u5165\\u8BF7\\u7559\\u7A7A\\uFF09\",value:testCase.input||'',onChange:e=>updateTestCase(testCase.id,'input',e.target.value),rows:3}),/*#__PURE__*/_jsx(\"small\",{children:\"\\u5982\\u679C\\u6CA1\\u6709\\u8F93\\u5165\\uFF0C\\u8BF7\\u7559\\u7A7A\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"test-case-output\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u671F\\u671B\\u8F93\\u51FA\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"\\u671F\\u671B\\u7684\\u8F93\\u51FA\\u7ED3\\u679C\",value:testCase.output||'',onChange:e=>updateTestCase(testCase.id,'output',e.target.value),rows:3})]})]})]},testCase.id))}):/*#__PURE__*/_jsx(\"div\",{className:\"no-test-cases\",children:/*#__PURE__*/_jsx(\"p\",{children:\"\\u8FD8\\u6CA1\\u6709\\u6DFB\\u52A0\\u6D4B\\u8BD5\\u7528\\u4F8B\\uFF0C\\u8BF7\\u70B9\\u51FB\\\"\\u6DFB\\u52A0\\u6D4B\\u8BD5\\u7528\\u4F8B\\\"\\u6309\\u94AE\\u6DFB\\u52A0\"})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u65F6\\u95F4\\u9650\\u5236\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u65F6\\u95F4\\u9650\\u5236\\uFF08\\u6BEB\\u79D2\\uFF09\",value:problemForm.time_limit,onChange:e=>setProblemForm(prev=>_objectSpread(_objectSpread({},prev),{},{time_limit:parseInt(e.target.value)||1000})),min:\"100\",max:\"10000\"}),/*#__PURE__*/_jsx(\"small\",{children:\"\\u5355\\u4F4D\\uFF1A\\u6BEB\\u79D2\\uFF0C\\u8303\\u56F4\\uFF1A100-10000\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u5185\\u5B58\\u9650\\u5236\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u5185\\u5B58\\u9650\\u5236\\uFF08MB\\uFF09\",value:problemForm.memory_limit,onChange:e=>setProblemForm(prev=>_objectSpread(_objectSpread({},prev),{},{memory_limit:parseInt(e.target.value)||128})),min:\"16\",max:\"512\"}),/*#__PURE__*/_jsx(\"small\",{children:\"\\u5355\\u4F4D\\uFF1AMB\\uFF0C\\u8303\\u56F4\\uFF1A16-512\"})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"submit-btn\",onClick:handleCreateProblem,disabled:loading||!problemForm.title||!problemForm.description||problemForm.type==='programming'&&(problemForm.testCases.length===0||problemForm.testCases.some(tc=>!tc.output.trim()))||problemForm.type==='choice'&&(problemForm.options.length<2||problemForm.options.some(option=>!option.text)||problemForm.correct_answers.length===0)||problemForm.type==='judge'&&problemForm.correct_answers.length!==1||problemForm.type==='short_answer'&&!problemForm.answer,children:loading?isEditing?'更新中...':'创建中...':isEditing?'更新题目':'创建题目'})})]})]}),activeSubTab==='ai'&&/*#__PURE__*/_jsx(AIProblemGenerationPage,{})]});// 课程查看标签页渲染函数（只读功能）\nconst renderCoursesTab=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"tab-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sub-tabs\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"sub-tab-btn \".concat(activeSubTab==='list'?'active':''),onClick:()=>{setActiveSubTab('list');// 如果当前在课程详情页，清除课程详情状态\nif(activeSubTab==='detail'){setEditingCourse(null);}// 清除添加学生上下文\nsetAddingStudentContext('');},children:\"\\u8BFE\\u7A0B\\u5217\\u8868\"}),/*#__PURE__*/_jsx(\"button\",{className:\"sub-tab-btn \".concat(activeSubTab==='detail'?'active':''),onClick:()=>setActiveSubTab('detail'),style:{display:editingCourse&&activeSubTab==='detail'?'inline-block':'none'},children:\"\\u8BFE\\u7A0B\\u8BE6\\u60C5\"}),/*#__PURE__*/_jsx(\"button\",{className:\"sub-tab-btn \".concat(activeSubTab==='add-student-to-course'?'active':''),onClick:()=>setActiveSubTab('add-student-to-course'),style:{display:editingCourse&&activeSubTab==='detail'?'inline-block':'none'},children:\"\\u6DFB\\u52A0\\u5B66\\u751F\"})]}),activeSubTab==='list'&&/*#__PURE__*/_jsxs(\"div\",{className:\"section-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u6211\\u7684\\u8BFE\\u7A0B\"}),/*#__PURE__*/_jsx(\"div\",{className:\"section-info\",children:/*#__PURE__*/_jsx(\"p\",{children:\"\\uD83D\\uDCA1 \\u70B9\\u51FB\\u4EFB\\u610F\\u8BFE\\u7A0B\\u5361\\u7247\\u5373\\u53EF\\u67E5\\u770B\\u8BE6\\u60C5\\u3001\\u7BA1\\u7406\\u5B66\\u751F\\u548C\\u5E03\\u7F6E\\u4F5C\\u4E1A\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"courses-grid\",children:courses.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"empty-state\",children:/*#__PURE__*/_jsx(\"p\",{children:\"\\u6682\\u65E0\\u8BFE\\u7A0B\\uFF0C\\u8BF7\\u8054\\u7CFB\\u7BA1\\u7406\\u5458\\u6DFB\\u52A0\\u8BFE\\u7A0B\"})}):courses.map(course=>/*#__PURE__*/_jsxs(\"div\",{className:\"course-card\",onClick:()=>handleViewCourseDetail(course.id),style:{cursor:'pointer'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"course-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:course.name}),/*#__PURE__*/_jsx(\"span\",{className:\"course-status active\",children:\"\\u8FDB\\u884C\\u4E2D\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"course-info\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u6559\\u5B66\\u73ED\\uFF1A\"}),course.display_class_name||course.class_name||course.teaching_class_name||'未设置']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u4E13\\u4E1A\\uFF1A\"}),course.major_name]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u5B66\\u6821\\uFF1A\"}),course.school_name]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u5B66\\u751F\\u6570\\u91CF\\uFF1A\"}),course.student_count||0,\"\\u4EBA\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u521B\\u5EFA\\u65F6\\u95F4\\uFF1A\"}),formatDate(course.created_at)]})]})]},course.id))})]}),activeSubTab==='detail'&&editingCourse&&/*#__PURE__*/_jsxs(\"div\",{className:\"section-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"\\uD83D\\uDCDA \\u8BFE\\u7A0B\\u8BE6\\u60C5\\uFF1A\",editingCourse.name]}),/*#__PURE__*/_jsx(\"button\",{className:\"secondary-btn\",onClick:()=>{setActiveSubTab('list');setEditingCourse(null);},children:\"\\u2190 \\u8FD4\\u56DE\\u8BFE\\u7A0B\\u5217\\u8868\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"course-detail\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"course-info-section \".concat(courseDetailAnimations.courseInfoVisible?'lotus-visible':''),children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u8BFE\\u7A0B\\u57FA\\u672C\\u4FE1\\u606F\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u8BFE\\u7A0B\\u540D\\u79F0\\uFF1A\"}),/*#__PURE__*/_jsx(\"span\",{children:editingCourse.name})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u8BFE\\u7A0B\\u63CF\\u8FF0\\uFF1A\"}),/*#__PURE__*/_jsx(\"span\",{children:editingCourse.description})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u6559\\u5B66\\u73ED\\uFF1A\"}),/*#__PURE__*/_jsx(\"span\",{children:editingCourse.display_class_name||editingCourse.class_name||editingCourse.teaching_class_name||'未设置'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u4E13\\u4E1A\\uFF1A\"}),/*#__PURE__*/_jsx(\"span\",{children:editingCourse.major_name})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u5B66\\u6821\\uFF1A\"}),/*#__PURE__*/_jsx(\"span\",{children:editingCourse.school_name})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u5B66\\u751F\\u6570\\u91CF\\uFF1A\"}),/*#__PURE__*/_jsxs(\"span\",{children:[editingCourse.student_count||0,\"\\u4EBA\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u521B\\u5EFA\\u65F6\\u95F4\\uFF1A\"}),/*#__PURE__*/_jsx(\"span\",{children:formatDate(editingCourse.created_at)})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"course-students-section \".concat(courseDetailAnimations.studentsSectionVisible?'lotus-visible':''),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u6559\\u5B66\\u73ED\\u5B66\\u751F\"}),/*#__PURE__*/_jsx(\"button\",{className:\"add-btn\",onClick:()=>{// 设置添加学生上下文为课程详情页\nsetAddingStudentContext('course-detail');setActiveSubTab('add-student-to-course');},children:\"\\u6DFB\\u52A0\\u5B66\\u751F\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"students-table\",children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"\\u5B66\\u53F7\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u59D3\\u540D\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u90AE\\u7BB1\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u72B6\\u6001\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u64CD\\u4F5C\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:(()=>{// 获取当前课程的所有学生\nconst courseStudents=[];// 1. 添加原本属于该教学班的学生\nconst originalStudents=users.filter(user=>user.class_id===editingCourse.class_id&&user.role==='student');courseStudents.push(...originalStudents);// 2. 添加通过关联关系添加的学生\nconst relatedStudents=studentClassRelations.filter(relation=>relation.course_id===editingCourse.id).map(relation=>{// 查找学生的完整信息\nconst studentInfo=users.find(user=>user.id===relation.student_id);return _objectSpread(_objectSpread({},studentInfo),{},{// 使用关联关系中的信息作为后备\nname:studentInfo?studentInfo.name:relation.student_name,username:studentInfo?studentInfo.username:relation.student_no,// 标记这是通过关联关系添加的学生\nisRelatedStudent:true,relationId:\"\".concat(relation.student_id,\"_\").concat(relation.course_id)});});courseStudents.push(...relatedStudents);if(courseStudents.length===0){return/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{colSpan:\"5\",children:/*#__PURE__*/_jsx(\"div\",{className:\"empty-state\",children:/*#__PURE__*/_jsx(\"p\",{children:\"\\u8BE5\\u6559\\u5B66\\u73ED\\u6682\\u65E0\\u5B66\\u751F\"})})})});}return courseStudents.map(student=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:student.username}),/*#__PURE__*/_jsx(\"td\",{children:student.name}),/*#__PURE__*/_jsx(\"td\",{children:student.email||'-'}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"span\",{className:\"status-badge \".concat(student.isRelatedStudent?'related':'original'),children:student.isRelatedStudent?'已添加':'原班级'})}),/*#__PURE__*/_jsx(\"td\",{children:student.isRelatedStudent?/*#__PURE__*/_jsx(\"button\",{className:\"action-btn delete\",onClick:()=>handleRemoveStudentFromCourse(student.relationId),children:\"\\u79FB\\u9664\"}):/*#__PURE__*/_jsx(\"button\",{className:\"action-btn delete\",onClick:async()=>{if(!window.confirm('确定要将该原班级学生从本课程中退课吗？此操作不会删除其账号。'))return;try{await excludeOriginalStudent(editingCourse.id,student.id);setSuccess('该学生已从本课程退课');// 刷新课程学生数据\nawait fetchStudentClassRelations(editingCourse.id);}catch(apiError){var _apiError$response3,_apiError$response3$d;console.error('退课失败:',apiError);setError(((_apiError$response3=apiError.response)===null||_apiError$response3===void 0?void 0:(_apiError$response3$d=_apiError$response3.data)===null||_apiError$response3$d===void 0?void 0:_apiError$response3$d.error)||'退课失败');}},children:\"\\u9000\\u8BFE\"})})]},student.id||student.relationId));})()})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"course-assignments-section \".concat(courseDetailAnimations.assignmentsSectionVisible?'lotus-visible':''),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u5DF2\\u5E03\\u7F6E\\u4F5C\\u4E1A\"}),/*#__PURE__*/_jsx(\"button\",{className:\"add-btn\",onClick:()=>{// 自动设置当前课程ID到作业表单\nsetAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{course_id:editingCourse.id}));// 设置编辑作业上下文为课程详情页\nsetEditingAssignmentContext('course-detail');setActiveSubTab('create-assignment');},children:\"\\u5E03\\u7F6E\\u4F5C\\u4E1A\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"assignments-table\",children:[/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"\\u4F5C\\u4E1A\\u540D\\u79F0\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u63CF\\u8FF0\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u622A\\u6B62\\u65F6\\u95F4\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u72B6\\u6001\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u8865\\u4EA4\\u8BBE\\u7F6E\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u64CD\\u4F5C\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:assignments.filter(assignment=>assignment.course_id===editingCourse.id).map(assignment=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:assignment.name}),/*#__PURE__*/_jsx(\"td\",{children:assignment.description}),/*#__PURE__*/_jsx(\"td\",{children:formatDate(assignment.due_date)}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"span\",{className:\"status-badge \".concat(assignment.is_active?'active':'inactive'),children:assignment.is_active?'进行中':'已结束'})}),/*#__PURE__*/_jsx(\"td\",{children:assignment.allow_overdue_submission?/*#__PURE__*/_jsxs(\"div\",{className:\"overdue-status\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"overdue-badge enabled\",children:\"\\u5141\\u8BB8\\u8865\\u4EA4\"}),assignment.overdue_deadline&&/*#__PURE__*/_jsxs(\"div\",{className:\"overdue-detail\",children:[/*#__PURE__*/_jsxs(\"small\",{children:[\"\\u8865\\u4EA4\\u622A\\u6B62: \",formatDate(assignment.overdue_deadline)]}),/*#__PURE__*/_jsxs(\"small\",{children:[\"\\u5F97\\u5206\\u6BD4\\u4F8B: \",Math.round((assignment.overdue_score_ratio||0.8)*100),\"%\"]})]})]}):/*#__PURE__*/_jsx(\"span\",{className:\"overdue-badge disabled\",children:\"\\u4E0D\\u5141\\u8BB8\\u8865\\u4EA4\"})}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"action-btn edit\",onClick:()=>handleEditAssignment(assignment),children:\"\\u7F16\\u8F91\"}),/*#__PURE__*/_jsx(\"button\",{className:\"action-btn delete\",onClick:()=>handleDeleteAssignment(assignment.id),children:\"\\u5220\\u9664\"})]})]},assignment.id))})]}),assignments.filter(assignment=>assignment.course_id===editingCourse.id).length===0&&/*#__PURE__*/_jsx(\"div\",{className:\"empty-state\",children:/*#__PURE__*/_jsx(\"p\",{children:\"\\u8BE5\\u8BFE\\u7A0B\\u6682\\u65E0\\u4F5C\\u4E1A\"})})]})]}),activeSubTab==='create-assignment'&&/*#__PURE__*/_jsxs(\"div\",{className:\"course-assignment-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\uD83D\\uDCDD \\u5E03\\u7F6E\\u4F5C\\u4E1A\\uFF08\",editingCourse.name,\"\\uFF09\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"secondary-btn\",onClick:()=>setActiveSubTab('detail'),children:\"\\u2190 \\u8FD4\\u56DE\\u8BFE\\u7A0B\\u8BE6\\u60C5\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"assignment-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u4F5C\\u4E1A\\u540D\\u79F0\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u4F5C\\u4E1A\\u540D\\u79F0\",value:assignmentForm.name,onChange:e=>setAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{name:e.target.value}))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u8BFE\\u7A0B\\uFF1A\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:editingCourse.name,disabled:true,className:\"disabled-input\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u4F5C\\u4E1A\\u63CF\\u8FF0\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"\\u8BF7\\u8F93\\u5165\\u4F5C\\u4E1A\\u63CF\\u8FF0\",value:assignmentForm.description,onChange:e=>setAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{description:e.target.value})),rows:4})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u4F5C\\u4E1A\\u8981\\u6C42\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"\\u8BF7\\u8F93\\u5165\\u4F5C\\u4E1A\\u8981\\u6C42\",value:assignmentForm.requirements,onChange:e=>setAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{requirements:e.target.value})),rows:4})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u622A\\u6B62\\u65F6\\u95F4\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"datetime-local\",value:assignmentForm.due_date,onChange:e=>setAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{due_date:e.target.value}))})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u9009\\u62E9\\u9898\\u76EE\\uFF1A\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"ai-selection-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"ai-selection-header\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uD83E\\uDD16 AI\\u667A\\u80FD\\u9009\\u9898\"}),/*#__PURE__*/_jsx(\"p\",{className:\"ai-selection-desc\",children:\"\\u8F93\\u5165\\u9009\\u9898\\u9700\\u6C42\\uFF0CAI\\u5C06\\u81EA\\u52A8\\u4ECE\\u9898\\u76EE\\u5E93\\u4E2D\\u9009\\u62E9\\u6700\\u5408\\u9002\\u7684\\u9898\\u76EE\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"ai-selection-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u9009\\u9898\\u9700\\u6C42\\u63CF\\u8FF0\\uFF1A\"}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"\\u4F8B\\u5982\\uFF1A\\u9700\\u89813\\u9053\\u5173\\u4E8E\\u6570\\u7EC4\\u548C\\u5FAA\\u73AF\\u7684\\u9898\\u76EE\\uFF0C\\u96BE\\u5EA6\\u4ECE\\u7B80\\u5355\\u5230\\u56F0\\u96BE\\uFF0C\\u9002\\u5408\\u5927\\u4E00\\u5B66\\u751F\",value:aiSelectionForm.requirements,onChange:e=>setAiSelectionForm(prev=>_objectSpread(_objectSpread({},prev),{},{requirements:e.target.value})),rows:3})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u9898\\u76EE\\u6570\\u91CF\\uFF1A\"}),/*#__PURE__*/_jsxs(\"select\",{value:aiSelectionForm.problem_count,onChange:e=>setAiSelectionForm(prev=>_objectSpread(_objectSpread({},prev),{},{problem_count:parseInt(e.target.value)})),children:[/*#__PURE__*/_jsx(\"option\",{value:1,children:\"1\\u9898\"}),/*#__PURE__*/_jsx(\"option\",{value:2,children:\"2\\u9898\"}),/*#__PURE__*/_jsx(\"option\",{value:3,children:\"3\\u9898\"}),/*#__PURE__*/_jsx(\"option\",{value:4,children:\"4\\u9898\"}),/*#__PURE__*/_jsx(\"option\",{value:5,children:\"5\\u9898\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"ai-selection-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"ai-select-btn\",onClick:handleAiSelectProblems,disabled:isAiSelecting||!aiSelectionForm.requirements.trim(),children:isAiSelecting?'AI选题中...':'🤖 开始AI选题'}),aiSelectedProblems.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{className:\"preview-btn\",onClick:handlePreviewAiSelection,children:\"\\uD83D\\uDC41\\uFE0F \\u9884\\u89C8\\u7ED3\\u679C\"}),/*#__PURE__*/_jsx(\"button\",{className:\"apply-btn\",onClick:handleApplyAiSelection,children:\"\\u2705 \\u5E94\\u7528\\u9009\\u9898\"}),/*#__PURE__*/_jsx(\"button\",{className:\"clear-btn\",onClick:handleClearAiSelection,children:\"\\uD83D\\uDDD1\\uFE0F \\u6E05\\u7A7A\\u7ED3\\u679C\"})]})]})]}),aiSelectionResult&&aiSelectedProblems.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"ai-selection-result\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"\\uD83C\\uDFAF AI\\u9009\\u9898\\u7ED3\\u679C\"}),/*#__PURE__*/_jsx(\"div\",{className:\"ai-selected-problems\",children:aiSelectedProblems.map((selected,index)=>{const problem=problems.find(p=>p.id===selected.problem_id);return problem?/*#__PURE__*/_jsxs(\"div\",{className:\"ai-selected-problem\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"problem-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"problem-number\",children:index+1}),/*#__PURE__*/_jsx(\"span\",{className:\"problem-title\",children:problem.title}),/*#__PURE__*/_jsx(\"span\",{className:\"difficulty-badge \".concat(problem.difficulty),children:problem.difficulty==='easy'?'简单':problem.difficulty==='medium'?'中等':'困难'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"ai-reason\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u9009\\u62E9\\u7406\\u7531\\uFF1A\"}),selected.reason]}),/*#__PURE__*/_jsxs(\"div\",{className:\"ai-details\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"\\u96BE\\u5EA6\\uFF1A\",selected.difficulty_level]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"\\u6982\\u5FF5\\uFF1A\",selected.concept_coverage]})]})]},selected.problem_id):null;})}),aiSelectionResult.selection_summary&&/*#__PURE__*/_jsxs(\"div\",{className:\"ai-summary\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"AI\\u9009\\u9898\\u603B\\u7ED3\\uFF1A\"}),aiSelectionResult.selection_summary]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"problem-selection\",children:problems.map(problem=>/*#__PURE__*/_jsxs(\"label\",{className:\"problem-checkbox\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",value:problem.id,checked:assignmentForm.problem_ids.includes(problem.id),onChange:e=>{if(e.target.checked){setAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{problem_ids:[...prev.problem_ids,problem.id]}));}else{setAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{problem_ids:prev.problem_ids.filter(id=>id!==problem.id)}));}}}),/*#__PURE__*/_jsx(\"span\",{className:\"problem-title\",children:problem.title}),/*#__PURE__*/_jsx(\"span\",{className:\"difficulty-badge \".concat(problem.difficulty),children:problem.difficulty==='easy'?'简单':problem.difficulty==='medium'?'中等':'困难'})]},problem.id))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"submit-btn\",onClick:handleCreateAssignment,disabled:loading||!assignmentForm.name||!assignmentForm.description||!assignmentForm.requirements||!assignmentForm.due_date||!assignmentForm.course_id,children:loading?'创建中...':'布置作业'})})]})]}),activeSubTab==='add-student-to-course'&&editingCourse&&/*#__PURE__*/_jsxs(\"div\",{className:\"section-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\uD83D\\uDC65 \\u6DFB\\u52A0\\u5B66\\u751F\\u5230\\u8BFE\\u7A0B\\uFF1A\",editingCourse.name]}),/*#__PURE__*/_jsx(\"button\",{className:\"secondary-btn\",onClick:()=>setActiveSubTab('detail'),children:\"\\u2190 \\u8FD4\\u56DE\\u8BFE\\u7A0B\\u8BE6\\u60C5\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"add-student-to-course-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-help\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\u8BF7\\u9009\\u62E9\\u8981\\u6DFB\\u52A0\\u5230\\u8BE5\\u8BFE\\u7A0B\\u7684\\u5B66\\u751F\\uFF1A\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u6CE8\\u610F\\uFF1A\\u53EA\\u80FD\\u6DFB\\u52A0\\u5DF2\\u5B58\\u5728\\u7684\\u5B66\\u751F\\u8D26\\u53F7\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u5B66\\u53F7\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u5B66\\u53F7\",value:addStudentForm.student_no,onChange:e=>setAddStudentForm(prev=>_objectSpread(_objectSpread({},prev),{},{student_no:e.target.value}))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u59D3\\u540D\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u5B66\\u751F\\u59D3\\u540D\",value:addStudentForm.name,onChange:e=>setAddStudentForm(prev=>_objectSpread(_objectSpread({},prev),{},{name:e.target.value}))})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"submit-btn\",onClick:handleAddStudentToCourse,disabled:loading||!addStudentForm.student_no||!addStudentForm.name,children:loading?'添加中...':'添加学生到课程'})})]})]})]})]})]});// 学生相关处理函数\nconst handleAddStudent=async()=>{try{setLoading(true);setError('');setSuccess('');await registerStudent(addStudentForm);setSuccess('学生账号创建成功！');// 重置表单\nsetAddStudentForm({student_no:'',name:'',password:'',email:'',phone:'',school_id:'',department_id:'',major_id:'',class_id:''});// 刷新用户列表\nconst usersData=await getUsers(1,50,'student');setUsers(usersData.users);// 刷新课程列表（因为学生数量可能发生变化）\ntry{const coursesData=await getTeacherCourses();if(coursesData&&coursesData.courses){setCourses(coursesData.courses);}}catch(error){console.warn('刷新课程列表失败:',error);}// 切换到学生列表\nsetActiveSubTab('list');}catch(error){var _error$response9,_error$response9$data;setError(((_error$response9=error.response)===null||_error$response9===void 0?void 0:(_error$response9$data=_error$response9.data)===null||_error$response9$data===void 0?void 0:_error$response9$data.error)||'创建学生账号失败');}finally{setLoading(false);}};const handleEditStudentClick=user=>{setEditingUser(user);setEditForm({email:user.email||'',phone:user.phone||'',school_id:user.school_id||'',major_id:user.major_id||'',class_id:user.class_id||'',new_password:''});setError('');setSuccess('');};const handleSaveStudent=async()=>{if(!editingUser)return;try{setLoading(true);setError('');setSuccess('');await updateUser(editingUser.id,editForm);setSuccess('学生信息已更新');// 刷新列表\nconst usersData=await getUsers(1,50,'student');setUsers(usersData.users);// 刷新课程列表（因为学生数量可能发生变化）\ntry{const coursesData=await getTeacherCourses();if(coursesData&&coursesData.courses){setCourses(coursesData.courses);}}catch(error){console.warn('刷新课程列表失败:',error);}setEditingUser(null);}catch(error){var _error$response0,_error$response0$data;setError(((_error$response0=error.response)===null||_error$response0===void 0?void 0:(_error$response0$data=_error$response0.data)===null||_error$response0$data===void 0?void 0:_error$response0$data.error)||'更新学生信息失败');}finally{setLoading(false);}};const handleCancelEditStudent=()=>{setEditingUser(null);setEditForm({email:'',phone:'',school_id:'',major_id:'',class_id:'',new_password:''});};const handleDeleteStudent=async userId=>{if(!window.confirm('确定要删除该学生吗？此操作不可恢复。'))return;try{setLoading(true);setError('');setSuccess('');await deleteUser(userId);setSuccess('学生已删除');const usersData=await getUsers(1,50,'student');setUsers(usersData.users);// 刷新课程列表（因为学生数量可能发生变化）\ntry{const coursesData=await getTeacherCourses();if(coursesData&&coursesData.courses){setCourses(coursesData.courses);}}catch(error){console.warn('刷新课程列表失败:',error);}}catch(error){var _error$response1,_error$response1$data;setError(((_error$response1=error.response)===null||_error$response1===void 0?void 0:(_error$response1$data=_error$response1.data)===null||_error$response1$data===void 0?void 0:_error$response1$data.error)||'删除学生失败');}finally{setLoading(false);}};const handleAddStudentSchoolChange=async schoolId=>{setAddStudentForm(prev=>_objectSpread(_objectSpread({},prev),{},{school_id:schoolId,department_id:'',major_id:'',class_id:''}));// 不再重置全局的departments、majors和classes数组\n// 这些数组应该保持完整，用于学生列表显示\n};const handleAddStudentDepartmentChange=async departmentId=>{setAddStudentForm(prev=>_objectSpread(_objectSpread({},prev),{},{department_id:departmentId,major_id:'',class_id:''}));// 不再重置全局的majors和classes数组\n// 这些数组应该保持完整，用于学生列表显示\n};const handleAddStudentMajorChange=async majorId=>{setAddStudentForm(prev=>_objectSpread(_objectSpread({},prev),{},{major_id:majorId,class_id:''}));// 不再重置全局的classes数组\n// 这个数组应该保持完整，用于学生列表显示\n};// 选择题选项管理函数\nconst addChoiceOption=()=>{setProblemForm(prev=>{// 计算下一个可用的字母ID\nconst existingIds=prev.options.map(option=>option.id);let nextId='A';for(let i=0;i<26;i++){const candidateId=String.fromCharCode(65+i);// A, B, C, D...\nif(!existingIds.includes(candidateId)){nextId=candidateId;break;}}return _objectSpread(_objectSpread({},prev),{},{options:[...prev.options,{id:nextId,text:'',is_correct:false}]});});};const removeChoiceOption=optionId=>{setProblemForm(prev=>_objectSpread(_objectSpread({},prev),{},{options:prev.options.filter(option=>option.id!==optionId)}));};const updateChoiceOption=(optionId,field,value)=>{setProblemForm(prev=>_objectSpread(_objectSpread({},prev),{},{options:prev.options.map(option=>option.id===optionId?_objectSpread(_objectSpread({},option),{},{[field]:value}):option)}));};const toggleChoiceOptionCorrect=optionId=>{setProblemForm(prev=>{let updatedOptions;if(prev.type==='judge'){// 判断题：单选模式，点击一个选项时取消其他选项\nupdatedOptions=prev.options.map(option=>_objectSpread(_objectSpread({},option),{},{is_correct:option.id===optionId?!option.is_correct:false}));}else{// 选择题：多选模式，可以同时选择多个选项\nupdatedOptions=prev.options.map(option=>option.id===optionId?_objectSpread(_objectSpread({},option),{},{is_correct:!option.is_correct}):option);}// 更新正确答案数组 - 统一使用选项ID\nconst correctAnswers=updatedOptions.filter(option=>option.is_correct).map(option=>option.id);return _objectSpread(_objectSpread({},prev),{},{options:updatedOptions,correct_answers:correctAnswers});});};const handleProblemTypeChange=type=>{setProblemForm(prev=>{if(type==='choice'){// 切换到选择题时，初始化至少两个选项\nreturn _objectSpread(_objectSpread({},prev),{},{type,options:[{id:'A',text:'',is_correct:false},{id:'B',text:'',is_correct:false}],correct_answers:[],is_multiple_choice:false});}else if(type==='judge'){// 切换到判断题时，初始化两个固定选项\nreturn _objectSpread(_objectSpread({},prev),{},{type,options:[{id:'A',text:'正确',is_correct:false},{id:'B',text:'错误',is_correct:false}],correct_answers:[],is_multiple_choice:false});}else if(type==='short_answer'){// 切换到简答题时，清空选项相关字段，添加答案字段\nreturn _objectSpread(_objectSpread({},prev),{},{type,options:[],correct_answers:[],is_multiple_choice:false,answer:''// 简答题答案\n});}else{// 切换到其他题型时，清空选择题相关字段\nreturn _objectSpread(_objectSpread({},prev),{},{type,options:[],correct_answers:[],is_multiple_choice:false});}});};// 获取当前选中专业对应的班级列表（用于选择器显示）\nconst getCurrentMajorClasses=()=>{if(!selectedMajor)return[];const majorId=selectedMajor;const filteredClasses=classes.filter(classItem=>{const classMajorId=classItem.major_id;const isMatch=classMajorId===majorId||classMajorId===parseInt(majorId)||parseInt(classMajorId)===majorId;return isMatch;});return filteredClasses;};// 获取添加学生表单中选中学校对应的院部列表\nconst getAddStudentSchoolDepartments=()=>{if(!addStudentForm.school_id)return[];const schoolId=addStudentForm.school_id;const filteredDepartments=departments.filter(department=>{const deptSchoolId=department.school_id;const isMatch=deptSchoolId===schoolId||deptSchoolId===parseInt(schoolId)||parseInt(deptSchoolId)===schoolId;return isMatch;});return filteredDepartments;};// 获取添加学生表单中选中院部对应的专业列表\nconst getAddStudentDepartmentMajors=()=>{if(!addStudentForm.department_id)return[];const departmentId=addStudentForm.department_id;const filteredMajors=majors.filter(major=>{const majorDeptId=major.department_id;const isMatch=majorDeptId===departmentId||majorDeptId===parseInt(departmentId)||parseInt(majorDeptId)===departmentId;return isMatch;});return filteredMajors;};// 获取添加学生表单中选中专业对应的班级列表\nconst getAddStudentMajorClasses=()=>{if(!addStudentForm.major_id)return[];const majorId=addStudentForm.major_id;const filteredClasses=classes.filter(classItem=>{const classMajorId=classItem.major_id;const isMatch=classMajorId===majorId||classMajorId===parseInt(majorId)||parseInt(classMajorId)===majorId;return isMatch;});return filteredClasses;};// 获取编辑学生表单中选中学校对应的专业列表\nconst getEditStudentSchoolMajors=()=>{if(!editForm.school_id)return[];const schoolId=editForm.school_id;const filteredMajors=majors.filter(major=>{const majorSchoolId=major.school_id;const isMatch=majorSchoolId===schoolId||majorSchoolId===parseInt(schoolId)||parseInt(majorSchoolId)===schoolId;return isMatch;});return filteredMajors;};// 获取编辑学生表单中选中专业对应的班级列表\nconst getEditStudentMajorClasses=()=>{if(!editForm.major_id)return[];const majorId=editForm.major_id;const filteredClasses=classes.filter(classItem=>{const classMajorId=classItem.major_id;const isMatch=classMajorId===majorId||classMajorId===parseInt(majorId)||parseInt(classMajorId)===majorId;return isMatch;});return filteredClasses;};// 获取当前选中学校对应的院部列表\nconst getCurrentSchoolDepartments=()=>{if(!selectedSchool)return[];const schoolId=selectedSchool;const filteredDepartments=departments.filter(department=>{const deptSchoolId=department.school_id;const isMatch=deptSchoolId===schoolId||deptSchoolId===parseInt(schoolId)||parseInt(deptSchoolId)===schoolId;return isMatch;});return filteredDepartments;};// 获取当前选中院部对应的专业列表\nconst getCurrentDepartmentMajors=()=>{if(!selectedDepartment)return[];const departmentId=selectedDepartment;const filteredMajors=majors.filter(major=>{const majorDeptId=major.department_id;const isMatch=majorDeptId===departmentId||majorDeptId===parseInt(departmentId)||parseInt(majorDeptId)===departmentId;return isMatch;});return filteredMajors;};// 智能选题处理函数\nconst handleAiSelectProblems=async()=>{if(!aiSelectionForm.requirements.trim()){setError('请输入选题需求描述');return;}if(!editingCourse){setError('请先选择课程');return;}try{setIsAiSelecting(true);setError('');const result=await aiSelectProblems({requirements:aiSelectionForm.requirements,course_id:editingCourse.id,problem_count:aiSelectionForm.problem_count});setAiSelectedProblems(result.selected_problems||[]);setAiSelectionResult(result);setSuccess('AI智能选题成功！');// 自动将AI选择的题目添加到作业表单中\nconst selectedProblemIds=result.selected_problems.map(p=>p.problem_id);setAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{problem_ids:[...new Set([...prev.problem_ids,...selectedProblemIds])]}));}catch(error){setError(error.message||'AI选题失败，请重试');console.error('AI选题失败:',error);}finally{setIsAiSelecting(false);}};const handlePreviewAiSelection=async()=>{if(aiSelectedProblems.length===0){setError('没有AI选择的题目可预览');return;}try{const result=await previewAiSelectedProblems({selected_problem_ids:aiSelectedProblems.map(p=>p.problem_id)});// 可以在这里显示预览结果\nconsole.log('AI选题预览结果:',result);}catch(error){setError(error.message||'预览失败');console.error('预览失败:',error);}};const handleApplyAiSelection=()=>{if(aiSelectedProblems.length===0){setError('没有AI选择的题目可应用');return;}// 将AI选择的题目应用到作业表单\nconst selectedProblemIds=aiSelectedProblems.map(p=>p.problem_id);setAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{problem_ids:[...new Set([...prev.problem_ids,...selectedProblemIds])]}));setSuccess(\"\\u5DF2\\u5E94\\u7528AI\\u9009\\u62E9\\u7684\".concat(aiSelectedProblems.length,\"\\u9053\\u9898\\u76EE\"));};const handleClearAiSelection=()=>{setAiSelectedProblems([]);setAiSelectionResult(null);setAiSelectionForm({requirements:'',problem_count:3});};// 作业创建处理函数\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"teacher-dashboard\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"dashboard-header\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"\\u6559\\u5E08\\u7BA1\\u7406\\u63A7\\u5236\\u53F0\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-tabs\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"tab-btn \".concat(activeTab==='students'?'active':''),onClick:()=>{setActiveTab('students');setActiveSubTab('list');},children:\"\\u5B66\\u751F\\u7BA1\\u7406\"}),/*#__PURE__*/_jsx(\"button\",{className:\"tab-btn \".concat(activeTab==='problems'?'active':''),onClick:()=>{setActiveTab('problems');setActiveSubTab('list');},children:\"\\u9898\\u76EE\\u7BA1\\u7406\"}),/*#__PURE__*/_jsx(\"button\",{className:\"tab-btn \".concat(activeTab==='courses'?'active':''),onClick:()=>{setActiveTab('courses');setActiveSubTab('list');// 清除课程详情状态\nsetEditingCourse(null);setEditingAssignmentContext('');setAddingStudentContext('');},children:\"\\u6211\\u7684\\u8BFE\\u7A0B\"})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),success&&/*#__PURE__*/_jsx(\"div\",{className:\"success-message\",children:success}),activeTab==='students'&&renderStudentsTab(),activeTab==='problems'&&renderProblemsTab(),activeTab==='courses'&&renderCoursesTab(),activeTab==='courses'&&activeSubTab==='create-assignment'&&editingCourse&&/*#__PURE__*/_jsxs(\"div\",{className:\"tab-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\uD83D\\uDCDD \\u5E03\\u7F6E\\u4F5C\\u4E1A\\uFF08\",editingCourse.name,\"\\uFF09\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"secondary-btn\",onClick:()=>setActiveSubTab('detail'),children:\"\\u2190 \\u8FD4\\u56DE\\u8BFE\\u7A0B\\u8BE6\\u60C5\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"assignment-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u4F5C\\u4E1A\\u540D\\u79F0\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u4F5C\\u4E1A\\u540D\\u79F0\",value:assignmentForm.name,onChange:e=>setAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{name:e.target.value}))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u8BFE\\u7A0B\\uFF1A\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:editingCourse.name,disabled:true,className:\"disabled-input\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u4F5C\\u4E1A\\u63CF\\u8FF0\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"\\u8BF7\\u8F93\\u5165\\u4F5C\\u4E1A\\u63CF\\u8FF0\",value:assignmentForm.description,onChange:e=>setAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{description:e.target.value})),rows:4})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u4F5C\\u4E1A\\u8981\\u6C42\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"\\u8BF7\\u8F93\\u5165\\u4F5C\\u4E1A\\u8981\\u6C42\",value:assignmentForm.requirements,onChange:e=>setAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{requirements:e.target.value})),rows:4})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u622A\\u6B62\\u65F6\\u95F4\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"datetime-local\",value:assignmentForm.due_date,onChange:e=>setAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{due_date:e.target.value}))})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"overdue-settings-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uD83D\\uDCDD \\u8865\\u4EA4\\u4F5C\\u4E1A\\u8BBE\\u7F6E\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"checkbox-label\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:assignmentForm.allow_overdue_submission,onChange:e=>setAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{allow_overdue_submission:e.target.checked}))}),/*#__PURE__*/_jsx(\"span\",{children:\"\\u5141\\u8BB8\\u8865\\u4EA4\\u4F5C\\u4E1A\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-help\",children:\"\\u52FE\\u9009\\u6B64\\u9879\\u540E\\uFF0C\\u5B66\\u751F\\u53EF\\u4EE5\\u5728\\u622A\\u6B62\\u65F6\\u95F4\\u540E\\u8865\\u4EA4\\u4F5C\\u4E1A\\uFF08\\u9700\\u8981\\u6559\\u5E08\\u7279\\u522B\\u6388\\u6743\\uFF09\"})]}),assignmentForm.allow_overdue_submission&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u8865\\u4EA4\\u622A\\u6B62\\u65F6\\u95F4\\uFF1A\"}),/*#__PURE__*/_jsx(\"input\",{type:\"datetime-local\",value:assignmentForm.overdue_deadline,onChange:e=>setAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{overdue_deadline:e.target.value})),min:assignmentForm.due_date}),/*#__PURE__*/_jsx(\"div\",{className:\"form-help\",children:\"\\u8BBE\\u7F6E\\u8865\\u4EA4\\u7684\\u6700\\u7EC8\\u622A\\u6B62\\u65F6\\u95F4\\uFF0C\\u5FC5\\u987B\\u665A\\u4E8E\\u6B63\\u5E38\\u622A\\u6B62\\u65F6\\u95F4\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u903E\\u671F\\u5F97\\u5206\\u6BD4\\u4F8B\\uFF1A\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"score-ratio-control\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"0\",max:\"1\",step:\"0.1\",value:assignmentForm.overdue_score_ratio,onChange:e=>setAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{overdue_score_ratio:parseFloat(e.target.value)}))}),/*#__PURE__*/_jsxs(\"span\",{className:\"score-ratio-display\",children:[Math.round(assignmentForm.overdue_score_ratio*100),\"%\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-help\",children:\"\\u903E\\u671F\\u63D0\\u4EA4\\u7684\\u4F5C\\u4E1A\\u5C06\\u6309\\u6B64\\u6BD4\\u4F8B\\u5F97\\u5206\\uFF080% = \\u4E0D\\u5F97\\u5206\\uFF0C100% = \\u6B63\\u5E38\\u5F97\\u5206\\uFF09\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u8865\\u4EA4\\u8BF4\\u660E\\uFF1A\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"overdue-info-box\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uD83D\\uDCA1 \",/*#__PURE__*/_jsx(\"strong\",{children:\"\\u8865\\u4EA4\\u673A\\u5236\\u8BF4\\u660E\\uFF1A\"})]}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"\\u53EA\\u6709\\u88AB\\u6559\\u5E08\\u6DFB\\u52A0\\u5230\\u767D\\u540D\\u5355\\u7684\\u5B66\\u751F\\u53EF\\u4EE5\\u8865\\u4EA4\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u8865\\u4EA4\\u622A\\u6B62\\u65F6\\u95F4\\u540E\\uFF0C\\u7CFB\\u7EDF\\u5C06\\u62D2\\u7EDD\\u6240\\u6709\\u8865\\u4EA4\\u8BF7\\u6C42\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u903E\\u671F\\u63D0\\u4EA4\\u7684\\u4F5C\\u4E1A\\u4F1A\\u6807\\u8BB0\\u4E3A\\\"\\u903E\\u671F\\u63D0\\u4EA4\\\"\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u8865\\u4EA4\\u4F5C\\u4E1A\\u7684\\u5F97\\u5206\\u5C06\\u6309\\u8BBE\\u5B9A\\u6BD4\\u4F8B\\u8BA1\\u7B97\"})]})]})]})]})]}),isEditingAssignment&&editingAssignment&&assignmentForm.allow_overdue_submission&&/*#__PURE__*/_jsx(\"div\",{className:\"whitelist-section\",children:/*#__PURE__*/_jsx(AssignmentWhitelistManager,{assignment:editingAssignment,onUpdate:()=>{// 刷新作业数据\nif(editingCourse){getCourseAssignments().then(data=>{setAssignments(data.assignments||[]);});}}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u9009\\u62E9\\u9898\\u76EE\\uFF1A\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"ai-selection-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"ai-selection-header\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uD83E\\uDD16 AI\\u667A\\u80FD\\u9009\\u9898\"}),/*#__PURE__*/_jsx(\"p\",{className:\"ai-selection-desc\",children:\"\\u8F93\\u5165\\u9009\\u9898\\u9700\\u6C42\\uFF0CAI\\u5C06\\u81EA\\u52A8\\u4ECE\\u9898\\u76EE\\u5E93\\u4E2D\\u9009\\u62E9\\u6700\\u5408\\u9002\\u7684\\u9898\\u76EE\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"ai-selection-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u9009\\u9898\\u9700\\u6C42\\u63CF\\u8FF0\\uFF1A\"}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"\\u4F8B\\u5982\\uFF1A\\u9700\\u89813\\u9053\\u5173\\u4E8E\\u6570\\u7EC4\\u548C\\u5FAA\\u73AF\\u7684\\u9898\\u76EE\\uFF0C\\u96BE\\u5EA6\\u4ECE\\u7B80\\u5355\\u5230\\u56F0\\u96BE\\uFF0C\\u9002\\u5408\\u5927\\u4E00\\u5B66\\u751F\",value:aiSelectionForm.requirements,onChange:e=>setAiSelectionForm(prev=>_objectSpread(_objectSpread({},prev),{},{requirements:e.target.value})),rows:3})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u9898\\u76EE\\u6570\\u91CF\\uFF1A\"}),/*#__PURE__*/_jsxs(\"select\",{value:aiSelectionForm.problem_count,onChange:e=>setAiSelectionForm(prev=>_objectSpread(_objectSpread({},prev),{},{problem_count:parseInt(e.target.value)})),children:[/*#__PURE__*/_jsx(\"option\",{value:1,children:\"1\\u9898\"}),/*#__PURE__*/_jsx(\"option\",{value:2,children:\"2\\u9898\"}),/*#__PURE__*/_jsx(\"option\",{value:3,children:\"3\\u9898\"}),/*#__PURE__*/_jsx(\"option\",{value:4,children:\"4\\u9898\"}),/*#__PURE__*/_jsx(\"option\",{value:5,children:\"5\\u9898\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"ai-selection-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"ai-select-btn\",onClick:handleAiSelectProblems,disabled:isAiSelecting||!aiSelectionForm.requirements.trim(),children:isAiSelecting?'AI选题中...':'🤖 开始AI选题'}),aiSelectedProblems.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{className:\"preview-btn\",onClick:handlePreviewAiSelection,children:\"\\uD83D\\uDC41\\uFE0F \\u9884\\u89C8\\u7ED3\\u679C\"}),/*#__PURE__*/_jsx(\"button\",{className:\"apply-btn\",onClick:handleApplyAiSelection,children:\"\\u2705 \\u5E94\\u7528\\u9009\\u9898\"}),/*#__PURE__*/_jsx(\"button\",{className:\"clear-btn\",onClick:handleClearAiSelection,children:\"\\uD83D\\uDDD1\\uFE0F \\u6E05\\u7A7A\\u7ED3\\u679C\"})]})]})]}),aiSelectionResult&&aiSelectedProblems.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"ai-selection-result\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"\\uD83C\\uDFAF AI\\u9009\\u9898\\u7ED3\\u679C\"}),/*#__PURE__*/_jsx(\"div\",{className:\"ai-selected-problems\",children:aiSelectedProblems.map((selected,index)=>{const problem=problems.find(p=>p.id===selected.problem_id);return problem?/*#__PURE__*/_jsxs(\"div\",{className:\"ai-selected-problem\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"problem-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"problem-number\",children:index+1}),/*#__PURE__*/_jsx(\"span\",{className:\"problem-title\",children:problem.title}),/*#__PURE__*/_jsx(\"span\",{className:\"difficulty-badge \".concat(problem.difficulty),children:problem.difficulty==='easy'?'简单':problem.difficulty==='medium'?'中等':'困难'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"ai-reason\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u9009\\u62E9\\u7406\\u7531\\uFF1A\"}),selected.reason]}),/*#__PURE__*/_jsxs(\"div\",{className:\"ai-details\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"\\u96BE\\u5EA6\\uFF1A\",selected.difficulty_level]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"\\u6982\\u5FF5\\uFF1A\",selected.concept_coverage]})]})]},selected.problem_id):null;})}),aiSelectionResult.selection_summary&&/*#__PURE__*/_jsxs(\"div\",{className:\"ai-summary\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"AI\\u9009\\u9898\\u603B\\u7ED3\\uFF1A\"}),aiSelectionResult.selection_summary]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"problem-selection\",children:problems.map(problem=>/*#__PURE__*/_jsxs(\"label\",{className:\"problem-checkbox\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",value:problem.id,checked:assignmentForm.problem_ids.includes(problem.id),onChange:e=>{if(e.target.checked){setAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{problem_ids:[...prev.problem_ids,problem.id]}));}else{setAssignmentForm(prev=>_objectSpread(_objectSpread({},prev),{},{problem_ids:prev.problem_ids.filter(id=>id!==problem.id)}));}}}),/*#__PURE__*/_jsx(\"span\",{className:\"problem-title\",children:problem.title}),/*#__PURE__*/_jsx(\"span\",{className:\"difficulty-badge \".concat(problem.difficulty),children:problem.difficulty==='easy'?'简单':problem.difficulty==='medium'?'中等':'困难'})]},problem.id))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"submit-btn\",onClick:handleCreateAssignment,disabled:loading||!assignmentForm.name||!assignmentForm.description||!assignmentForm.requirements||!assignmentForm.due_date||!assignmentForm.course_id,children:loading?'创建中...':'布置作业'})})]})]}),activeTab==='courses'&&activeSubTab==='add-student-to-course'&&editingCourse&&/*#__PURE__*/_jsxs(\"div\",{className:\"tab-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\uD83D\\uDC65 \\u6DFB\\u52A0\\u5B66\\u751F\\u5230\\u8BFE\\u7A0B\\uFF1A\",editingCourse.name]}),/*#__PURE__*/_jsx(\"button\",{className:\"secondary-btn\",onClick:()=>setActiveSubTab('detail'),children:\"\\u2190 \\u8FD4\\u56DE\\u8BFE\\u7A0B\\u8BE6\\u60C5\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"add-student-to-course-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-help\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\u8BF7\\u9009\\u62E9\\u8981\\u6DFB\\u52A0\\u5230\\u8BE5\\u8BFE\\u7A0B\\u7684\\u5B66\\u751F\\uFF1A\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u6CE8\\u610F\\uFF1A\\u53EA\\u80FD\\u6DFB\\u52A0\\u5DF2\\u5B58\\u5728\\u7684\\u5B66\\u751F\\u8D26\\u53F7\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u5B66\\u53F7\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u5B66\\u53F7\",value:addStudentForm.student_no,onChange:e=>setAddStudentForm(prev=>_objectSpread(_objectSpread({},prev),{},{student_no:e.target.value}))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u59D3\\u540D\\uFF1A\",/*#__PURE__*/_jsx(\"span\",{className:\"required-mark\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u8BF7\\u8F93\\u5165\\u5B66\\u751F\\u59D3\\u540D\",value:addStudentForm.name,onChange:e=>setAddStudentForm(prev=>_objectSpread(_objectSpread({},prev),{},{name:e.target.value}))})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"submit-btn\",onClick:handleAddStudentToCourse,disabled:loading||!addStudentForm.student_no||!addStudentForm.name,children:loading?'添加中...':'添加学生到课程'})})]})]}),editingUser&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"modal-header\",children:/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\u7F16\\u8F91\\u5B66\\u751F\\uFF1A\",editingUser.name,\"\\uFF08\\u5B66\\u53F7\",editingUser.username,\"\\uFF09\"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-body\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u90AE\\u7BB1\\uFF1A\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:editForm.email,onChange:e=>setEditForm(prev=>_objectSpread(_objectSpread({},prev),{},{email:e.target.value}))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u624B\\u673A\\u53F7\\uFF1A\"}),/*#__PURE__*/_jsx(\"input\",{type:\"tel\",value:editForm.phone,onChange:e=>setEditForm(prev=>_objectSpread(_objectSpread({},prev),{},{phone:e.target.value}))})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u5B66\\u6821\\uFF1A\"}),/*#__PURE__*/_jsxs(\"select\",{value:editForm.school_id,onChange:e=>{const val=e.target.value;setEditForm(prev=>_objectSpread(_objectSpread({},prev),{},{school_id:val,major_id:'',class_id:''}));},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\u8BF7\\u9009\\u62E9\\u5B66\\u6821\"}),schools.map(s=>/*#__PURE__*/_jsx(\"option\",{value:s.id,children:s.name},s.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u4E13\\u4E1A\\uFF1A\"}),/*#__PURE__*/_jsxs(\"select\",{value:editForm.major_id,onChange:e=>{const val=e.target.value;setEditForm(prev=>_objectSpread(_objectSpread({},prev),{},{major_id:val,class_id:''}));},disabled:!editForm.school_id,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\u8BF7\\u9009\\u62E9\\u4E13\\u4E1A\"}),getEditStudentSchoolMajors().map(m=>/*#__PURE__*/_jsx(\"option\",{value:m.id,children:m.name},m.id))]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u73ED\\u7EA7\\uFF1A\"}),/*#__PURE__*/_jsxs(\"select\",{value:editForm.class_id,onChange:e=>setEditForm(prev=>_objectSpread(_objectSpread({},prev),{},{class_id:e.target.value})),disabled:!editForm.major_id,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\u8BF7\\u9009\\u62E9\\u73ED\\u7EA7\"}),getEditStudentMajorClasses().map(c=>/*#__PURE__*/_jsx(\"option\",{value:c.id,children:c.name},c.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u91CD\\u7F6E\\u5BC6\\u7801\\uFF08\\u53EF\\u9009\\uFF09\\uFF1A\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:editForm.new_password,onChange:e=>setEditForm(prev=>_objectSpread(_objectSpread({},prev),{},{new_password:e.target.value}))})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-footer\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"secondary-btn\",onClick:handleCancelEditStudent,children:\"\\u53D6\\u6D88\"}),/*#__PURE__*/_jsx(\"button\",{className:\"submit-btn\",onClick:handleSaveStudent,disabled:loading,children:loading?'保存中...':'保存'})]})]})})]});};export default TeacherDashboardPage;","map":{"version":3,"names":["React","useState","useEffect","useCallback","getUsers","getSchools","getMajors","getClasses","getProblems","createProblem","updateProblem","deleteProblem","updateUser","deleteUser","registerStudent","getTeacherCourses","getCourseAssignments","createAssignment","updateAssignment","deleteAssignment","getCourseStudents","addStudentToCourse","removeStudentFromCourse","getDepartments","batchImportStudentsFromExcel","excludeOriginalStudent","aiSelectProblems","previewAiSelectedProblems","XLSX","AIProblemGenerationPage","AssignmentWhitelistManager","mockCourses","mockAssignments","formatDate","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TeacherDashboardPage","activeTab","setActiveTab","activeSubTab","setActiveSubTab","users","setUsers","problems","setProblems","schools","setSchools","departments","setDepartments","majors","setMajors","classes","setClasses","loading","setLoading","error","setError","success","setSuccess","selectedSchool","setSelectedSchool","selectedDepartment","setSelectedDepartment","selectedMajor","setSelectedMajor","selectedClass","setSelectedClass","uploadedFile","setUploadedFile","problemForm","setProblemForm","title","description","type","testCases","difficulty","time_limit","memory_limit","options","correct_answers","is_multiple_choice","answer","scrollAnimations","setScrollAnimations","formVisible","bottomFormVisible","courseDetailAnimations","setCourseDetailAnimations","courseInfoVisible","studentsSectionVisible","assignmentsSectionVisible","editingProblem","setEditingProblem","isEditing","setIsEditing","currentPage","setCurrentPage","perPage","setPerPage","totalProblems","setTotalProblems","totalPages","setTotalPages","addTestCase","newTestCase","id","Date","now","Math","random","input","output","prev","_objectSpread","removeTestCase","testCaseId","filter","tc","updateTestCase","field","value","map","parseTestCases","testCasesStr","expectedOutputStr","trim","startsWith","parsed","JSON","parse","Array","isArray","idx","String","e","console","warn","split","line","expectedOutputs","maxLength","max","length","result","i","push","addStudentForm","setAddStudentForm","student_no","name","password","email","phone","school_id","department_id","major_id","class_id","editingUser","setEditingUser","editForm","setEditForm","new_password","courses","setCourses","editingCourse","setEditingCourse","assignments","setAssignments","assignmentForm","setAssignmentForm","requirements","due_date","course_id","problem_ids","allow_overdue_submission","overdue_deadline","overdue_score_ratio","editingAssignment","setEditingAssignment","isEditingAssignment","setIsEditingAssignment","editingAssignmentContext","setEditingAssignmentContext","addingStudentContext","setAddingStudentContext","studentClassRelations","setStudentClassRelations","aiSelectionForm","setAiSelectionForm","problem_count","aiSelectedProblems","setAiSelectedProblems","isAiSelecting","setIsAiSelecting","aiSelectionResult","setAiSelectionResult","fetchInitialData","handleScroll","scrollY","window","windowHeight","innerHeight","documentHeight","document","documentElement","scrollHeight","addEventListener","removeEventListener","handleCourseDetailScroll","handleStorageChange","key","newValue","log","localStorage","removeItem","fetchProblems","handleProblemCreated","handleMessage","data","shouldRefresh","getItem","fetchStudentClassRelations","courseId","courseStudentsData","apiRelations","student","student_id","student_name","added_at","toISOString","page","arguments","undefined","problemsData","total","pages","concat","handlePageChange","newPage","handlePerPageChange","newPerPage","loadCourseStudents","schoolsData","usersData","Promise","all","fetchAllMajorsAndClasses","forEach","problem","index","coursesData","assignmentsData","_error$response","response","message","_error$response2","_error$response2$data","isLoading","schoolsToUse","allDepartments","allMajors","allClasses","school","departmentsData","majorsData","major","classesData","handleSchoolChange","schoolId","handleDepartmentChange","departmentId","handleMajorChange","majorId","handleBatchImport","_resp$success_count","_resp$failed_count","formData","FormData","append","resp","msg","success_count","failed_count","errors","preview","slice","join","_error$response3","_error$response3$data","handleDownloadTemplate","templateData","workbook","utils","book_new","worksheet","aoa_to_sheet","colWidths","wch","book_append_sheet","writeFile","handleFileUpload","event","file","target","files","validTypes","fileExtension","substring","lastIndexOf","toLowerCase","includes","size","handleRemoveFile","handleCreateProblem","submitData","choice_options","option","text","expected_output","Error","structured","test_cases","stringify","_error$response4","_error$response4$data","handleEditProblem","initialOptions","initialCorrectAnswers","optionLines","match","is_correct","fromCharCode","correctAnswers","ans","correctAnswer","handleDeleteProblem","problemId","confirm","_error$response5","_error$response5$data","inferProblemType","choices","alternatives","option_list","optionTexts","opt","option_text","content","label","solution","correct_answer","answer_text","test_cases_text","test_input","expectedOutput","expected_result","expected_answer","getSchoolName","find","s","sId","parseInt","getMajorName","m","mId","getClassName","classId","classItem","c","cId","handleCancelEdit","handleViewCourseDetail","course","handleCreateAssignment","assignmentData","_error$response6","_error$response6$data","handleEditAssignment","assignment","handleDeleteAssignment","assignmentId","_error$response7","_error$response7$data","handleAddStudentToCourse","existingStudent","user","username","role","payload","updatedCourse","apiError","_apiError$response","_apiError$response$da","_error$response8","_error$response8$data","handleRemoveStudentFromCourse","relationId","studentId","_apiError$response2","_apiError$response2$d","renderStudentsTab","className","children","onClick","handleEditStudentClick","handleDeleteStudent","style","display","gridTemplateColumns","gap","placeholder","onChange","handleAddStudentSchoolChange","handleAddStudentDepartmentChange","disabled","getAddStudentSchoolDepartments","department","fontSize","color","marginTop","handleAddStudentMajorChange","getAddStudentDepartmentMajors","getAddStudentMajorClasses","handleAddStudent","visibility","opacity","background","padding","borderRadius","borderLeft","marginBottom","fontWeight","margin","lineHeight","paddingLeft","getCurrentSchoolDepartments","getCurrentDepartmentMajors","getCurrentMajorClasses","accept","renderProblemsTab","Object","keys","inferredType","displayType","min","maxVisiblePages","startPage","floor","endPage","handleProblemTypeChange","checked","rows","toggleChoiceOptionCorrect","removeChoiceOption","updateChoiceOption","addChoiceOption","readOnly","testCase","some","renderCoursesTab","cursor","display_class_name","class_name","teaching_class_name","major_name","school_name","student_count","created_at","courseStudents","originalStudents","relatedStudents","relation","studentInfo","isRelatedStudent","colSpan","_apiError$response3","_apiError$response3$d","is_active","round","handleAiSelectProblems","handlePreviewAiSelection","handleApplyAiSelection","handleClearAiSelection","selected","p","problem_id","reason","difficulty_level","concept_coverage","selection_summary","_error$response9","_error$response9$data","handleSaveStudent","_error$response0","_error$response0$data","handleCancelEditStudent","userId","_error$response1","_error$response1$data","existingIds","nextId","candidateId","optionId","updatedOptions","filteredClasses","classMajorId","isMatch","filteredDepartments","deptSchoolId","filteredMajors","majorDeptId","getEditStudentSchoolMajors","majorSchoolId","getEditStudentMajorClasses","selected_problems","selectedProblemIds","Set","selected_problem_ids","step","parseFloat","onUpdate","then","val"],"sources":["/Volumes/坞城/OJ_1/frontend/src/pages/TeacherDashboardPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { getUsers, getSchools, getMajors, getClasses, getProblems, createProblem, updateProblem, deleteProblem, updateUser, deleteUser, registerStudent, getTeacherCourses, getCourseAssignments, createAssignment, updateAssignment, deleteAssignment, getCourseStudents, addStudentToCourse, removeStudentFromCourse, getDepartments, batchImportStudentsFromExcel, excludeOriginalStudent, aiSelectProblems, previewAiSelectedProblems } from '../services/api';\nimport * as XLSX from 'xlsx';\nimport './TeacherDashboardPage.css';\nimport AIProblemGenerationPage from './AIProblemGenerationPage';\nimport AssignmentWhitelistManager from '../components/AssignmentWhitelistManager';\nimport { mockCourses, mockAssignments, formatDate } from '../testData/courses';\n\nconst TeacherDashboardPage = () => {\n  const [activeTab, setActiveTab] = useState('students');\n  const [activeSubTab, setActiveSubTab] = useState('list'); // 子标签页\n  const [users, setUsers] = useState([]);\n  const [problems, setProblems] = useState([]);\n  const [schools, setSchools] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [majors, setMajors] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  // 批量导入相关状态\n  const [selectedSchool, setSelectedSchool] = useState('');\n  const [selectedDepartment, setSelectedDepartment] = useState('');\n  const [selectedMajor, setSelectedMajor] = useState('');\n  const [selectedClass, setSelectedClass] = useState('');\n  const [uploadedFile, setUploadedFile] = useState(null);\n\n  // 手动创建题目相关状态\n  const [problemForm, setProblemForm] = useState({\n    title: '',\n    description: '',\n    type: 'programming', // 题目类型：programming(编程题), choice(选择题), judge(判断题), short_answer(简答题)\n    testCases: [], // 测试用例数组，每个元素包含 {id, input, output}\n    difficulty: 'easy',\n    time_limit: 1000,\n    memory_limit: 128,\n    // 选择题相关字段\n    options: [], // 选项数组\n    correct_answers: [], // 正确答案数组（支持多选）\n    is_multiple_choice: false, // 是否多选\n    // 简答题相关字段\n    answer: '' // 简答题答案\n  });\n\n  // 滚动动画相关状态\n  const [scrollAnimations, setScrollAnimations] = useState({\n    formVisible: false,\n    bottomFormVisible: false\n  });\n\n  // 课程详情页荷叶式动画状态\n  const [courseDetailAnimations, setCourseDetailAnimations] = useState({\n    courseInfoVisible: false,\n    studentsSectionVisible: false,\n    assignmentsSectionVisible: false\n  });\n  \n\n  // 编辑题目状态\n  const [editingProblem, setEditingProblem] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n\n  // 分页相关状态\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(20); // 每页显示20个题目\n  const [totalProblems, setTotalProblems] = useState(0);\n  const [totalPages, setTotalPages] = useState(0);\n\n  // 测试用例管理函数\n  const addTestCase = () => {\n    const newTestCase = {\n      id: Date.now() + Math.random(), // 生成唯一ID\n      input: '',\n      output: ''\n    };\n    setProblemForm(prev => ({\n      ...prev,\n      testCases: [...prev.testCases, newTestCase]\n    }));\n  };\n\n  const removeTestCase = (testCaseId) => {\n    setProblemForm(prev => ({\n      ...prev,\n      testCases: prev.testCases.filter(tc => tc.id !== testCaseId)\n    }));\n  };\n\n  const updateTestCase = (testCaseId, field, value) => {\n    setProblemForm(prev => ({\n      ...prev,\n      testCases: prev.testCases.map(tc => \n        tc.id === testCaseId ? { ...tc, [field]: value } : tc\n      )\n    }));\n  };\n\n  // 解析后端测试用例格式的函数\n  const parseTestCases = (testCasesStr, expectedOutputStr) => {\n    if (!testCasesStr && !expectedOutputStr) {\n      return [];\n    }\n    \n    // 优先尝试解析JSON数组格式：[ { input, output }, ... ]\n    try {\n      if (testCasesStr && testCasesStr.trim().startsWith('[')) {\n        const parsed = JSON.parse(testCasesStr);\n        if (Array.isArray(parsed)) {\n          return parsed.map((tc, idx) => ({\n            id: Date.now() + Math.random() + idx,\n            input: (tc && typeof tc.input !== 'undefined') ? String(tc.input) : '',\n            output: (tc && typeof tc.output !== 'undefined') ? String(tc.output) : ''\n          }));\n        }\n      }\n    } catch (e) {\n      // JSON解析失败则回退到旧格式\n      console.warn('解析JSON测试用例失败，回退旧格式:', e);\n    }\n    \n    const testCases = testCasesStr ? testCasesStr.split('\\n').filter(line => line.trim()) : [];\n    const expectedOutputs = expectedOutputStr ? expectedOutputStr.split('\\n').filter(line => line.trim()) : [];\n    \n    const maxLength = Math.max(testCases.length, expectedOutputs.length);\n    \n    const result = [];\n    for (let i = 0; i < maxLength; i++) {\n      result.push({\n        id: Date.now() + Math.random() + i, // 生成唯一ID\n        input: testCases[i] || '', // 如果没有输入则使用空字符串\n        output: expectedOutputs[i] || '' // 输出是必填的\n      });\n    }\n    \n    return result;\n  };\n\n  // 添加学生相关状态（按新规则：学号、姓名、密码必填）\n  const [addStudentForm, setAddStudentForm] = useState({\n    student_no: '',\n    name: '',\n    password: '',\n    email: '',\n    phone: '',\n    school_id: '',\n    department_id: '',\n    major_id: '',\n    class_id: ''\n  });\n\n  // 学生编辑相关状态\n  const [editingUser, setEditingUser] = useState(null);\n  const [editForm, setEditForm] = useState({\n    email: '',\n    phone: '',\n    school_id: '',\n    major_id: '',\n    class_id: '',\n    new_password: ''\n  });\n\n  // 课程相关状态（只读，用于查看）\n  const [courses, setCourses] = useState([]);\n  const [editingCourse, setEditingCourse] = useState(null);\n\n  // 作业相关状态\n  const [assignments, setAssignments] = useState([]);\n  const [assignmentForm, setAssignmentForm] = useState({\n    name: '',\n    description: '',\n    requirements: '',\n    due_date: '',\n    course_id: '',\n    problem_ids: [],\n    // 补交作业相关字段\n    allow_overdue_submission: false,\n    overdue_deadline: '',\n    overdue_score_ratio: 0.8\n  });\n\n  // 编辑作业状态\n  const [editingAssignment, setEditingAssignment] = useState(null);\n  const [isEditingAssignment, setIsEditingAssignment] = useState(false);\n  const [editingAssignmentContext, setEditingAssignmentContext] = useState(''); // 记录编辑作业时的上下文\n  \n  // 添加学生到课程的状态\n  const [addingStudentContext, setAddingStudentContext] = useState(''); // 记录添加学生时的上下文\n  \n  // 学生-教学班关联关系状态\n  const [studentClassRelations, setStudentClassRelations] = useState([]); // 存储学生与教学班的关联关系\n\n  // 智能选题相关状态\n  const [aiSelectionForm, setAiSelectionForm] = useState({\n    requirements: '',\n    problem_count: 3\n  });\n  const [aiSelectedProblems, setAiSelectedProblems] = useState([]);\n  const [isAiSelecting, setIsAiSelecting] = useState(false);\n  const [aiSelectionResult, setAiSelectionResult] = useState(null);\n\n  useEffect(() => {\n    fetchInitialData();\n  }, []);\n\n  // 滚动监听和动画触发\n  useEffect(() => {\n    const handleScroll = () => {\n      const scrollY = window.scrollY;\n      const windowHeight = window.innerHeight;\n      const documentHeight = document.documentElement.scrollHeight;\n      \n      // 检测表单是否进入视口\n      if (scrollY > 100) {\n        setScrollAnimations(prev => ({ ...prev, formVisible: true }));\n      }\n      \n      // 检测是否接近底部，触发底部表单动画\n      if (scrollY + windowHeight > documentHeight - 200) {\n        setScrollAnimations(prev => ({ ...prev, bottomFormVisible: true }));\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    \n    // 初始触发\n    handleScroll();\n    \n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  // 课程详情页荷叶式动画滚动监听\n  useEffect(() => {\n    if (activeSubTab === 'detail' && editingCourse) {\n      const handleCourseDetailScroll = () => {\n        const scrollY = window.scrollY;\n        const windowHeight = window.innerHeight;\n        \n        // 课程基本信息 - 当滚动到页面中央时浮现\n        if (scrollY > windowHeight * 0.3) {\n          setCourseDetailAnimations(prev => ({ ...prev, courseInfoVisible: true }));\n        }\n        \n        // 教学班学生 - 当滚动到页面中央偏下时浮现\n        if (scrollY > windowHeight * 0.6) {\n          setCourseDetailAnimations(prev => ({ ...prev, studentsSectionVisible: true }));\n        }\n        \n        // 已布置作业 - 当滚动到页面底部时浮现\n        if (scrollY > windowHeight * 0.9) {\n          setCourseDetailAnimations(prev => ({ ...prev, assignmentsSectionVisible: true }));\n        }\n      };\n\n      window.addEventListener('scroll', handleCourseDetailScroll);\n      \n      // 初始触发\n      handleCourseDetailScroll();\n      \n      return () => window.removeEventListener('scroll', handleCourseDetailScroll);\n    }\n  }, [activeSubTab, editingCourse]);\n\n  useEffect(() => {\n    fetchInitialData();\n    \n    // 监听多种通知方式，用于AI生题成功后的数据刷新\n    const handleStorageChange = (e) => {\n      if (e.key === 'refreshProblems' && e.newValue === 'true') {\n        console.log('检测到题目创建成功标记，自动刷新题目列表');\n        // 清除标记\n        localStorage.removeItem('refreshProblems');\n        // 刷新题目列表\n        fetchProblems();\n      }\n    };\n    \n    const handleProblemCreated = (e) => {\n      console.log('检测到题目创建成功事件，自动刷新题目列表');\n      fetchProblems();\n    };\n    \n    const handleMessage = (e) => {\n      if (e.data && e.data.type === 'PROBLEM_CREATED') {\n        console.log('检测到题目创建成功消息，自动刷新题目列表');\n        fetchProblems();\n      }\n    };\n    \n    // 监听storage事件（跨标签页）\n    window.addEventListener('storage', handleStorageChange);\n    \n    // 监听自定义事件\n    window.addEventListener('problemCreated', handleProblemCreated);\n    \n    // 监听postMessage\n    window.addEventListener('message', handleMessage);\n    \n    // 检查是否需要刷新（当前标签页）\n    const shouldRefresh = localStorage.getItem('refreshProblems');\n    if (shouldRefresh === 'true') {\n      console.log('检测到题目创建成功标记，自动刷新题目列表');\n      localStorage.removeItem('refreshProblems');\n      fetchProblems();\n    }\n    \n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n      window.removeEventListener('problemCreated', handleProblemCreated);\n      window.removeEventListener('message', handleMessage);\n    };\n  }, []);\n\n  // 从API加载学生-课程关联关系\n  const fetchStudentClassRelations = async (courseId) => {\n    try {\n      const courseStudentsData = await getCourseStudents(courseId);\n      if (courseStudentsData && courseStudentsData.length > 0) {\n        const apiRelations = courseStudentsData.map(student => ({\n          student_id: student.student_id,\n          class_id: student.class_id,\n          course_id: courseId,\n          student_name: student.student_name,\n          student_no: student.student_no,\n          added_at: student.added_at || new Date().toISOString()\n        }));\n        setStudentClassRelations(apiRelations);\n      } else {\n        setStudentClassRelations([]);\n      }\n    } catch (error) {\n      console.error('获取课程学生关联关系失败:', error);\n      setStudentClassRelations([]);\n    }\n  };\n\n  // 刷新题目列表\n  const fetchProblems = async (page = currentPage) => {\n    try {\n      const problemsData = await getProblems(page, perPage);\n      if (problemsData && problemsData.problems) {\n        setProblems(problemsData.problems);\n        setTotalProblems(problemsData.total);\n        setTotalPages(problemsData.pages);\n        setCurrentPage(page);\n        console.log(`题目列表刷新成功，第${page}页，题目数量: ${problemsData.problems.length}，总计: ${problemsData.total}`);\n      }\n    } catch (error) {\n      console.warn('刷新题目列表失败:', error);\n    }\n  };\n\n  // 分页控制函数\n  const handlePageChange = (newPage) => {\n    setCurrentPage(newPage);\n    fetchProblems(newPage);\n  };\n\n  const handlePerPageChange = (newPerPage) => {\n    setPerPage(newPerPage);\n    setCurrentPage(1); // 重置到第一页\n    fetchProblems(1);\n  };\n\n  // 监听课程变化，加载课程学生关联关系\n  useEffect(() => {\n    const loadCourseStudents = async () => {\n      if (editingCourse && editingCourse.id) {\n        console.log('开始加载课程学生数据，课程ID:', editingCourse.id);\n        await fetchStudentClassRelations(editingCourse.id);\n      }\n    };\n    \n    loadCourseStudents();\n  }, [editingCourse]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const fetchInitialData = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError('');\n      setSuccess('');\n      const [schoolsData, usersData, problemsData] = await Promise.all([\n        getSchools(),\n        getUsers(1, 50, 'student'),\n        getProblems(1, perPage)  // 使用分页参数\n      ]);\n      \n      setSchools(schoolsData);\n      setUsers(usersData.users);\n      setProblems(problemsData.problems);\n      setTotalProblems(problemsData.total);\n      setTotalPages(problemsData.pages);\n      setCurrentPage(1);\n      \n      // 获取所有专业和班级数据 - 确保schools数据已经设置\n      if (schoolsData && schoolsData.length > 0) {\n        await fetchAllMajorsAndClasses(schoolsData);\n      }\n      \n      // 调试信息：打印题目数据\n      console.log('从API获取的题目数据:', problemsData.problems);\n      if (problemsData.problems && problemsData.problems.length > 0) {\n        problemsData.problems.forEach((problem, index) => {\n          console.log(`题目 ${index + 1}:`, {\n            id: problem.id,\n            title: problem.title,\n            type: problem.type,\n            difficulty: problem.difficulty\n          });\n        });\n      }\n      \n      // 获取课程和作业数据（使用测试数据）\n      try {\n        console.log('开始获取课程和作业数据...');\n        const [coursesData, assignmentsData] = await Promise.all([\n          getTeacherCourses(),\n          getCourseAssignments()\n        ]);\n        \n        console.log('API返回的课程数据:', coursesData);\n        console.log('API返回的作业数据:', assignmentsData);\n        \n        if (coursesData && coursesData.courses) {\n          console.log('使用API返回的课程数据，课程数量:', coursesData.courses.length);\n          setCourses(coursesData.courses);\n        } else {\n          console.log('API返回的课程数据无效，使用测试数据');\n          setCourses(mockCourses);\n        }\n        \n        if (assignmentsData && assignmentsData.assignments) {\n          console.log('使用API返回的作业数据，作业数量:', assignmentsData.assignments.length);\n          setAssignments(assignmentsData.assignments);\n        } else {\n          console.log('API返回的作业数据无效，使用测试数据');\n          setAssignments(mockAssignments);\n        }\n      } catch (error) {\n        console.warn('获取课程或作业数据失败，使用测试数据:', error);\n        console.log('错误详情:', error.response?.data || error.message);\n        setCourses(mockCourses);\n        setAssignments(mockAssignments);\n      }\n      \n      // 学生-课程关联关系数据将在进入课程详情页时从API加载\n    } catch (error) {\n      setError(error?.response?.data?.error || '获取数据失败');\n      console.error('Error fetching data:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [perPage]);\n\n  // 获取所有专业和班级数据的函数\n  const fetchAllMajorsAndClasses = async (schoolsData = null) => {\n    // 防止重复调用\n    if (fetchAllMajorsAndClasses.isLoading) {\n      console.log('fetchAllMajorsAndClasses 正在执行中，跳过重复调用');\n      return;\n    }\n    \n    fetchAllMajorsAndClasses.isLoading = true;\n    \n    try {\n      // 使用传入的schoolsData参数，如果没有传入则使用state中的schools\n      const schoolsToUse = schoolsData || schools;\n      \n      if (!schoolsToUse || schoolsToUse.length === 0) {\n        console.warn('没有学校数据，无法获取专业和班级');\n        return;\n      }\n      \n      console.log('开始获取数据，学校数量:', schoolsToUse.length);\n      console.log('学校数据:', schoolsToUse);\n      \n      // 按照正确的层次结构获取数据：学校 → 院部 → 专业 → 班级\n      const allDepartments = [];\n      const allMajors = [];\n      const allClasses = [];\n      \n      for (const school of schoolsToUse) {\n        try {\n          console.log(`正在获取学校 ${school.id} (${school.name}) 的数据...`);\n          \n          // 1. 获取学校的院部\n          const departmentsData = await getDepartments(school.id);\n          console.log(`学校 ${school.id} 的院部数据:`, departmentsData);\n          allDepartments.push(...departmentsData);\n          \n          // 2. 获取学校下的所有专业（按school_id过滤）\n          try {\n            console.log(`正在获取学校 ${school.id} 的专业...`);\n            const majorsData = await getMajors(school.id);\n            console.log(`学校 ${school.id} 的专业数据:`, majorsData);\n            allMajors.push(...majorsData);\n            \n            // 3. 获取每个专业的班级\n            for (const major of majorsData) {\n              try {\n                console.log(`正在获取专业 ${major.id} (${major.name}) 的班级...`);\n                const classesData = await getClasses(major.id);\n                console.log(`专业 ${major.id} 的班级数据:`, classesData);\n                allClasses.push(...classesData);\n              } catch (error) {\n                console.error(`获取专业 ${major.id} 的班级失败:`, error);\n              }\n            }\n          } catch (error) {\n            console.error(`获取学校 ${school.id} 的专业失败:`, error);\n          }\n        } catch (error) {\n          console.error(`获取学校 ${school.id} 的院部失败:`, error);\n        }\n      }\n      \n      console.log('最终获取到的数据:');\n      console.log('院部:', allDepartments);\n      console.log('专业:', allMajors);\n      console.log('班级:', allClasses);\n      \n      setDepartments(allDepartments);\n      setMajors(allMajors);\n      setClasses(allClasses);\n      \n      console.log('获取到的所有院部:', allDepartments);\n      console.log('获取到的所有专业:', allMajors);\n      console.log('获取到的所有班级:', allClasses);\n    } catch (error) {\n      console.error('获取所有院部、专业和班级失败:', error);\n    } finally {\n      fetchAllMajorsAndClasses.isLoading = false;\n    }\n  };\n\n  const handleSchoolChange = async (schoolId) => {\n    setSelectedSchool(schoolId);\n    setSelectedDepartment('');\n    setSelectedMajor('');\n    setSelectedClass('');\n    \n    // 不再重置全局的departments、majors和classes数组\n    // 这些数组应该保持完整，用于学生列表显示\n  };\n\n  const handleDepartmentChange = async (departmentId) => {\n    setSelectedDepartment(departmentId);\n    setSelectedMajor('');\n    setSelectedClass('');\n    \n    // 不再重置全局的majors和classes数组\n    // 这些数组应该保持完整，用于学生列表显示\n  };\n\n  const handleMajorChange = async (majorId) => {\n    setSelectedMajor(majorId);\n    setSelectedClass('');\n    \n    // 不再重置全局的classes数组\n    // 这个数组应该保持完整，用于学生列表显示\n  };\n\n  const handleBatchImport = async () => {\n    if (!uploadedFile) {\n      setError('请选择要上传的Excel文件');\n      setSuccess('');\n      return;\n    }\n\n    if (!selectedSchool || !selectedDepartment || !selectedMajor || !selectedClass) {\n      setError('请选择学校、院部、专业和班级');\n      setSuccess('');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError('');\n      setSuccess('');\n      \n      // 创建FormData对象来上传文件\n      const formData = new FormData();\n      formData.append('file', uploadedFile);\n      formData.append('school_id', selectedSchool);\n      formData.append('department_id', selectedDepartment);\n      formData.append('major_id', selectedMajor);\n      formData.append('class_id', selectedClass);\n      \n      // 调用新的批量导入API\n      const resp = await batchImportStudentsFromExcel(formData);\n      \n      const msg = resp?.message || `批量导入完成: 成功 ${resp?.success_count ?? 0} 个, 失败 ${resp?.failed_count ?? 0} 个`;\n      setSuccess(msg);\n      \n      if (resp?.errors && resp.errors.length > 0) {\n        const preview = resp.errors.slice(0, 5).join('；');\n        setError(`部分导入失败：${preview}${resp.errors.length > 5 ? ' 等' : ''}`);\n      }\n      \n      // 刷新用户列表\n      const usersData = await getUsers(1, 50, 'student');\n      setUsers(usersData.users);\n      \n      // 清理上传的文件\n      setUploadedFile(null);\n      \n    } catch (error) {\n      setError(error.response?.data?.error || '批量导入失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 下载Excel模板\n  const handleDownloadTemplate = () => {\n    // 创建Excel模板数据\n    const templateData = [\n      ['学号', '姓名', '密码'],\n      ['2021001', '张三', '123456'],\n      ['2021002', '李四', '123456'],\n      ['2021003', '王五', '123456']\n    ];\n    \n    // 创建工作簿\n    const workbook = XLSX.utils.book_new();\n    \n    // 创建工作表\n    const worksheet = XLSX.utils.aoa_to_sheet(templateData);\n    \n    // 设置列宽\n    const colWidths = [\n      { wch: 15 }, // 学号列宽\n      { wch: 15 }, // 姓名列宽\n      { wch: 15 }  // 密码列宽\n    ];\n    worksheet['!cols'] = colWidths;\n    \n    // 将工作表添加到工作簿\n    XLSX.utils.book_append_sheet(workbook, worksheet, '学生信息');\n    \n    // 生成Excel文件并下载\n    XLSX.writeFile(workbook, '学生信息导入模板.xlsx');\n    \n    setSuccess('Excel模板下载成功！请填写学生信息后重新上传。');\n  };\n\n  // 处理文件上传\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      // 检查文件类型\n      const validTypes = ['.xlsx', '.xls', '.csv'];\n      const fileExtension = file.name.substring(file.name.lastIndexOf('.')).toLowerCase();\n      \n      if (!validTypes.includes(fileExtension)) {\n        setError('请选择有效的Excel文件格式（.xlsx, .xls, .csv）');\n        return;\n      }\n      \n      // 检查文件大小（5MB限制）\n      if (file.size > 5 * 1024 * 1024) {\n        setError('文件大小不能超过5MB');\n        return;\n      }\n      \n      setUploadedFile(file);\n      setError('');\n      setSuccess('文件选择成功！');\n    }\n  };\n\n  // 移除上传的文件\n  const handleRemoveFile = () => {\n    setUploadedFile(null);\n    setError('');\n    setSuccess('');\n  };\n\n  const handleCreateProblem = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      setSuccess('');\n      \n      // 构建提交给后端的数据\n      const submitData = { ...problemForm };\n      \n      // 如果是选择题，需要将options数组转换为choice_options字符串\n      if (problemForm.type === 'choice') {\n        // 将选项数组转换为字符串格式：A.选项内容\\nB.选项内容\\nC.选项内容\n        submitData.choice_options = problemForm.options\n          .map((option) => `${option.id}.${option.text}`)\n          .join('\\n');\n        \n        // 将正确答案数组转换为expected_output字符串\n        submitData.expected_output = problemForm.correct_answers.join(',');\n        \n        // 删除前端特有的字段，避免后端报错\n        delete submitData.options;\n        delete submitData.correct_answers;\n      }\n      \n      // 如果是判断题，需要特殊处理\n      if (problemForm.type === 'judge') {\n        // 判断题的选项固定为\"正确\"和\"错误\"\n        submitData.choice_options = 'A.正确\\nB.错误';\n        \n        // 将正确答案转换为expected_output\n        submitData.expected_output = problemForm.correct_answers.join(',');\n        \n        // 删除前端特有的字段\n        delete submitData.options;\n        delete submitData.correct_answers;\n      }\n      \n      // 如果是简答题，需要特殊处理\n      if (problemForm.type === 'short_answer') {\n        // 将简答题答案设置为expected_output\n        submitData.expected_output = problemForm.answer;\n        \n        // 删除前端特有的字段\n        delete submitData.answer;\n      }\n      \n      // 如果是编程题，改为JSON结构提交测试用例\n      if (problemForm.type === 'programming') {\n        const testCases = problemForm.testCases || [];\n        if (testCases.length === 0) {\n          throw new Error('编程题至少需要一个测试用例');\n        }\n        // 以结构化JSON传输，支持多行输入/输出与空输入\n        const structured = testCases.map(tc => ({\n          input: tc.input || '',\n          output: tc.output || ''\n        }));\n        submitData.test_cases = JSON.stringify(structured);\n        // expected_output 保留为所有输出拼接（兼容旧后端或列表展示）\n        submitData.expected_output = testCases.map(tc => tc.output || '').join('\\n');\n        // 删除前端特有字段\n        delete submitData.testCases;\n      }\n      \n      // 添加调试信息\n      console.log('提交的题目数据:', submitData);\n      console.log('题目类型:', submitData.type);\n      console.log('完整表单数据:', JSON.stringify(submitData, null, 2));\n      \n      if (isEditing && editingProblem) {\n        console.log('更新题目，ID:', editingProblem.id);\n        await updateProblem(editingProblem.id, submitData);\n        setSuccess('题目更新成功！');\n      } else {\n        console.log('创建新题目');\n        await createProblem(submitData);\n        setSuccess('题目创建成功！');\n      }\n      \n      // 重置表单\n      setProblemForm({\n        title: '',\n        description: '',\n        type: 'programming',\n        testCases: [],\n        difficulty: 'easy',\n        time_limit: 1000,\n        memory_limit: 128,\n        options: [],\n        correct_answers: [],\n        is_multiple_choice: false,\n        answer: ''\n      });\n      \n      setIsEditing(false);\n      setEditingProblem(null);\n      \n      // 刷新题目列表\n      const problemsData = await getProblems(1, perPage);  // 使用分页参数\n      setProblems(problemsData.problems);\n      setTotalProblems(problemsData.total);\n      setTotalPages(problemsData.pages);\n      setCurrentPage(1);\n      \n      // 切换到题目列表\n      setActiveSubTab('list');\n      \n    } catch (error) {\n      console.error('题目操作失败:', error);\n      setError(error.response?.data?.error || error.message || '操作失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleEditProblem = (problem) => {\n    setEditingProblem(problem);\n    // 根据题目类型初始化表单数据\n    let initialOptions = [];\n    let initialCorrectAnswers = [];\n    \n    if (problem.type === 'choice') {\n      // 解析选择题的choice_options字符串\n      if (problem.choice_options) {\n        const optionLines = problem.choice_options.split('\\n').filter(line => line.trim());\n        initialOptions = optionLines.map((line, index) => {\n          const match = line.match(/^([A-Z])\\.(.+)$/);\n          if (match) {\n            return {\n              id: match[1], // 使用字母ID (A, B, C...)\n              text: match[2].trim(),\n              is_correct: false\n            };\n          }\n          return {\n            id: String.fromCharCode(65 + index), // 如果没有匹配到字母，使用默认字母ID\n            text: line.trim(),\n            is_correct: false\n          };\n        });\n      }\n      \n      // 解析expected_output中的正确答案\n      if (problem.expected_output) {\n        const correctAnswers = problem.expected_output.split(',').filter(ans => ans.trim());\n        initialCorrectAnswers = correctAnswers;\n        \n        // 设置选项的正确状态\n        initialOptions = initialOptions.map(option => ({\n          ...option,\n          is_correct: correctAnswers.includes(option.id)\n        }));\n      }\n    } else if (problem.type === 'judge') {\n      // 判断题固定选项\n      initialOptions = [\n        { id: 'A', text: '正确', is_correct: false },\n        { id: 'B', text: '错误', is_correct: false }\n      ];\n      \n      // 根据expected_output设置正确答案\n      if (problem.expected_output) {\n        const correctAnswer = problem.expected_output.trim();\n        if (correctAnswer === 'A') {\n          initialOptions[0].is_correct = true;\n          initialCorrectAnswers = ['A'];\n        } else if (correctAnswer === 'B') {\n          initialOptions[1].is_correct = true;\n          initialCorrectAnswers = ['B'];\n        }\n      }\n    }\n    \n    setProblemForm({\n      title: problem.title,\n      description: problem.description,\n      type: problem.type || 'programming',\n      testCases: problem.type === 'programming' ? parseTestCases(problem.test_cases, problem.expected_output) : [],\n      difficulty: problem.difficulty,\n      time_limit: problem.time_limit || 1000,\n      memory_limit: problem.memory_limit || 128,\n      options: initialOptions,\n      correct_answers: initialCorrectAnswers,\n      is_multiple_choice: problem.is_multiple_choice || false,\n      answer: problem.answer || ''\n    });\n    \n    setIsEditing(true);\n    setActiveSubTab('create');\n  };\n\n  const handleDeleteProblem = async (problemId) => {\n    if (!window.confirm('确定要删除这个题目吗？此操作不可恢复。')) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError('');\n      setSuccess('');\n      await deleteProblem(problemId);\n      setSuccess('题目删除成功！');\n      \n      // 刷新题目列表\n      const problemsData = await getProblems(1, perPage);  // 使用分页参数\n      setProblems(problemsData.problems);\n      setTotalProblems(problemsData.total);\n      setTotalPages(problemsData.pages);\n      setCurrentPage(1);\n    } catch (error) {\n      setError(error.response?.data?.error || '删除题目失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 根据题目特征推断题目类型\n  const inferProblemType = (problem) => {\n    console.log('开始推断题目类型，题目数据:', problem);\n    \n    // 优先使用明确设置的题目类型\n    if (problem.type && problem.type !== 'undefined') {\n      console.log('使用明确设置的题目类型:', problem.type);\n      return problem.type;\n    }\n    \n    // 如果没有明确设置类型，则通过特征推断\n    console.log('没有明确设置类型，开始推断...');\n    \n    // 检查所有可能的选项字段\n    const options = problem.options || problem.choices || problem.alternatives || problem.option_list || [];\n    console.log('检查到的选项:', options);\n    \n    // 如果有选项，判断是选择题还是判断题\n    if (Array.isArray(options) && options.length > 0) {\n      console.log('发现选项，数量:', options.length);\n      \n      // 检查是否是判断题（只有两个选项：正确、错误）\n      if (options.length === 2) {\n        const optionTexts = options.map(opt => {\n          const text = opt.text || opt.option_text || opt.content || opt.label || '';\n          console.log('选项文本:', text);\n          return text;\n        });\n        \n        if (optionTexts.includes('正确') && optionTexts.includes('错误')) {\n          console.log('推断为判断题');\n          return 'judge';\n        }\n      }\n      \n      console.log('推断为选择题');\n      return 'choice';\n    }\n    \n    // 检查所有可能的答案字段\n    const answer = problem.answer || problem.solution || problem.correct_answer || problem.answer_text || '';\n    console.log('检查到的答案:', answer);\n    \n    if (answer && answer.trim()) {\n      console.log('推断为简答题');\n      return 'short_answer';\n    }\n    \n    // 检查编程题相关字段\n    const testCases = problem.test_cases || problem.test_cases_text || problem.test_input || '';\n    const expectedOutput = problem.expected_output || problem.expected_result || problem.expected_answer || '';\n    console.log('检查到的测试用例:', testCases);\n    console.log('检查到的期望输出:', expectedOutput);\n    \n    if (testCases && expectedOutput) {\n      console.log('推断为编程题');\n      return 'programming';\n    }\n    \n    // 如果都无法推断，默认返回编程题\n    console.log('无法推断类型，默认返回编程题');\n    return 'programming';\n  };\n\n  // 根据ID获取学校名称\n  const getSchoolName = (schoolId) => {\n    if (!schoolId) return '-';\n    const school = schools.find(s => {\n      const sId = s.id;\n      return sId === schoolId || sId === parseInt(schoolId) || parseInt(sId) === schoolId;\n    });\n    return school ? school.name : schoolId;\n  };\n\n  // 根据ID获取专业名称\n  const getMajorName = (majorId) => {\n    if (!majorId) return '-';\n    const major = majors.find(m => {\n      const mId = m.id;\n      return mId === majorId || mId === parseInt(majorId) || parseInt(mId) === majorId;\n    });\n    return major ? major.name : majorId;\n  };\n\n  // 根据ID获取班级名称\n  const getClassName = (classId) => {\n    if (!classId) return '-';\n    const classItem = classes.find(c => {\n      const cId = c.id;\n      return cId === classId || cId === parseInt(classId) || parseInt(cId) === classId;\n    });\n    return classItem ? classItem.name : classId;\n  };\n\n  const handleCancelEdit = () => {\n    setIsEditing(false);\n    setEditingProblem(null);\n    setProblemForm({\n      title: '',\n      description: '',\n      type: 'programming',\n      testCases: [],\n      difficulty: 'easy',\n      time_limit: 1000,\n      memory_limit: 128,\n      options: [],\n      correct_answers: [],\n      is_multiple_choice: false,\n      answer: ''\n    });\n    setActiveSubTab('list');\n  };\n\n  // 课程相关处理函数（只读功能）\n  const handleViewCourseDetail = (courseId) => {\n    const course = courses.find(c => c.id === courseId);\n    if (course) {\n      setActiveTab('courses');\n      setActiveSubTab('detail');\n      setEditingCourse(course);\n    }\n  };\n\n  // 作业相关处理函数\n  const handleCreateAssignment = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      setSuccess('');\n      \n      // 如果在课程详情页面创建作业，自动设置课程ID\n      const assignmentData = { ...assignmentForm };\n      if (activeSubTab === 'create-assignment' && editingCourse) {\n        assignmentData.course_id = editingCourse.id;\n      }\n      \n      if (isEditingAssignment && editingAssignment) {\n        await updateAssignment(editingAssignment.id, assignmentData);\n        setSuccess('作业更新成功！');\n      } else {\n        await createAssignment(assignmentData);\n        setSuccess('作业布置成功！');\n      }\n      \n      // 重置表单\n      setAssignmentForm({\n        name: '',\n        description: '',\n        requirements: '',\n        due_date: '',\n        course_id: '',\n        problem_ids: [],\n        // 重置补交设置\n        allow_overdue_submission: false,\n        overdue_deadline: '',\n        overdue_score_ratio: 0.8\n      });\n      \n      setIsEditingAssignment(false);\n      setEditingAssignment(null);\n      \n      // 刷新作业列表\n      const assignmentsData = await getCourseAssignments();\n      setAssignments(assignmentsData.assignments || []);\n      \n      // 如果在课程详情页面，返回到课程详情；否则返回到课程列表\n      if (activeSubTab === 'create-assignment') {\n        setActiveSubTab('detail');\n      } else {\n        setActiveSubTab('list');\n      }\n      \n    } catch (error) {\n      setError(error.response?.data?.error || (isEditingAssignment ? '更新作业失败' : '布置作业失败'));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleEditAssignment = (assignment) => {\n    setEditingAssignment(assignment);\n    setAssignmentForm({\n      name: assignment.name,\n      description: assignment.description || '',\n      requirements: assignment.requirements || '',\n      due_date: assignment.due_date || '',\n      course_id: assignment.course_id || '',\n      problem_ids: assignment.problem_ids || [],\n      // 补交作业相关字段\n      allow_overdue_submission: assignment.allow_overdue_submission || false,\n      overdue_deadline: assignment.overdue_deadline || '',\n      overdue_score_ratio: assignment.overdue_score_ratio || 0.8\n    });\n    setIsEditingAssignment(true);\n    \n    // 记录编辑作业时的上下文\n    if (activeSubTab === 'detail' && editingCourse) {\n      setEditingAssignmentContext('course-detail');\n    } else {\n      setEditingAssignmentContext('course-list');\n    }\n    \n    // 切换到作业创建模式\n    setActiveSubTab('create-assignment');\n  };\n\n  const handleDeleteAssignment = async (assignmentId) => {\n    if (!window.confirm('确定要删除该作业吗？此操作不可恢复。')) return;\n    try {\n      setLoading(true);\n      setError('');\n      setSuccess('');\n      \n      await deleteAssignment(assignmentId);\n      setSuccess('作业已删除');\n      \n      // 刷新作业列表\n      const assignmentsData = await getCourseAssignments();\n      setAssignments(assignmentsData.assignments || []);\n      \n    } catch (error) {\n      setError(error.response?.data?.error || '删除作业失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 学生-课程关联关系处理函数\n  const handleAddStudentToCourse = async () => {\n    if (!editingCourse) return;\n    \n    try {\n      setLoading(true);\n      setError('');\n      setSuccess('');\n      \n      // 查找学生是否已存在\n      const existingStudent = users.find(user => \n        user.username === addStudentForm.student_no && user.role === 'student'\n      );\n      \n      if (!existingStudent) {\n        setError('学生不存在，请先创建学生账号');\n        return;\n      }\n      \n      // 使用API添加学生到课程\n      try {\n        const payload = { student_id: existingStudent.id };\n        if (editingCourse.class_id) {\n          payload.class_id = editingCourse.class_id;\n        }\n        await addStudentToCourse(editingCourse.id, payload);\n        setSuccess('学生已成功添加到课程！');\n        \n        // 重新加载课程学生数据\n        const courseStudentsData = await getCourseStudents(editingCourse.id);\n        if (courseStudentsData && courseStudentsData.length > 0) {\n          const apiRelations = courseStudentsData.map(student => ({\n            student_id: student.student_id,\n            class_id: student.class_id,\n            course_id: editingCourse.id,\n            student_name: student.student_name,\n            student_no: student.student_no,\n            added_at: student.added_at || new Date().toISOString()\n          }));\n          setStudentClassRelations(apiRelations);\n        } else {\n          setStudentClassRelations([]);\n        }\n        \n        // 刷新课程列表（因为学生数量发生变化）\n        try {\n          const coursesData = await getTeacherCourses();\n          if (coursesData && coursesData.courses) {\n            setCourses(coursesData.courses);\n            // 更新当前编辑的课程信息\n            const updatedCourse = coursesData.courses.find(c => c.id === editingCourse.id);\n            if (updatedCourse) {\n              setEditingCourse(updatedCourse);\n            }\n          }\n        } catch (error) {\n          console.warn('刷新课程列表失败:', error);\n        }\n      } catch (apiError) {\n        console.error('添加学生到课程失败:', apiError);\n        setError(apiError.response?.data?.error || '添加学生失败');\n        return;\n      }\n      \n      // 重置表单\n      setAddStudentForm({\n        student_no: '',\n        name: '',\n        password: '',\n        email: '',\n        phone: '',\n        school_id: '',\n        department_id: '',\n        major_id: '',\n        class_id: ''\n      });\n      \n      // 返回到课程详情页\n      setActiveSubTab('detail');\n      \n    } catch (error) {\n      setError(error.response?.data?.error || '添加学生失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleRemoveStudentFromCourse = async (relationId) => {\n    if (!window.confirm('确定要从该课程中移除该学生吗？')) return;\n    \n    try {\n      // 解析relationId获取学生ID和课程ID\n      const [studentId] = relationId.split('_');\n      \n      // 使用API从课程中移除学生\n      try {\n        await removeStudentFromCourse(editingCourse.id, studentId);\n        setSuccess('学生已从课程中移除');\n        \n        // 重新加载课程学生数据\n        const courseStudentsData = await getCourseStudents(editingCourse.id);\n        if (courseStudentsData && courseStudentsData.length > 0) {\n          const apiRelations = courseStudentsData.map(student => ({\n            student_id: student.student_id,\n            class_id: student.class_id,\n            course_id: editingCourse.id,\n            student_name: student.student_name,\n            student_no: student.student_no,\n            added_at: student.added_at || new Date().toISOString()\n          }));\n          setStudentClassRelations(apiRelations);\n        } else {\n          setStudentClassRelations([]);\n        }\n        \n        // 刷新课程列表（因为学生数量发生变化）\n        try {\n          const coursesData = await getTeacherCourses();\n          if (coursesData && coursesData.courses) {\n            setCourses(coursesData.courses);\n            // 更新当前编辑的课程信息\n            const updatedCourse = coursesData.courses.find(c => c.id === editingCourse.id);\n            if (updatedCourse) {\n              setEditingCourse(updatedCourse);\n            }\n          }\n        } catch (error) {\n          console.warn('刷新课程列表失败:', error);\n        }\n      } catch (apiError) {\n        console.error('从课程中移除学生失败:', apiError);\n        setError(apiError.response?.data?.error || '移除学生失败');\n        return;\n      }\n    } catch (error) {\n      setError('移除学生失败');\n    }\n  };\n\n  // 学生管理标签页渲染函数\n  const renderStudentsTab = () => (\n    <div className=\"tab-content\">\n      <div className=\"sub-tabs\">\n        <button \n          className={`sub-tab-btn ${activeSubTab === 'list' ? 'active' : ''}`}\n          onClick={() => setActiveSubTab('list')}\n        >\n          学生列表\n        </button>\n        <button \n          className={`sub-tab-btn ${activeSubTab === 'add' ? 'active' : ''}`}\n          onClick={() => setActiveSubTab('add')}\n        >\n          添加学生\n        </button>\n        <button \n          className={`sub-tab-btn ${activeSubTab === 'import' ? 'active' : ''}`}\n          onClick={() => setActiveSubTab('import')}\n        >\n          批量导入\n        </button>\n      </div>\n\n      {activeSubTab === 'list' && (\n        <div className=\"section-content\">\n          <div className=\"section-header\">\n            <h2>学生列表</h2>\n            <button \n              className=\"add-btn\"\n              onClick={() => setActiveSubTab('add')}\n            >\n              添加学生\n            </button>\n          </div>\n          \n          <div className=\"students-table\">\n            <table>\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>学号</th>\n                  <th>姓名</th>\n                  <th>邮箱</th>\n                  <th>手机号</th>\n                  <th>学校</th>\n                  <th>专业</th>\n                  <th>班级</th>\n                  <th>操作</th>\n                </tr>\n              </thead>\n              <tbody>\n                {users.map(user => (\n                  <tr key={user.id}>\n                    <td>{user.id}</td>\n                    <td>{user.username}</td>\n                    <td>{user.name}</td>\n                    <td>{user.email || '-'}</td>\n                    <td>{user.phone || '-'}</td>\n                    <td>{getSchoolName(user.school_id)}</td>\n                    <td>{getMajorName(user.major_id)}</td>\n                    <td>{getClassName(user.class_id)}</td>\n                    <td>\n                      <button \n                        className=\"action-btn edit\"\n                        onClick={() => handleEditStudentClick(user)}\n                      >\n                        编辑\n                      </button>\n                      <button \n                        className=\"action-btn delete\"\n                        onClick={() => handleDeleteStudent(user.id)}\n                      >\n                        删除\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n\n      {activeSubTab === 'add' && (\n        <div className=\"section-content\">\n          <div className=\"section-header\">\n            <h2>➕ 添加学生</h2>\n            <button \n              className=\"secondary-btn\"\n              onClick={() => setActiveSubTab('list')}\n            >\n              ← 返回学生列表\n            </button>\n          </div>\n          \n          <div className={`add-student-form ${scrollAnimations.formVisible ? 'form-visible' : ''}`}>\n            <div className=\"form-row\" style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '20px' }}>\n              <div className=\"form-group\">\n                <label>学号：<span className=\"required-mark\">*</span></label>\n                <input \n                  type=\"text\" \n                  placeholder=\"请输入学号\"\n                  value={addStudentForm.student_no}\n                  onChange={(e) => setAddStudentForm(prev => ({ ...prev, student_no: e.target.value }))}\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label>姓名：<span className=\"required-mark\">*</span></label>\n                <input \n                  type=\"text\" \n                  placeholder=\"请输入学生姓名\"\n                  value={addStudentForm.name}\n                  onChange={(e) => setAddStudentForm(prev => ({ ...prev, name: e.target.value }))}\n                />\n              </div>\n            </div>\n            \n            <div className=\"form-row\" style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '20px' }}>\n              <div className=\"form-group\">\n                <label>密码：<span className=\"required-mark\">*</span></label>\n                <input \n                  type=\"password\" \n                  placeholder=\"请输入初始密码\"\n                  value={addStudentForm.password}\n                  onChange={(e) => setAddStudentForm(prev => ({ ...prev, password: e.target.value }))}\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label>邮箱：</label>\n                <input \n                  type=\"email\" \n                  placeholder=\"请输入邮箱地址\"\n                  value={addStudentForm.email}\n                  onChange={(e) => setAddStudentForm(prev => ({ ...prev, email: e.target.value }))}\n                />\n              </div>\n            </div>\n            \n            <div className=\"form-row\" style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '20px' }}>\n              <div className=\"form-group\">\n                <label>手机号：</label>\n                <input \n                  type=\"tel\" \n                  placeholder=\"请输入手机号码\"\n                  value={addStudentForm.phone}\n                  onChange={(e) => setAddStudentForm(prev => ({ ...prev, phone: e.target.value }))}\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label>学校：</label>\n                <select \n                  value={addStudentForm.school_id} \n                  onChange={(e) => handleAddStudentSchoolChange(e.target.value)}\n                >\n                  <option value=\"\">请选择学校（可选）</option>\n                  {schools.map(school => (\n                    <option key={school.id} value={school.id}>\n                      {school.name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n            \n            <div className=\"form-row\" style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '20px' }}>\n              <div className=\"form-group\">\n                <label>院部：</label>\n                <select \n                  value={addStudentForm.department_id} \n                  onChange={(e) => handleAddStudentDepartmentChange(e.target.value)}\n                  disabled={!addStudentForm.school_id}\n                >\n                  <option value=\"\">请选择院部（可选）</option>\n                  {getAddStudentSchoolDepartments().map(department => (\n                    <option key={department.id} value={department.id}>\n                      {department.name}\n                    </option>\n                  ))}\n                </select>\n                {/* 调试信息 */}\n                <div style={{ fontSize: '12px', color: '#666', marginTop: '5px' }}>\n                  当前学校ID: {addStudentForm.school_id} | \n                  可用院部数量: {getAddStudentSchoolDepartments().length} | \n                  总院部数量: {departments.length}\n                </div>\n              </div>\n              \n              <div className=\"form-group\">\n                <label>专业：</label>\n                <select \n                  value={addStudentForm.major_id} \n                  onChange={(e) => handleAddStudentMajorChange(e.target.value)}\n                  disabled={!addStudentForm.department_id}\n                >\n                  <option value=\"\">请选择专业（可选）</option>\n                  {getAddStudentDepartmentMajors().map(major => (\n                    <option key={major.id} value={major.id}>\n                      {major.name}\n                    </option>\n                  ))}\n                </select>\n                {/* 调试信息 */}\n                <div style={{ fontSize: '12px', color: '#666', marginTop: '5px' }}>\n                  当前院部ID: {addStudentForm.department_id} | \n                  可用专业数量: {getAddStudentDepartmentMajors().length} | \n                  总专业数量: {majors.length}\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"form-row\" style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '20px' }}>\n              <div className=\"form-group\">\n                <label>班级：</label>\n                <select \n                  value={addStudentForm.class_id} \n                  onChange={(e) => setAddStudentForm(prev => ({ ...prev, class_id: e.target.value }))}\n                  disabled={!addStudentForm.major_id}\n                >\n                  <option value=\"\">请选择班级（可选）</option>\n                  {getAddStudentMajorClasses().map(classItem => (\n                    <option key={classItem.id} value={classItem.id}>\n                      {classItem.name}\n                    </option>\n                  ))}\n                </select>\n                {/* 调试信息 */}\n                <div style={{ fontSize: '12px', color: '#666', marginTop: '5px' }}>\n                  当前专业ID: {addStudentForm.major_id} | \n                  可用班级数量: {getAddStudentMajorClasses().length} | \n                  总班级数量: {classes.length}\n                </div>\n              </div>\n            </div>\n            \n            <div className={`form-actions ${scrollAnimations.bottomFormVisible ? 'bottom-form-visible' : ''}`}>\n              <button \n                className=\"submit-btn\"\n                onClick={handleAddStudent}\n                disabled={loading || !addStudentForm.student_no || !addStudentForm.name || !addStudentForm.password}\n              >\n                {loading ? '创建中...' : '创建学生账号'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {activeSubTab === 'import' && (\n        <div className=\"section-content\">\n          <div className=\"section-header\">\n            <h2>📥 批量导入学生</h2>\n            <button \n              className=\"secondary-btn\"\n              onClick={() => setActiveSubTab('list')}\n            >\n              ← 返回学生列表\n            </button>\n          </div>\n          \n          <div className=\"import-form\">\n            <div className=\"form-help\" style={{ \n              display: 'block', \n              visibility: 'visible', \n              opacity: '1', \n              background: '#f8f9fa',\n              padding: '20px',\n              borderRadius: '8px',\n              borderLeft: '4px solid #667eea',\n              marginBottom: '25px'\n            }}>\n              <h3 style={{ color: '#333', fontSize: '18px', fontWeight: '600', margin: '0 0 15px 0' }}>导入说明</h3>\n              <p style={{ color: '#666', fontSize: '14px', lineHeight: '1.6', margin: '10px 0' }}>请按以下步骤操作：</p>\n              <ol style={{ margin: '15px 0', paddingLeft: '20px' }}>\n                <li style={{ margin: '8px 0', color: '#495057', lineHeight: '1.5' }}>点击下方\"下载Excel模板\"按钮，下载标准格式的Excel文件（.xlsx格式）</li>\n                <li style={{ margin: '8px 0', color: '#495057', lineHeight: '1.5' }}>在Excel文件中填写学生信息（学号、姓名、密码）</li>\n                <li style={{ margin: '8px 0', color: '#495057', lineHeight: '1.5' }}>选择学校、院部、专业、班级信息</li>\n                <li style={{ margin: '8px 0', color: '#495057', lineHeight: '1.5' }}>上传填写好的Excel文件</li>\n                <li style={{ margin: '8px 0', color: '#495057', lineHeight: '1.5' }}>系统将自动识别并添加学生信息</li>\n              </ol>\n              <p style={{ color: '#666', fontSize: '14px', lineHeight: '1.6', margin: '10px 0' }}><strong style={{ color: '#dc3545', fontWeight: '600' }}>注意：</strong>学号、姓名、密码为必填项，学校、院部、专业、班级信息将应用到所有导入的学生</p>\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>学校：</label>\n                <select \n                  value={selectedSchool} \n                  onChange={(e) => handleSchoolChange(e.target.value)}\n                >\n                  <option value=\"\">请选择学校（必选）</option>\n                  {schools.map(school => (\n                    <option key={school.id} value={school.id}>\n                      {school.name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              \n              <div className=\"form-group\">\n                <label>院部：</label>\n                <select \n                  value={selectedDepartment} \n                  onChange={(e) => handleDepartmentChange(e.target.value)}\n                  disabled={!selectedSchool}\n                >\n                  <option value=\"\">请选择院部（必选）</option>\n                  {getCurrentSchoolDepartments().map(department => (\n                    <option key={department.id} value={department.id}>\n                      {department.name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>专业：</label>\n                <select \n                  value={selectedMajor} \n                  onChange={(e) => handleMajorChange(e.target.value)}\n                  disabled={!selectedDepartment}\n                >\n                  <option value=\"\">请选择专业（必选）</option>\n                  {getCurrentDepartmentMajors().map(major => (\n                    <option key={major.id} value={major.id}>\n                      {major.name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              \n              <div className=\"form-group\">\n                <label>班级：</label>\n                <select \n                  value={selectedClass} \n                  onChange={(e) => setSelectedClass(e.target.value)}\n                  disabled={!selectedMajor}\n                >\n                  <option value=\"\">请选择班级（必选）</option>\n                  {getCurrentMajorClasses().map(classItem => (\n                    <option key={classItem.id} value={classItem.id}>\n                      {classItem.name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <button \n                  className=\"download-btn\"\n                  onClick={handleDownloadTemplate}\n                  disabled={loading}\n                >\n                  📥 下载Excel模板\n                </button>\n                <span className=\"form-help-text\">下载包含学号、姓名、密码三列的标准Excel模板（.xlsx格式）</span>\n              </div>\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>上传Excel文件：<span className=\"required-mark\">*</span></label>\n                <input \n                  type=\"file\" \n                  accept=\".xlsx,.xls\"\n                  onChange={handleFileUpload}\n                  disabled={loading || !selectedSchool || !selectedDepartment || !selectedMajor || !selectedClass}\n                />\n                <span className=\"form-help-text\">支持.xlsx和.xls格式，文件大小不超过5MB。建议使用下载的Excel模板填写数据。</span>\n              </div>\n            </div>\n            \n            {uploadedFile && (\n              <div className=\"form-row\">\n                <div className=\"form-group\">\n                  <div className=\"file-info\">\n                    <span>📎 已选择文件: {uploadedFile.name}</span>\n                    <button \n                      className=\"remove-file-btn\"\n                      onClick={handleRemoveFile}\n                    >\n                      ✕ 移除\n                    </button>\n                  </div>\n                </div>\n              </div>\n            )}\n            \n            <div className=\"form-actions\">\n              <button \n                className=\"submit-btn\"\n                onClick={handleBatchImport}\n                disabled={loading || !uploadedFile || !selectedSchool || !selectedDepartment || !selectedMajor || !selectedClass}\n              >\n                {loading ? '导入中...' : '开始导入'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n\n  // 题目管理标签页渲染函数\n  const renderProblemsTab = () => (\n    <div className=\"tab-content\">\n      <div className=\"sub-tabs\">\n        <button \n          className={`sub-tab-btn ${activeSubTab === 'list' ? 'active' : ''}`}\n          onClick={() => setActiveSubTab('list')}\n        >\n          题目列表\n        </button>\n        <button \n          className={`sub-tab-btn ${activeSubTab === 'create' ? 'active' : ''}`}\n          onClick={() => setActiveSubTab('create')}\n        >\n          创建题目\n        </button>\n        <button \n          className={`sub-tab-btn ${activeSubTab === 'ai' ? 'active' : ''}`}\n          onClick={() => setActiveSubTab('ai')}\n        >\n          AI生题\n        </button>\n      </div>\n\n      {activeSubTab === 'list' && (\n        <div className=\"section-content\">\n          <div className=\"section-header\">\n            <h2>题目列表</h2>\n            <button \n              className=\"add-btn\"\n              onClick={() => setActiveSubTab('create')}\n            >\n              创建题目\n            </button>\n          </div>\n          \n          <div className=\"problems-table\">\n            <table>\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>标题</th>\n                  <th>类型</th>\n                  <th>难度</th>\n                  <th>时间限制</th>\n                  <th>内存限制</th>\n                  <th>操作</th>\n                </tr>\n              </thead>\n              <tbody>\n                {problems.map(problem => {\n                  // 调试信息：打印每个题目的类型\n                  console.log(`=== 题目 ${problem.id} 调试信息 ===`);\n                  console.log('题目标题:', problem.title);\n                  console.log('原始类型:', problem.type);\n                  console.log('完整题目对象:', problem);\n                  console.log('所有字段名:', Object.keys(problem));\n                  console.log('选项字段:', problem.options);\n                  console.log('答案字段:', problem.answer);\n                  console.log('测试用例字段:', problem.test_cases);\n                  console.log('期望输出字段:', problem.expected_output);\n                  \n                  const inferredType = inferProblemType(problem);\n                  console.log('推断类型:', inferredType);\n                  console.log('=== 调试信息结束 ===');\n                  \n                  return (\n                    <tr key={problem.id}>\n                      <td>{problem.id}</td>\n                      <td>{problem.title}</td>\n                      <td>\n                        {(() => {\n                          const inferredType = inferProblemType(problem);\n                          const displayType = inferredType === 'choice' ? '选择题' : \n                                            inferredType === 'judge' ? '判断题' : \n                                            inferredType === 'short_answer' ? '简答题' : '编程题';\n                          \n                          return (\n                            <span className={`type-badge ${inferredType}`}>\n                              {displayType}\n                            </span>\n                          );\n                        })()}\n                        {/* 调试信息 */}\n                        <small style={{display: 'block', color: '#999', fontSize: '10px'}}>\n                          原始类型: {problem.type || 'undefined'} | 推断类型: {inferProblemType(problem)}\n                        </small>\n                      </td>\n                      <td>\n                        <span className={`difficulty-badge ${problem.difficulty}`}>\n                          {problem.difficulty === 'easy' ? '简单' : \n                           problem.difficulty === 'medium' ? '中等' : '困难'}\n                        </span>\n                      </td>\n                      <td>{problem.time_limit || '-'}ms</td>\n                      <td>{problem.memory_limit || '-'}MB</td>\n                      <td>\n                        <button \n                          className=\"action-btn edit\"\n                          onClick={() => handleEditProblem(problem)}\n                        >\n                          编辑\n                        </button>\n                        <button \n                          className=\"action-btn delete\"\n                          onClick={() => handleDeleteProblem(problem.id)}\n                        >\n                          删除\n                        </button>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n          \n          {/* 分页组件 */}\n          <div className=\"pagination-container\">\n            <div className=\"pagination-info\">\n              <span>显示第 {((currentPage - 1) * perPage) + 1} - {Math.min(currentPage * perPage, totalProblems)} 题，共 {totalProblems} 题</span>\n            </div>\n            \n            <div className=\"pagination-controls\">\n              <div className=\"per-page-selector\">\n                <label>每页显示：</label>\n                <select \n                  value={perPage} \n                  onChange={(e) => handlePerPageChange(parseInt(e.target.value))}\n                >\n                  <option value={10}>10</option>\n                  <option value={20}>20</option>\n                  <option value={50}>50</option>\n                  <option value={100}>100</option>\n                </select>\n              </div>\n              \n              <div className=\"page-navigation\">\n                <button \n                  className=\"page-btn\"\n                  onClick={() => handlePageChange(1)}\n                  disabled={currentPage === 1}\n                >\n                  « 首页\n                </button>\n                \n                <button \n                  className=\"page-btn\"\n                  onClick={() => handlePageChange(currentPage - 1)}\n                  disabled={currentPage === 1}\n                >\n                  ‹ 上一页\n                </button>\n                \n                {/* 页码显示 */}\n                <div className=\"page-numbers\">\n                  {(() => {\n                    const pages = [];\n                    const maxVisiblePages = 5;\n                    let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));\n                    let endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);\n                    \n                    if (endPage - startPage + 1 < maxVisiblePages) {\n                      startPage = Math.max(1, endPage - maxVisiblePages + 1);\n                    }\n                    \n                    for (let i = startPage; i <= endPage; i++) {\n                      pages.push(\n                        <button\n                          key={i}\n                          className={`page-btn ${i === currentPage ? 'active' : ''}`}\n                          onClick={() => handlePageChange(i)}\n                        >\n                          {i}\n                        </button>\n                      );\n                    }\n                    return pages;\n                  })()}\n                </div>\n                \n                <button \n                  className=\"page-btn\"\n                  onClick={() => handlePageChange(currentPage + 1)}\n                  disabled={currentPage === totalPages}\n                >\n                  下一页 ›\n                </button>\n                \n                <button \n                  className=\"page-btn\"\n                  onClick={() => handlePageChange(totalPages)}\n                  disabled={currentPage === totalPages}\n                >\n                  末页 »\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {activeSubTab === 'create' && (\n        <div className=\"section-content\">\n          <div className=\"section-header\">\n            <h2>{isEditing ? '✏️ 编辑题目' : '➕ 创建题目'}</h2>\n            <button \n              className=\"secondary-btn\"\n              onClick={handleCancelEdit}\n            >\n              ← 返回题目列表\n            </button>\n          </div>\n          \n          <div className=\"problem-form\">\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>题目标题：<span className=\"required-mark\">*</span></label>\n                <input \n                  type=\"text\" \n                  placeholder=\"请输入题目标题\"\n                  value={problemForm.title}\n                  onChange={(e) => setProblemForm(prev => ({ ...prev, title: e.target.value }))}\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label>题目类型：<span className=\"required-mark\">*</span></label>\n                <select \n                  value={problemForm.type}\n                  onChange={(e) => handleProblemTypeChange(e.target.value)}\n                >\n                  <option value=\"programming\">编程题</option>\n                  <option value=\"choice\">选择题</option>\n                  <option value=\"judge\">判断题</option>\n                  <option value=\"short_answer\">简答题</option>\n                </select>\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>难度：<span className=\"required-mark\">*</span></label>\n                <select \n                  value={problemForm.difficulty}\n                  onChange={(e) => setProblemForm(prev => ({ ...prev, difficulty: e.target.value }))}\n                >\n                  <option value=\"easy\">简单</option>\n                  <option value=\"medium\">中等</option>\n                  <option value=\"hard\">困难</option>\n                </select>\n              </div>\n              \n              {problemForm.type === 'choice' && (\n                <div className=\"form-group\">\n                  <label>选择类型：</label>\n                  <div className=\"checkbox-group\">\n                    <label className=\"checkbox-label\">\n                      <input \n                        type=\"checkbox\"\n                        checked={problemForm.is_multiple_choice}\n                        onChange={(e) => setProblemForm(prev => ({ \n                          ...prev, \n                          is_multiple_choice: e.target.checked \n                        }))}\n                      />\n                      <span>多选题</span>\n                    </label>\n                  </div>\n                </div>\n              )}\n            </div>\n            \n            <div className=\"form-group\">\n              <label>题目描述：<span className=\"required-mark\">*</span></label>\n              <textarea\n                placeholder=\"请输入题目描述\"\n                value={problemForm.description}\n                onChange={(e) => setProblemForm(prev => ({ ...prev, description: e.target.value }))}\n                rows={6}\n              />\n            </div>\n\n            {/* 选择题选项管理 */}\n            {problemForm.type === 'choice' && (\n              <div className=\"form-group\">\n                <label>选项：<span className=\"required-mark\">*</span></label>\n                <div className=\"choice-options\">\n                  {problemForm.options.map((option, index) => (\n                    <div key={option.id} className=\"choice-option\">\n                      <div className=\"option-header\">\n                        <span className=\"option-label\">选项 {String.fromCharCode(65 + index)}</span>\n                        <div className=\"option-controls\">\n                          <label className=\"checkbox-label\">\n                            <input \n                              type=\"checkbox\"\n                              checked={option.is_correct}\n                              onChange={() => toggleChoiceOptionCorrect(option.id)}\n                            />\n                            <span>正确答案</span>\n                          </label>\n                          {problemForm.options.length > 2 && (\n                            <button \n                              type=\"button\"\n                              className=\"remove-option-btn\"\n                              onClick={() => removeChoiceOption(option.id)}\n                            >\n                              删除\n                            </button>\n                          )}\n                        </div>\n                      </div>\n                      <input \n                        type=\"text\" \n                        placeholder={`请输入选项 ${String.fromCharCode(65 + index)} 的内容`}\n                        value={option.text}\n                        onChange={(e) => updateChoiceOption(option.id, 'text', e.target.value)}\n                        className=\"option-input\"\n                      />\n                    </div>\n                  ))}\n                  <button \n                    type=\"button\"\n                    className=\"add-option-btn\"\n                    onClick={addChoiceOption}\n                  >\n                    + 添加选项\n                  </button>\n                </div>\n                <small>至少需要2个选项，最多支持10个选项</small>\n              </div>\n            )}\n\n            {/* 判断题选项管理 */}\n            {problemForm.type === 'judge' && (\n              <div className=\"form-group\">\n                <label>选项：<span className=\"required-mark\">*</span></label>\n                <div className=\"choice-options\">\n                  {problemForm.options.map((option, index) => (\n                    <div key={option.id} className=\"choice-option\">\n                      <div className=\"option-header\">\n                        <span className=\"option-label\">选项 {index + 1}</span>\n                        <div className=\"option-controls\">\n                          <label className=\"checkbox-label\">\n                            <input \n                              type=\"checkbox\"\n                              checked={option.is_correct}\n                              onChange={() => toggleChoiceOptionCorrect(option.id)}\n                            />\n                            <span>正确答案</span>\n                          </label>\n                        </div>\n                      </div>\n                      <input \n                        type=\"text\" \n                        value={option.text}\n                        onChange={(e) => updateChoiceOption(option.id, 'text', e.target.value)}\n                        className=\"option-input\"\n                        readOnly\n                      />\n                      <small className=\"option-hint\">判断题选项不可编辑</small>\n                    </div>\n                  ))}\n                </div>\n                <small>判断题固定为\"正确\"和\"错误\"两个选项，请选择其中一个作为正确答案</small>\n              </div>\n            )}\n            \n            {/* 简答题答案 */}\n            {problemForm.type === 'short_answer' && (\n              <div className=\"form-group\">\n                <label>答案：<span className=\"required-mark\">*</span></label>\n                <textarea\n                  placeholder=\"请输入简答题的标准答案\"\n                  value={problemForm.answer}\n                  onChange={(e) => setProblemForm(prev => ({ ...prev, answer: e.target.value }))}\n                  rows={6}\n                />\n                <small>请提供详细的答案内容，供学生参考和教师评分使用</small>\n              </div>\n            )}\n            \n            {/* 编程题相关字段 */}\n            {problemForm.type === 'programming' && (\n              <>\n                <div className=\"form-group\">\n                  <label>测试用例管理：<span className=\"required-mark\">*</span></label>\n                  <div className=\"test-cases-manager\">\n                    <div className=\"test-cases-header\">\n                      <span>测试用例</span>\n                      <button \n                        type=\"button\" \n                        className=\"add-test-case-btn\"\n                        onClick={() => addTestCase()}\n                      >\n                        ➕ 添加测试用例\n                      </button>\n                    </div>\n                    \n                    {problemForm.testCases && problemForm.testCases.length > 0 ? (\n                      <div className=\"test-cases-list\">\n                        {problemForm.testCases.map((testCase, index) => (\n                          <div key={testCase.id} className=\"test-case-item\">\n                            <div className=\"test-case-header\">\n                              <span className=\"test-case-number\">测试用例 {index + 1}</span>\n                              <button \n                                type=\"button\"\n                                className=\"remove-test-case-btn\"\n                                onClick={() => removeTestCase(testCase.id)}\n                              >\n                                ❌\n                              </button>\n                            </div>\n                            \n                            <div className=\"test-case-content\">\n                              <div className=\"test-case-input\">\n                                <label>输入：</label>\n                                <textarea\n                                  placeholder=\"输入数据（如果没有输入请留空）\"\n                                  value={testCase.input || ''}\n                                  onChange={(e) => updateTestCase(testCase.id, 'input', e.target.value)}\n                                  rows={3}\n                                />\n                                <small>如果没有输入，请留空</small>\n                              </div>\n                              \n                              <div className=\"test-case-output\">\n                                <label>期望输出：<span className=\"required-mark\">*</span></label>\n                                <textarea\n                                  placeholder=\"期望的输出结果\"\n                                  value={testCase.output || ''}\n                                  onChange={(e) => updateTestCase(testCase.id, 'output', e.target.value)}\n                                  rows={3}\n                                />\n                              </div>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    ) : (\n                      <div className=\"no-test-cases\">\n                        <p>还没有添加测试用例，请点击\"添加测试用例\"按钮添加</p>\n                      </div>\n                    )}\n                  </div>\n                </div>\n                \n                <div className=\"form-row\">\n                  <div className=\"form-group\">\n                    <label>时间限制：<span className=\"required-mark\">*</span></label>\n                    <input \n                      type=\"number\" \n                      placeholder=\"请输入时间限制（毫秒）\"\n                      value={problemForm.time_limit}\n                      onChange={(e) => setProblemForm(prev => ({ ...prev, time_limit: parseInt(e.target.value) || 1000 }))}\n                      min=\"100\"\n                      max=\"10000\"\n                    />\n                    <small>单位：毫秒，范围：100-10000</small>\n                  </div>\n                  \n                  <div className=\"form-group\">\n                    <label>内存限制：<span className=\"required-mark\">*</span></label>\n                    <input \n                      type=\"number\" \n                      placeholder=\"请输入内存限制（MB）\"\n                      value={problemForm.memory_limit}\n                      onChange={(e) => setProblemForm(prev => ({ ...prev, memory_limit: parseInt(e.target.value) || 128 }))}\n                      min=\"16\"\n                      max=\"512\"\n                    />\n                    <small>单位：MB，范围：16-512</small>\n                  </div>\n                </div>\n              </>\n            )}\n            \n            <div className=\"form-actions\">\n              <button \n                className=\"submit-btn\"\n                onClick={handleCreateProblem}\n                disabled={loading || !problemForm.title || !problemForm.description || \n                  (problemForm.type === 'programming' && (problemForm.testCases.length === 0 || \n                    problemForm.testCases.some(tc => !tc.output.trim()))) ||\n                  (problemForm.type === 'choice' && (problemForm.options.length < 2 || \n                    problemForm.options.some(option => !option.text) || \n                    problemForm.correct_answers.length === 0)) ||\n                  (problemForm.type === 'judge' && problemForm.correct_answers.length !== 1) ||\n                  (problemForm.type === 'short_answer' && !problemForm.answer)}\n              >\n                {loading ? (isEditing ? '更新中...' : '创建中...') : (isEditing ? '更新题目' : '创建题目')}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {activeSubTab === 'ai' && (\n        <AIProblemGenerationPage />\n      )}\n    </div>\n  );\n\n  // 课程查看标签页渲染函数（只读功能）\n  const renderCoursesTab = () => (\n    <div className=\"tab-content\">\n      <div className=\"sub-tabs\">\n        <button \n          className={`sub-tab-btn ${activeSubTab === 'list' ? 'active' : ''}`}\n          onClick={() => {\n            setActiveSubTab('list');\n            // 如果当前在课程详情页，清除课程详情状态\n            if (activeSubTab === 'detail') {\n              setEditingCourse(null);\n            }\n            // 清除添加学生上下文\n            setAddingStudentContext('');\n          }}\n        >\n          课程列表\n        </button>\n        <button \n          className={`sub-tab-btn ${activeSubTab === 'detail' ? 'active' : ''}`}\n          onClick={() => setActiveSubTab('detail')}\n          style={{ display: (editingCourse && activeSubTab === 'detail') ? 'inline-block' : 'none' }}\n        >\n          课程详情\n        </button>\n        <button \n          className={`sub-tab-btn ${activeSubTab === 'add-student-to-course' ? 'active' : ''}`}\n          onClick={() => setActiveSubTab('add-student-to-course')}\n          style={{ display: (editingCourse && activeSubTab === 'detail') ? 'inline-block' : 'none' }}\n        >\n          添加学生\n        </button>\n      </div>\n\n      {activeSubTab === 'list' && (\n        <div className=\"section-content\">\n          <div className=\"section-header\">\n            <h2>我的课程</h2>\n            <div className=\"section-info\">\n              <p>💡 点击任意课程卡片即可查看详情、管理学生和布置作业</p>\n            </div>\n          </div>\n          \n          <div className=\"courses-grid\">\n            {courses.length === 0 ? (\n              <div className=\"empty-state\">\n                <p>暂无课程，请联系管理员添加课程</p>\n              </div>\n            ) : (\n              courses.map(course => (\n                <div \n                  key={course.id} \n                  className=\"course-card\"\n                  onClick={() => handleViewCourseDetail(course.id)}\n                  style={{ cursor: 'pointer' }}\n                >\n                  <div className=\"course-header\">\n                    <h3>{course.name}</h3>\n                    <span className=\"course-status active\">进行中</span>\n                  </div>\n                  <div className=\"course-info\">\n                    <p><strong>教学班：</strong>{course.display_class_name || course.class_name || (course.teaching_class_name || '未设置')}</p>\n                    <p><strong>专业：</strong>{course.major_name}</p>\n                    <p><strong>学校：</strong>{course.school_name}</p>\n                    <p><strong>学生数量：</strong>{course.student_count || 0}人</p>\n                    <p><strong>创建时间：</strong>{formatDate(course.created_at)}</p>\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n      )}\n\n      {activeSubTab === 'detail' && editingCourse && (\n        <div className=\"section-content\">\n          <div className=\"section-header\">\n            <h2>📚 课程详情：{editingCourse.name}</h2>\n            <button \n              className=\"secondary-btn\"\n              onClick={() => {\n                setActiveSubTab('list');\n                setEditingCourse(null);\n              }}\n            >\n              ← 返回课程列表\n            </button>\n          </div>\n          \n          <div className=\"course-detail\">\n            <div className={`course-info-section ${courseDetailAnimations.courseInfoVisible ? 'lotus-visible' : ''}`}>\n              <h3>课程基本信息</h3>\n              <div className=\"info-grid\">\n                <div className=\"info-item\">\n                  <label>课程名称：</label>\n                  <span>{editingCourse.name}</span>\n                </div>\n                <div className=\"info-item\">\n                  <label>课程描述：</label>\n                  <span>{editingCourse.description}</span>\n                </div>\n                <div className=\"info-item\">\n                  <label>教学班：</label>\n                  <span>{editingCourse.display_class_name || editingCourse.class_name || (editingCourse.teaching_class_name || '未设置')}</span>\n                </div>\n                <div className=\"info-item\">\n                  <label>专业：</label>\n                  <span>{editingCourse.major_name}</span>\n                </div>\n                <div className=\"info-item\">\n                  <label>学校：</label>\n                  <span>{editingCourse.school_name}</span>\n                </div>\n                <div className=\"info-item\">\n                  <label>学生数量：</label>\n                  <span>{editingCourse.student_count || 0}人</span>\n                </div>\n                <div className=\"info-item\">\n                  <label>创建时间：</label>\n                  <span>{formatDate(editingCourse.created_at)}</span>\n                </div>\n              </div>\n            </div>\n\n            <div className={`course-students-section ${courseDetailAnimations.studentsSectionVisible ? 'lotus-visible' : ''}`}>\n              <div className=\"section-header\">\n                <h3>教学班学生</h3>\n                <button \n                  className=\"add-btn\"\n                  onClick={() => {\n                    // 设置添加学生上下文为课程详情页\n                    setAddingStudentContext('course-detail');\n                    setActiveSubTab('add-student-to-course');\n                  }}\n                >\n                  添加学生\n                </button>\n              </div>\n              <div className=\"students-table\">\n                <table>\n                  <thead>\n                    <tr>\n                      <th>学号</th>\n                      <th>姓名</th>\n                      <th>邮箱</th>\n                      <th>状态</th>\n                      <th>操作</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {(() => {\n                      // 获取当前课程的所有学生\n                      const courseStudents = [];\n                      \n                      // 1. 添加原本属于该教学班的学生\n                      const originalStudents = users.filter(user => \n                        user.class_id === editingCourse.class_id && user.role === 'student'\n                      );\n                      courseStudents.push(...originalStudents);\n                      \n                      // 2. 添加通过关联关系添加的学生\n                      const relatedStudents = studentClassRelations\n                        .filter(relation => relation.course_id === editingCourse.id)\n                        .map(relation => {\n                          // 查找学生的完整信息\n                          const studentInfo = users.find(user => user.id === relation.student_id);\n                          return {\n                            ...studentInfo,\n                            // 使用关联关系中的信息作为后备\n                            name: studentInfo ? studentInfo.name : relation.student_name,\n                            username: studentInfo ? studentInfo.username : relation.student_no,\n                            // 标记这是通过关联关系添加的学生\n                            isRelatedStudent: true,\n                            relationId: `${relation.student_id}_${relation.course_id}`\n                          };\n                        });\n                      courseStudents.push(...relatedStudents);\n                      \n                      if (courseStudents.length === 0) {\n                        return (\n                          <tr>\n                            <td colSpan=\"5\">\n                              <div className=\"empty-state\">\n                                <p>该教学班暂无学生</p>\n                              </div>\n                            </td>\n                          </tr>\n                        );\n                      }\n                      \n                      return courseStudents.map(student => (\n                        <tr key={student.id || student.relationId}>\n                          <td>{student.username}</td>\n                          <td>{student.name}</td>\n                          <td>{student.email || '-'}</td>\n                          <td>\n                            <span className={`status-badge ${student.isRelatedStudent ? 'related' : 'original'}`}>\n                              {student.isRelatedStudent ? '已添加' : '原班级'}\n                            </span>\n                          </td>\n                          <td>\n                            {student.isRelatedStudent ? (\n                              <button \n                                className=\"action-btn delete\"\n                                onClick={() => handleRemoveStudentFromCourse(student.relationId)}\n                              >\n                                移除\n                              </button>\n                            ) : (\n                              <button \n                                className=\"action-btn delete\"\n                                onClick={async () => {\n                                  if (!window.confirm('确定要将该原班级学生从本课程中退课吗？此操作不会删除其账号。')) return;\n                                  try {\n                                    await excludeOriginalStudent(editingCourse.id, student.id);\n                                    setSuccess('该学生已从本课程退课');\n                                    // 刷新课程学生数据\n                                    await fetchStudentClassRelations(editingCourse.id);\n                                  } catch (apiError) {\n                                    console.error('退课失败:', apiError);\n                                    setError(apiError.response?.data?.error || '退课失败');\n                                  }\n                                }}\n                              >\n                                退课\n                              </button>\n                            )}\n                          </td>\n                        </tr>\n                      ));\n                    })()}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n\n            <div className={`course-assignments-section ${courseDetailAnimations.assignmentsSectionVisible ? 'lotus-visible' : ''}`}>\n              <div className=\"section-header\">\n                <h3>已布置作业</h3>\n                <button \n                  className=\"add-btn\"\n                  onClick={() => {\n                    // 自动设置当前课程ID到作业表单\n                    setAssignmentForm(prev => ({\n                      ...prev,\n                      course_id: editingCourse.id\n                    }));\n                    // 设置编辑作业上下文为课程详情页\n                    setEditingAssignmentContext('course-detail');\n                    setActiveSubTab('create-assignment');\n                  }}\n                >\n                  布置作业\n                </button>\n              </div>\n              <div className=\"assignments-table\">\n                <table>\n                  <thead>\n                    <tr>\n                      <th>作业名称</th>\n                      <th>描述</th>\n                      <th>截止时间</th>\n                      <th>状态</th>\n                      <th>补交设置</th>\n                      <th>操作</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {assignments.filter(assignment => assignment.course_id === editingCourse.id).map(assignment => (\n                      <tr key={assignment.id}>\n                        <td>{assignment.name}</td>\n                        <td>{assignment.description}</td>\n                        <td>{formatDate(assignment.due_date)}</td>\n                        <td>\n                          <span className={`status-badge ${assignment.is_active ? 'active' : 'inactive'}`}>\n                            {assignment.is_active ? '进行中' : '已结束'}\n                          </span>\n                        </td>\n                        <td>\n                          {assignment.allow_overdue_submission ? (\n                            <div className=\"overdue-status\">\n                              <span className=\"overdue-badge enabled\">允许补交</span>\n                              {assignment.overdue_deadline && (\n                                <div className=\"overdue-detail\">\n                                  <small>补交截止: {formatDate(assignment.overdue_deadline)}</small>\n                                  <small>得分比例: {Math.round((assignment.overdue_score_ratio || 0.8) * 100)}%</small>\n                                </div>\n                              )}\n                            </div>\n                          ) : (\n                            <span className=\"overdue-badge disabled\">不允许补交</span>\n                          )}\n                        </td>\n                        <td>\n                          <button \n                            className=\"action-btn edit\"\n                            onClick={() => handleEditAssignment(assignment)}\n                          >\n                            编辑\n                          </button>\n                          <button \n                            className=\"action-btn delete\"\n                            onClick={() => handleDeleteAssignment(assignment.id)}\n                          >\n                            删除\n                          </button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n                {assignments.filter(assignment => assignment.course_id === editingCourse.id).length === 0 && (\n                  <div className=\"empty-state\">\n                    <p>该课程暂无作业</p>\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {/* 作业创建表单 */}\n            {activeSubTab === 'create-assignment' && (\n              <div className=\"course-assignment-form\">\n                <div className=\"section-header\">\n                  <h3>📝 布置作业（{editingCourse.name}）</h3>\n                  <button \n                    className=\"secondary-btn\"\n                    onClick={() => setActiveSubTab('detail')}\n                  >\n                    ← 返回课程详情\n                  </button>\n                </div>\n                \n                <div className=\"assignment-form\">\n                  <div className=\"form-row\">\n                    <div className=\"form-group\">\n                      <label>作业名称：<span className=\"required-mark\">*</span></label>\n                      <input \n                        type=\"text\" \n                        placeholder=\"请输入作业名称\"\n                        value={assignmentForm.name}\n                        onChange={(e) => setAssignmentForm(prev => ({ ...prev, name: e.target.value }))}\n                      />\n                    </div>\n                    \n                    <div className=\"form-group\">\n                      <label>课程：</label>\n                      <input \n                        type=\"text\" \n                        value={editingCourse.name}\n                        disabled\n                        className=\"disabled-input\"\n                      />\n                    </div>\n                  </div>\n                  \n                  <div className=\"form-group\">\n                    <label>作业描述：<span className=\"required-mark\">*</span></label>\n                    <textarea\n                      placeholder=\"请输入作业描述\"\n                      value={assignmentForm.description}\n                      onChange={(e) => setAssignmentForm(prev => ({ ...prev, description: e.target.value }))}\n                      rows={4}\n                    />\n                  </div>\n                  \n                  <div className=\"form-group\">\n                    <label>作业要求：<span className=\"required-mark\">*</span></label>\n                    <textarea\n                      placeholder=\"请输入作业要求\"\n                      value={assignmentForm.requirements}\n                      onChange={(e) => setAssignmentForm(prev => ({ ...prev, requirements: e.target.value }))}\n                      rows={4}\n                    />\n                  </div>\n                  \n                  <div className=\"form-row\">\n                    <div className=\"form-group\">\n                      <label>截止时间：<span className=\"required-mark\">*</span></label>\n                      <input \n                        type=\"datetime-local\" \n                        value={assignmentForm.due_date}\n                        onChange={(e) => setAssignmentForm(prev => ({ ...prev, due_date: e.target.value }))}\n                      />\n                    </div>\n                  </div>\n                  \n                  <div className=\"form-group\">\n                    <label>选择题目：</label>\n                    \n                    {/* 智能选题功能 */}\n                    <div className=\"ai-selection-section\">\n                      <div className=\"ai-selection-header\">\n                        <h4>🤖 AI智能选题</h4>\n                        <p className=\"ai-selection-desc\">输入选题需求，AI将自动从题目库中选择最合适的题目</p>\n                      </div>\n                      \n                      <div className=\"ai-selection-form\">\n                        <div className=\"form-row\">\n                          <div className=\"form-group\">\n                            <label>选题需求描述：</label>\n                            <textarea\n                              placeholder=\"例如：需要3道关于数组和循环的题目，难度从简单到困难，适合大一学生\"\n                              value={aiSelectionForm.requirements}\n                              onChange={(e) => setAiSelectionForm(prev => ({ ...prev, requirements: e.target.value }))}\n                              rows={3}\n                            />\n                          </div>\n                          \n                          <div className=\"form-group\">\n                            <label>题目数量：</label>\n                            <select\n                              value={aiSelectionForm.problem_count}\n                              onChange={(e) => setAiSelectionForm(prev => ({ ...prev, problem_count: parseInt(e.target.value) }))}\n                            >\n                              <option value={1}>1题</option>\n                              <option value={2}>2题</option>\n                              <option value={3}>3题</option>\n                              <option value={4}>4题</option>\n                              <option value={5}>5题</option>\n                            </select>\n                          </div>\n                        </div>\n                        \n                        <div className=\"ai-selection-actions\">\n                          <button \n                            className=\"ai-select-btn\"\n                            onClick={handleAiSelectProblems}\n                            disabled={isAiSelecting || !aiSelectionForm.requirements.trim()}\n                          >\n                            {isAiSelecting ? 'AI选题中...' : '🤖 开始AI选题'}\n                          </button>\n                          \n                          {aiSelectedProblems.length > 0 && (\n                            <>\n                              <button \n                                className=\"preview-btn\"\n                                onClick={handlePreviewAiSelection}\n                              >\n                                👁️ 预览结果\n                              </button>\n                              \n                              <button \n                                className=\"apply-btn\"\n                                onClick={handleApplyAiSelection}\n                              >\n                                ✅ 应用选题\n                              </button>\n                              \n                              <button \n                                className=\"clear-btn\"\n                                onClick={handleClearAiSelection}\n                              >\n                                🗑️ 清空结果\n                              </button>\n                            </>\n                          )}\n                        </div>\n                      </div>\n                      \n                      {/* AI选题结果展示 */}\n                      {aiSelectionResult && aiSelectedProblems.length > 0 && (\n                        <div className=\"ai-selection-result\">\n                          <h5>🎯 AI选题结果</h5>\n                          <div className=\"ai-selected-problems\">\n                            {aiSelectedProblems.map((selected, index) => {\n                              const problem = problems.find(p => p.id === selected.problem_id);\n                              return problem ? (\n                                <div key={selected.problem_id} className=\"ai-selected-problem\">\n                                  <div className=\"problem-info\">\n                                    <span className=\"problem-number\">{index + 1}</span>\n                                    <span className=\"problem-title\">{problem.title}</span>\n                                    <span className={`difficulty-badge ${problem.difficulty}`}>\n                                      {problem.difficulty === 'easy' ? '简单' : \n                                       problem.difficulty === 'medium' ? '中等' : '困难'}\n                                    </span>\n                                  </div>\n                                  <div className=\"ai-reason\">\n                                    <strong>选择理由：</strong>{selected.reason}\n                                  </div>\n                                  <div className=\"ai-details\">\n                                    <span>难度：{selected.difficulty_level}</span>\n                                    <span>概念：{selected.concept_coverage}</span>\n                                  </div>\n                                </div>\n                              ) : null;\n                            })}\n                          </div>\n                          \n                          {aiSelectionResult.selection_summary && (\n                            <div className=\"ai-summary\">\n                              <strong>AI选题总结：</strong>\n                              {aiSelectionResult.selection_summary}\n                            </div>\n                          )}\n                        </div>\n                      )}\n                    </div>\n                    \n                    <div className=\"problem-selection\">\n                      {problems.map(problem => (\n                        <label key={problem.id} className=\"problem-checkbox\">\n                          <input \n                            type=\"checkbox\" \n                            value={problem.id}\n                            checked={assignmentForm.problem_ids.includes(problem.id)}\n                            onChange={(e) => {\n                              if (e.target.checked) {\n                                setAssignmentForm(prev => ({ \n                                  ...prev, \n                                  problem_ids: [...prev.problem_ids, problem.id] \n                                }));\n                              } else {\n                                setAssignmentForm(prev => ({ \n                                  ...prev, \n                                  problem_ids: prev.problem_ids.filter(id => id !== problem.id) \n                                }));\n                              }\n                            }}\n                          />\n                          <span className=\"problem-title\">{problem.title}</span>\n                          <span className={`difficulty-badge ${problem.difficulty}`}>\n                            {problem.difficulty === 'easy' ? '简单' : \n                             problem.difficulty === 'medium' ? '中等' : '困难'}\n                          </span>\n                        </label>\n                      ))}\n                    </div>\n                  </div>\n                  \n                  <div className=\"form-actions\">\n                    <button \n                      className=\"submit-btn\"\n                      onClick={handleCreateAssignment}\n                      disabled={loading || !assignmentForm.name || !assignmentForm.description || !assignmentForm.requirements || !assignmentForm.due_date || !assignmentForm.course_id}\n                    >\n                      {loading ? '创建中...' : '布置作业'}\n                    </button>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* 添加学生到课程的表单 */}\n            {activeSubTab === 'add-student-to-course' && editingCourse && (\n              <div className=\"section-content\">\n                <div className=\"section-header\">\n                  <h3>👥 添加学生到课程：{editingCourse.name}</h3>\n                  <button \n                    className=\"secondary-btn\"\n                    onClick={() => setActiveSubTab('detail')}\n                  >\n                    ← 返回课程详情\n                  </button>\n                </div>\n                \n                <div className=\"add-student-to-course-form\">\n                  <div className=\"form-help\">\n                    <p>请选择要添加到该课程的学生：</p>\n                    <p>注意：只能添加已存在的学生账号</p>\n                  </div>\n                  \n                  <div className=\"form-row\">\n                    <div className=\"form-group\">\n                      <label>学号：<span className=\"required-mark\">*</span></label>\n                      <input \n                        type=\"text\" \n                        placeholder=\"请输入学号\"\n                        value={addStudentForm.student_no}\n                        onChange={(e) => setAddStudentForm(prev => ({ ...prev, student_no: e.target.value }))}\n                      />\n                    </div>\n                    \n                    <div className=\"form-group\">\n                      <label>姓名：<span className=\"required-mark\">*</span></label>\n                      <input \n                        type=\"text\" \n                        placeholder=\"请输入学生姓名\"\n                        value={addStudentForm.name}\n                        onChange={(e) => setAddStudentForm(prev => ({ ...prev, name: e.target.value }))}\n                      />\n                    </div>\n                  </div>\n                  \n                  <div className=\"form-actions\">\n                    <button \n                      className=\"submit-btn\"\n                      onClick={handleAddStudentToCourse}\n                      disabled={loading || !addStudentForm.student_no || !addStudentForm.name}\n                    >\n                      {loading ? '添加中...' : '添加学生到课程'}\n                    </button>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n\n  // 学生相关处理函数\n  const handleAddStudent = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      setSuccess('');\n      \n      await registerStudent(addStudentForm);\n      setSuccess('学生账号创建成功！');\n      \n      // 重置表单\n      setAddStudentForm({\n        student_no: '',\n        name: '',\n        password: '',\n        email: '',\n        phone: '',\n        school_id: '',\n        department_id: '',\n        major_id: '',\n        class_id: ''\n      });\n      \n      // 刷新用户列表\n      const usersData = await getUsers(1, 50, 'student');\n      setUsers(usersData.users);\n      \n      // 刷新课程列表（因为学生数量可能发生变化）\n      try {\n        const coursesData = await getTeacherCourses();\n        if (coursesData && coursesData.courses) {\n          setCourses(coursesData.courses);\n        }\n      } catch (error) {\n        console.warn('刷新课程列表失败:', error);\n      }\n      \n      // 切换到学生列表\n      setActiveSubTab('list');\n      \n    } catch (error) {\n      setError(error.response?.data?.error || '创建学生账号失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleEditStudentClick = (user) => {\n    setEditingUser(user);\n    setEditForm({\n      email: user.email || '',\n      phone: user.phone || '',\n      school_id: user.school_id || '',\n      major_id: user.major_id || '',\n      class_id: user.class_id || '',\n      new_password: ''\n    });\n    setError('');\n    setSuccess('');\n  };\n\n  const handleSaveStudent = async () => {\n    if (!editingUser) return;\n    try {\n      setLoading(true);\n      setError('');\n      setSuccess('');\n      await updateUser(editingUser.id, editForm);\n      setSuccess('学生信息已更新');\n      // 刷新列表\n      const usersData = await getUsers(1, 50, 'student');\n      setUsers(usersData.users);\n      \n      // 刷新课程列表（因为学生数量可能发生变化）\n      try {\n        const coursesData = await getTeacherCourses();\n        if (coursesData && coursesData.courses) {\n          setCourses(coursesData.courses);\n        }\n      } catch (error) {\n        console.warn('刷新课程列表失败:', error);\n      }\n      \n      setEditingUser(null);\n    } catch (error) {\n      setError(error.response?.data?.error || '更新学生信息失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCancelEditStudent = () => {\n    setEditingUser(null);\n    setEditForm({ email: '', phone: '', school_id: '', major_id: '', class_id: '', new_password: '' });\n  };\n\n  const handleDeleteStudent = async (userId) => {\n    if (!window.confirm('确定要删除该学生吗？此操作不可恢复。')) return;\n    try {\n      setLoading(true);\n      setError('');\n      setSuccess('');\n      await deleteUser(userId);\n      setSuccess('学生已删除');\n      const usersData = await getUsers(1, 50, 'student');\n      setUsers(usersData.users);\n      \n      // 刷新课程列表（因为学生数量可能发生变化）\n      try {\n        const coursesData = await getTeacherCourses();\n        if (coursesData && coursesData.courses) {\n          setCourses(coursesData.courses);\n        }\n      } catch (error) {\n        console.warn('刷新课程列表失败:', error);\n      }\n      \n    } catch (error) {\n      setError(error.response?.data?.error || '删除学生失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAddStudentSchoolChange = async (schoolId) => {\n    setAddStudentForm(prev => ({ \n      ...prev, \n      school_id: schoolId, \n      department_id: '', \n      major_id: '', \n      class_id: '' \n    }));\n    \n    // 不再重置全局的departments、majors和classes数组\n    // 这些数组应该保持完整，用于学生列表显示\n  };\n\n  const handleAddStudentDepartmentChange = async (departmentId) => {\n    setAddStudentForm(prev => ({ \n      ...prev, \n      department_id: departmentId, \n      major_id: '', \n      class_id: '' \n    }));\n    \n    // 不再重置全局的majors和classes数组\n    // 这些数组应该保持完整，用于学生列表显示\n  };\n\n  const handleAddStudentMajorChange = async (majorId) => {\n    setAddStudentForm(prev => ({ \n      ...prev, \n      major_id: majorId, \n      class_id: '' \n    }));\n    \n    // 不再重置全局的classes数组\n    // 这个数组应该保持完整，用于学生列表显示\n  };\n\n  // 选择题选项管理函数\n  const addChoiceOption = () => {\n    setProblemForm(prev => {\n      // 计算下一个可用的字母ID\n      const existingIds = prev.options.map(option => option.id);\n      let nextId = 'A';\n      for (let i = 0; i < 26; i++) {\n        const candidateId = String.fromCharCode(65 + i); // A, B, C, D...\n        if (!existingIds.includes(candidateId)) {\n          nextId = candidateId;\n          break;\n        }\n      }\n      \n      return {\n        ...prev,\n        options: [...prev.options, { id: nextId, text: '', is_correct: false }]\n      };\n    });\n  };\n\n  const removeChoiceOption = (optionId) => {\n    setProblemForm(prev => ({\n      ...prev,\n      options: prev.options.filter(option => option.id !== optionId)\n    }));\n  };\n\n  const updateChoiceOption = (optionId, field, value) => {\n    setProblemForm(prev => ({\n      ...prev,\n      options: prev.options.map(option => \n        option.id === optionId ? { ...option, [field]: value } : option\n      )\n    }));\n  };\n\n  const toggleChoiceOptionCorrect = (optionId) => {\n    setProblemForm(prev => {\n      let updatedOptions;\n      \n      if (prev.type === 'judge') {\n        // 判断题：单选模式，点击一个选项时取消其他选项\n        updatedOptions = prev.options.map(option => ({\n          ...option,\n          is_correct: option.id === optionId ? !option.is_correct : false\n        }));\n      } else {\n        // 选择题：多选模式，可以同时选择多个选项\n        updatedOptions = prev.options.map(option => \n          option.id === optionId ? { ...option, is_correct: !option.is_correct } : option\n        );\n      }\n      \n      // 更新正确答案数组 - 统一使用选项ID\n      const correctAnswers = updatedOptions\n        .filter(option => option.is_correct)\n        .map(option => option.id);\n      \n      return {\n        ...prev,\n        options: updatedOptions,\n        correct_answers: correctAnswers\n      };\n    });\n  };\n\n  const handleProblemTypeChange = (type) => {\n    setProblemForm(prev => {\n      if (type === 'choice') {\n        // 切换到选择题时，初始化至少两个选项\n        return {\n          ...prev,\n          type,\n          options: [\n            { id: 'A', text: '', is_correct: false },\n            { id: 'B', text: '', is_correct: false }\n          ],\n          correct_answers: [],\n          is_multiple_choice: false\n        };\n      } else if (type === 'judge') {\n        // 切换到判断题时，初始化两个固定选项\n        return {\n          ...prev,\n          type,\n          options: [\n            { id: 'A', text: '正确', is_correct: false },\n            { id: 'B', text: '错误', is_correct: false }\n          ],\n          correct_answers: [],\n          is_multiple_choice: false\n        };\n      } else if (type === 'short_answer') {\n        // 切换到简答题时，清空选项相关字段，添加答案字段\n        return {\n          ...prev,\n          type,\n          options: [],\n          correct_answers: [],\n          is_multiple_choice: false,\n          answer: '' // 简答题答案\n        };\n      } else {\n        // 切换到其他题型时，清空选择题相关字段\n        return {\n          ...prev,\n          type,\n          options: [],\n          correct_answers: [],\n          is_multiple_choice: false\n        };\n      }\n    });\n  };\n\n\n\n  // 获取当前选中专业对应的班级列表（用于选择器显示）\n  const getCurrentMajorClasses = () => {\n    if (!selectedMajor) return [];\n    \n    const majorId = selectedMajor;\n    const filteredClasses = classes.filter(classItem => {\n      const classMajorId = classItem.major_id;\n      const isMatch = classMajorId === majorId || classMajorId === parseInt(majorId) || parseInt(classMajorId) === majorId;\n      return isMatch;\n    });\n    \n    return filteredClasses;\n  };\n\n\n\n  // 获取添加学生表单中选中学校对应的院部列表\n  const getAddStudentSchoolDepartments = () => {\n    if (!addStudentForm.school_id) return [];\n    \n    const schoolId = addStudentForm.school_id;\n    const filteredDepartments = departments.filter(department => {\n      const deptSchoolId = department.school_id;\n      const isMatch = deptSchoolId === schoolId || deptSchoolId === parseInt(schoolId) || parseInt(deptSchoolId) === schoolId;\n      return isMatch;\n    });\n    \n    return filteredDepartments;\n  };\n\n  // 获取添加学生表单中选中院部对应的专业列表\n  const getAddStudentDepartmentMajors = () => {\n    if (!addStudentForm.department_id) return [];\n    \n    const departmentId = addStudentForm.department_id;\n    const filteredMajors = majors.filter(major => {\n      const majorDeptId = major.department_id;\n      const isMatch = majorDeptId === departmentId || majorDeptId === parseInt(departmentId) || parseInt(majorDeptId) === departmentId;\n      return isMatch;\n    });\n    \n    return filteredMajors;\n  };\n\n  // 获取添加学生表单中选中专业对应的班级列表\n  const getAddStudentMajorClasses = () => {\n    if (!addStudentForm.major_id) return [];\n    \n    const majorId = addStudentForm.major_id;\n    const filteredClasses = classes.filter(classItem => {\n      const classMajorId = classItem.major_id;\n      const isMatch = classMajorId === majorId || classMajorId === parseInt(majorId) || parseInt(classMajorId) === majorId;\n      return isMatch;\n    });\n    \n    return filteredClasses;\n  };\n\n  // 获取编辑学生表单中选中学校对应的专业列表\n  const getEditStudentSchoolMajors = () => {\n    if (!editForm.school_id) return [];\n    \n    const schoolId = editForm.school_id;\n    const filteredMajors = majors.filter(major => {\n      const majorSchoolId = major.school_id;\n      const isMatch = majorSchoolId === schoolId || majorSchoolId === parseInt(schoolId) || parseInt(majorSchoolId) === schoolId;\n      return isMatch;\n    });\n    \n    return filteredMajors;\n  };\n\n  // 获取编辑学生表单中选中专业对应的班级列表\n  const getEditStudentMajorClasses = () => {\n    if (!editForm.major_id) return [];\n    \n    const majorId = editForm.major_id;\n    const filteredClasses = classes.filter(classItem => {\n      const classMajorId = classItem.major_id;\n      const isMatch = classMajorId === majorId || classMajorId === parseInt(majorId) || parseInt(classMajorId) === majorId;\n      return isMatch;\n    });\n    \n    return filteredClasses;\n  };\n\n  // 获取当前选中学校对应的院部列表\n  const getCurrentSchoolDepartments = () => {\n    if (!selectedSchool) return [];\n    \n    const schoolId = selectedSchool;\n    const filteredDepartments = departments.filter(department => {\n      const deptSchoolId = department.school_id;\n      const isMatch = deptSchoolId === schoolId || deptSchoolId === parseInt(schoolId) || parseInt(deptSchoolId) === schoolId;\n      return isMatch;\n    });\n    \n    return filteredDepartments;\n  };\n\n  // 获取当前选中院部对应的专业列表\n  const getCurrentDepartmentMajors = () => {\n    if (!selectedDepartment) return [];\n    \n    const departmentId = selectedDepartment;\n    const filteredMajors = majors.filter(major => {\n      const majorDeptId = major.department_id;\n      const isMatch = majorDeptId === departmentId || majorDeptId === parseInt(departmentId) || parseInt(majorDeptId) === departmentId;\n      return isMatch;\n    });\n    \n    return filteredMajors;\n  };\n\n  // 智能选题处理函数\n  const handleAiSelectProblems = async () => {\n    if (!aiSelectionForm.requirements.trim()) {\n      setError('请输入选题需求描述');\n      return;\n    }\n\n    if (!editingCourse) {\n      setError('请先选择课程');\n      return;\n    }\n\n    try {\n      setIsAiSelecting(true);\n      setError('');\n      \n      const result = await aiSelectProblems({\n        requirements: aiSelectionForm.requirements,\n        course_id: editingCourse.id,\n        problem_count: aiSelectionForm.problem_count\n      });\n\n      setAiSelectedProblems(result.selected_problems || []);\n      setAiSelectionResult(result);\n      setSuccess('AI智能选题成功！');\n      \n      // 自动将AI选择的题目添加到作业表单中\n      const selectedProblemIds = result.selected_problems.map(p => p.problem_id);\n      setAssignmentForm(prev => ({\n        ...prev,\n        problem_ids: [...new Set([...prev.problem_ids, ...selectedProblemIds])]\n      }));\n\n    } catch (error) {\n      setError(error.message || 'AI选题失败，请重试');\n      console.error('AI选题失败:', error);\n    } finally {\n      setIsAiSelecting(false);\n    }\n  };\n\n  const handlePreviewAiSelection = async () => {\n    if (aiSelectedProblems.length === 0) {\n      setError('没有AI选择的题目可预览');\n      return;\n    }\n\n    try {\n      const result = await previewAiSelectedProblems({\n        selected_problem_ids: aiSelectedProblems.map(p => p.problem_id)\n      });\n      \n      // 可以在这里显示预览结果\n      console.log('AI选题预览结果:', result);\n      \n    } catch (error) {\n      setError(error.message || '预览失败');\n      console.error('预览失败:', error);\n    }\n  };\n\n  const handleApplyAiSelection = () => {\n    if (aiSelectedProblems.length === 0) {\n      setError('没有AI选择的题目可应用');\n      return;\n    }\n\n    // 将AI选择的题目应用到作业表单\n    const selectedProblemIds = aiSelectedProblems.map(p => p.problem_id);\n    setAssignmentForm(prev => ({\n      ...prev,\n      problem_ids: [...new Set([...prev.problem_ids, ...selectedProblemIds])]\n    }));\n\n    setSuccess(`已应用AI选择的${aiSelectedProblems.length}道题目`);\n  };\n\n  const handleClearAiSelection = () => {\n    setAiSelectedProblems([]);\n    setAiSelectionResult(null);\n    setAiSelectionForm({\n      requirements: '',\n      problem_count: 3\n    });\n  };\n\n  // 作业创建处理函数\n\n\n\n\n\n  return (\n    <div className=\"teacher-dashboard\">\n      <div className=\"dashboard-header\">\n        <h1>教师管理控制台</h1>\n      </div>\n      \n      <div className=\"dashboard-tabs\">\n        <button \n          className={`tab-btn ${activeTab === 'students' ? 'active' : ''}`}\n          onClick={() => {\n            setActiveTab('students');\n            setActiveSubTab('list');\n          }}\n        >\n          学生管理\n        </button>\n        <button \n          className={`tab-btn ${activeTab === 'problems' ? 'active' : ''}`}\n          onClick={() => {\n            setActiveTab('problems');\n            setActiveSubTab('list');\n          }}\n        >\n          题目管理\n        </button>\n        <button \n          className={`tab-btn ${activeTab === 'courses' ? 'active' : ''}`}\n          onClick={() => {\n            setActiveTab('courses');\n            setActiveSubTab('list');\n            // 清除课程详情状态\n            setEditingCourse(null);\n            setEditingAssignmentContext('');\n            setAddingStudentContext('');\n          }}\n        >\n          我的课程\n        </button>\n      </div>\n      \n      {error && <div className=\"error-message\">{error}</div>}\n      {success && <div className=\"success-message\">{success}</div>}\n      \n      {activeTab === 'students' && renderStudentsTab()}\n      {activeTab === 'problems' && renderProblemsTab()}\n      {activeTab === 'courses' && renderCoursesTab()}\n      \n      {/* 独立的布置作业表单面板 */}\n      {activeTab === 'courses' && activeSubTab === 'create-assignment' && editingCourse && (\n        <div className=\"tab-content\">\n          <div className=\"section-header\">\n            <h3>📝 布置作业（{editingCourse.name}）</h3>\n            <button \n              className=\"secondary-btn\"\n              onClick={() => setActiveSubTab('detail')}\n            >\n              ← 返回课程详情\n            </button>\n          </div>\n          \n          <div className=\"assignment-form\">\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>作业名称：<span className=\"required-mark\">*</span></label>\n                <input \n                  type=\"text\" \n                  placeholder=\"请输入作业名称\"\n                  value={assignmentForm.name}\n                  onChange={(e) => setAssignmentForm(prev => ({ ...prev, name: e.target.value }))}\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label>课程：</label>\n                <input \n                  type=\"text\" \n                  value={editingCourse.name}\n                  disabled\n                  className=\"disabled-input\"\n                />\n              </div>\n            </div>\n            \n            <div className=\"form-group\">\n              <label>作业描述：<span className=\"required-mark\">*</span></label>\n              <textarea\n                placeholder=\"请输入作业描述\"\n                value={assignmentForm.description}\n                onChange={(e) => setAssignmentForm(prev => ({ ...prev, description: e.target.value }))}\n                rows={4}\n              />\n            </div>\n            \n            <div className=\"form-group\">\n              <label>作业要求：<span className=\"required-mark\">*</span></label>\n              <textarea\n                placeholder=\"请输入作业要求\"\n                value={assignmentForm.requirements}\n                onChange={(e) => setAssignmentForm(prev => ({ ...prev, requirements: e.target.value }))}\n                rows={4}\n              />\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>截止时间：<span className=\"required-mark\">*</span></label>\n                <input \n                  type=\"datetime-local\" \n                  value={assignmentForm.due_date}\n                  onChange={(e) => setAssignmentForm(prev => ({ ...prev, due_date: e.target.value }))}\n                />\n              </div>\n            </div>\n            \n            {/* 补交作业设置 */}\n            <div className=\"overdue-settings-section\">\n              <h4>📝 补交作业设置</h4>\n              <div className=\"form-group\">\n                <label className=\"checkbox-label\">\n                  <input\n                    type=\"checkbox\"\n                    checked={assignmentForm.allow_overdue_submission}\n                    onChange={(e) => setAssignmentForm(prev => ({ \n                      ...prev, \n                      allow_overdue_submission: e.target.checked \n                    }))}\n                  />\n                  <span>允许补交作业</span>\n                </label>\n                <div className=\"form-help\">\n                  勾选此项后，学生可以在截止时间后补交作业（需要教师特别授权）\n                </div>\n              </div>\n              \n              {assignmentForm.allow_overdue_submission && (\n                <>\n                  <div className=\"form-row\">\n                    <div className=\"form-group\">\n                      <label>补交截止时间：</label>\n                      <input \n                        type=\"datetime-local\" \n                        value={assignmentForm.overdue_deadline}\n                        onChange={(e) => setAssignmentForm(prev => ({ \n                          ...prev, \n                          overdue_deadline: e.target.value \n                        }))}\n                        min={assignmentForm.due_date}\n                      />\n                      <div className=\"form-help\">\n                        设置补交的最终截止时间，必须晚于正常截止时间\n                      </div>\n                    </div>\n                    \n                    <div className=\"form-group\">\n                      <label>逾期得分比例：</label>\n                      <div className=\"score-ratio-control\">\n                        <input \n                          type=\"range\" \n                          min=\"0\" \n                          max=\"1\" \n                          step=\"0.1\"\n                          value={assignmentForm.overdue_score_ratio}\n                          onChange={(e) => setAssignmentForm(prev => ({ \n                            ...prev, \n                            overdue_score_ratio: parseFloat(e.target.value) \n                          }))}\n                        />\n                        <span className=\"score-ratio-display\">\n                          {Math.round(assignmentForm.overdue_score_ratio * 100)}%\n                        </span>\n                      </div>\n                      <div className=\"form-help\">\n                        逾期提交的作业将按此比例得分（0% = 不得分，100% = 正常得分）\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"form-group\">\n                    <label>补交说明：</label>\n                    <div className=\"overdue-info-box\">\n                      <p>💡 <strong>补交机制说明：</strong></p>\n                      <ul>\n                        <li>只有被教师添加到白名单的学生可以补交</li>\n                        <li>补交截止时间后，系统将拒绝所有补交请求</li>\n                        <li>逾期提交的作业会标记为\"逾期提交\"</li>\n                        <li>补交作业的得分将按设定比例计算</li>\n                      </ul>\n                    </div>\n                  </div>\n                </>\n              )}\n            </div>\n            \n            {/* 白名单管理（仅在编辑模式下显示） */}\n            {isEditingAssignment && editingAssignment && assignmentForm.allow_overdue_submission && (\n              <div className=\"whitelist-section\">\n                <AssignmentWhitelistManager \n                  assignment={editingAssignment}\n                  onUpdate={() => {\n                    // 刷新作业数据\n                    if (editingCourse) {\n                      getCourseAssignments().then(data => {\n                        setAssignments(data.assignments || []);\n                      });\n                    }\n                  }}\n                />\n              </div>\n            )}\n            \n            <div className=\"form-group\">\n              <label>选择题目：</label>\n              \n              {/* 智能选题功能 */}\n              <div className=\"ai-selection-section\">\n                <div className=\"ai-selection-header\">\n                  <h4>🤖 AI智能选题</h4>\n                  <p className=\"ai-selection-desc\">输入选题需求，AI将自动从题目库中选择最合适的题目</p>\n                </div>\n                \n                <div className=\"ai-selection-form\">\n                  <div className=\"form-row\">\n                    <div className=\"form-group\">\n                      <label>选题需求描述：</label>\n                      <textarea\n                        placeholder=\"例如：需要3道关于数组和循环的题目，难度从简单到困难，适合大一学生\"\n                        value={aiSelectionForm.requirements}\n                        onChange={(e) => setAiSelectionForm(prev => ({ ...prev, requirements: e.target.value }))}\n                        rows={3}\n                      />\n                    </div>\n                    \n                    <div className=\"form-group\">\n                      <label>题目数量：</label>\n                      <select\n                        value={aiSelectionForm.problem_count}\n                        onChange={(e) => setAiSelectionForm(prev => ({ ...prev, problem_count: parseInt(e.target.value) }))}\n                      >\n                        <option value={1}>1题</option>\n                        <option value={2}>2题</option>\n                        <option value={3}>3题</option>\n                        <option value={4}>4题</option>\n                        <option value={5}>5题</option>\n                      </select>\n                    </div>\n                  </div>\n                  \n                  <div className=\"ai-selection-actions\">\n                    <button \n                      className=\"ai-select-btn\"\n                      onClick={handleAiSelectProblems}\n                      disabled={isAiSelecting || !aiSelectionForm.requirements.trim()}\n                    >\n                      {isAiSelecting ? 'AI选题中...' : '🤖 开始AI选题'}\n                    </button>\n                    \n                    {aiSelectedProblems.length > 0 && (\n                      <>\n                        <button \n                          className=\"preview-btn\"\n                          onClick={handlePreviewAiSelection}\n                        >\n                          👁️ 预览结果\n                        </button>\n                        \n                        <button \n                          className=\"apply-btn\"\n                          onClick={handleApplyAiSelection}\n                        >\n                          ✅ 应用选题\n                        </button>\n                        \n                        <button \n                          className=\"clear-btn\"\n                          onClick={handleClearAiSelection}\n                        >\n                          🗑️ 清空结果\n                        </button>\n                      </>\n                    )}\n                  </div>\n                </div>\n                \n                {/* AI选题结果展示 */}\n                {aiSelectionResult && aiSelectedProblems.length > 0 && (\n                  <div className=\"ai-selection-result\">\n                    <h5>🎯 AI选题结果</h5>\n                    <div className=\"ai-selected-problems\">\n                      {aiSelectedProblems.map((selected, index) => {\n                        const problem = problems.find(p => p.id === selected.problem_id);\n                        return problem ? (\n                          <div key={selected.problem_id} className=\"ai-selected-problem\">\n                            <div className=\"problem-info\">\n                              <span className=\"problem-number\">{index + 1}</span>\n                              <span className=\"problem-title\">{problem.title}</span>\n                              <span className={`difficulty-badge ${problem.difficulty}`}>\n                                {problem.difficulty === 'easy' ? '简单' : \n                                 problem.difficulty === 'medium' ? '中等' : '困难'}\n                              </span>\n                            </div>\n                            <div className=\"ai-reason\">\n                              <strong>选择理由：</strong>{selected.reason}\n                            </div>\n                            <div className=\"ai-details\">\n                              <span>难度：{selected.difficulty_level}</span>\n                              <span>概念：{selected.concept_coverage}</span>\n                            </div>\n                          </div>\n                        ) : null;\n                      })}\n                    </div>\n                    \n                    {aiSelectionResult.selection_summary && (\n                      <div className=\"ai-summary\">\n                        <strong>AI选题总结：</strong>\n                        {aiSelectionResult.selection_summary}\n                      </div>\n                    )}\n                  </div>\n                )}\n              </div>\n              \n              <div className=\"problem-selection\">\n                {problems.map(problem => (\n                  <label key={problem.id} className=\"problem-checkbox\">\n                    <input \n                      type=\"checkbox\" \n                      value={problem.id}\n                      checked={assignmentForm.problem_ids.includes(problem.id)}\n                      onChange={(e) => {\n                        if (e.target.checked) {\n                          setAssignmentForm(prev => ({ \n                            ...prev, \n                            problem_ids: [...prev.problem_ids, problem.id] \n                          }));\n                        } else {\n                          setAssignmentForm(prev => ({ \n                            ...prev, \n                            problem_ids: prev.problem_ids.filter(id => id !== problem.id) \n                          }));\n                        }\n                      }}\n                    />\n                    <span className=\"problem-title\">{problem.title}</span>\n                    <span className={`difficulty-badge ${problem.difficulty}`}>\n                      {problem.difficulty === 'easy' ? '简单' : \n                       problem.difficulty === 'medium' ? '中等' : '困难'}\n                    </span>\n                  </label>\n                ))}\n              </div>\n            </div>\n            \n            <div className=\"form-actions\">\n              <button \n                className=\"submit-btn\"\n                onClick={handleCreateAssignment}\n                disabled={loading || !assignmentForm.name || !assignmentForm.description || !assignmentForm.requirements || !assignmentForm.due_date || !assignmentForm.course_id}\n              >\n                {loading ? '创建中...' : '布置作业'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 独立的添加学生到课程表单面板 */}\n      {activeTab === 'courses' && activeSubTab === 'add-student-to-course' && editingCourse && (\n        <div className=\"tab-content\">\n          <div className=\"section-header\">\n            <h3>👥 添加学生到课程：{editingCourse.name}</h3>\n            <button \n              className=\"secondary-btn\"\n              onClick={() => setActiveSubTab('detail')}\n            >\n              ← 返回课程详情\n            </button>\n          </div>\n          \n          <div className=\"add-student-to-course-form\">\n            <div className=\"form-help\">\n              <p>请选择要添加到该课程的学生：</p>\n              <p>注意：只能添加已存在的学生账号</p>\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>学号：<span className=\"required-mark\">*</span></label>\n                <input \n                  type=\"text\" \n                  placeholder=\"请输入学号\"\n                  value={addStudentForm.student_no}\n                  onChange={(e) => setAddStudentForm(prev => ({ ...prev, student_no: e.target.value }))}\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label>姓名：<span className=\"required-mark\">*</span></label>\n                <input \n                  type=\"text\" \n                  placeholder=\"请输入学生姓名\"\n                  value={addStudentForm.name}\n                  onChange={(e) => setAddStudentForm(prev => ({ ...prev, name: e.target.value }))}\n                />\n              </div>\n            </div>\n            \n            <div className=\"form-actions\">\n              <button \n                className=\"submit-btn\"\n                onClick={handleAddStudentToCourse}\n                disabled={loading || !addStudentForm.student_no || !addStudentForm.name}\n              >\n                {loading ? '添加中...' : '添加学生到课程'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* 编辑学生表单 - 全局显示 */}\n      {editingUser && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal\">\n            <div className=\"modal-header\">\n              <h3>编辑学生：{editingUser.name}（学号{editingUser.username}）</h3>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"form-row\">\n                <div className=\"form-group\">\n                  <label>邮箱：</label>\n                  <input type=\"email\" value={editForm.email} onChange={(e) => setEditForm(prev => ({ ...prev, email: e.target.value }))} />\n                </div>\n                <div className=\"form-group\">\n                  <label>手机号：</label>\n                  <input type=\"tel\" value={editForm.phone} onChange={(e) => setEditForm(prev => ({ ...prev, phone: e.target.value }))} />\n                </div>\n              </div>\n              <div className=\"form-row\">\n                <div className=\"form-group\">\n                  <label>学校：</label>\n                  <select value={editForm.school_id} onChange={(e) => {\n                    const val = e.target.value;\n                    setEditForm(prev => ({ ...prev, school_id: val, major_id: '', class_id: '' }));\n                  }}>\n                    <option value=\"\">请选择学校</option>\n                    {schools.map(s => <option key={s.id} value={s.id}>{s.name}</option>)}\n                  </select>\n                </div>\n                <div className=\"form-group\">\n                  <label>专业：</label>\n                  <select value={editForm.major_id} onChange={(e) => {\n                    const val = e.target.value;\n                    setEditForm(prev => ({ ...prev, major_id: val, class_id: '' }));\n                  }} disabled={!editForm.school_id}>\n                    <option value=\"\">请选择专业</option>\n                    {getEditStudentSchoolMajors().map(m => <option key={m.id} value={m.id}>{m.name}</option>)}\n                  </select>\n                </div>\n              </div>\n              <div className=\"form-row\">\n                <div className=\"form-group\">\n                  <label>班级：</label>\n                  <select value={editForm.class_id} onChange={(e) => setEditForm(prev => ({ ...prev, class_id: e.target.value }))} disabled={!editForm.major_id}>\n                    <option value=\"\">请选择班级</option>\n                    {getEditStudentMajorClasses().map(c => <option key={c.id} value={c.id}>{c.name}</option>)}\n                  </select>\n                </div>\n                <div className=\"form-group\">\n                  <label>重置密码（可选）：</label>\n                  <input type=\"password\" value={editForm.new_password} onChange={(e) => setEditForm(prev => ({ ...prev, new_password: e.target.value }))} />\n                </div>\n              </div>\n            </div>\n            <div className=\"modal-footer\">\n              <button className=\"secondary-btn\" onClick={handleCancelEditStudent}>取消</button>\n              <button className=\"submit-btn\" onClick={handleSaveStudent} disabled={loading}>{loading ? '保存中...' : '保存'}</button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TeacherDashboardPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
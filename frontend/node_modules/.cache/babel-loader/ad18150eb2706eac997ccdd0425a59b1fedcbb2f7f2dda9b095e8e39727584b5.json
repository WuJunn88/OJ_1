{"ast":null,"code":"var _jsxFileName = \"/Volumes/\\u575E\\u57CE/OJ_1/frontend/src/pages/AIProblemGenerationPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { aiGenerateProblem, aiPreviewProblem, aiValidateAndCreateProblem, getProblems } from '../services/api';\nimport './AIProblemGenerationPage.css';\nimport WhaleIcon from '../components/WhaleIcon';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AIProblemGenerationPage = () => {\n  _s();\n  const [step, setStep] = useState(1); // 1: 输入需求, 2: 预览修改, 3: 最终确认\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [requirements, setRequirements] = useState('');\n  const [generatedProblem, setGeneratedProblem] = useState(null);\n  const [editedProblem, setEditedProblem] = useState(null);\n  const [validationResult, setValidationResult] = useState('');\n\n  // 添加调试信息\n  const [debugInfo, setDebugInfo] = useState('');\n\n  // 测试用例管理\n  const [testCases, setTestCases] = useState([{\n    input: '',\n    output: ''\n  }]);\n\n  // 解析测试用例（从AI生成的格式转换为结构化格式）\n  const parseGeneratedTestCases = (testCasesText, expectedOutputText) => {\n    if (!testCasesText || !expectedOutputText) return [{\n      input: '',\n      output: ''\n    }];\n\n    // 添加调试日志\n    console.log('开始解析测试用例:');\n    console.log('testCasesText:', testCasesText);\n    console.log('expectedOutputText:', expectedOutputText);\n    try {\n      // 尝试解析为JSON格式\n      const parsed = JSON.parse(testCasesText);\n      if (Array.isArray(parsed)) {\n        console.log('成功解析为JSON格式');\n        return parsed.map(tc => ({\n          input: tc.input || '',\n          output: tc.output || ''\n        }));\n      }\n    } catch (e) {\n      // 如果不是JSON，尝试解析文本格式\n      console.log('解析为JSON失败，尝试解析文本格式');\n    }\n\n    // 策略1：识别结构化格式（输入1：xxx 输出1：xxx）\n    console.log('尝试识别结构化格式');\n    const structuredResult = parseStructuredFormat(testCasesText);\n    if (structuredResult.length > 0) {\n      console.log('成功解析为结构化格式');\n      return structuredResult;\n    }\n\n    // 策略2：智能行分割（基于内容特征）\n    console.log('尝试智能行分割');\n    const lines = testCasesText.split('\\n').filter(line => line.trim());\n    if (lines.length > 0) {\n      const smartResult = smartLineSplit(lines);\n      if (smartResult.length > 0) {\n        console.log('使用智能行分割成功');\n        return smartResult;\n      }\n    }\n\n    // 策略3：回退到简化解析逻辑\n    console.log('使用简化解析逻辑');\n\n    // 尝试从testCasesText中提取输入和输出\n    let inputContent = '';\n    let outputContent = '';\n\n    // 如果AI生成了包含\"输入：\"和\"输出：\"的格式，尝试提取\n    if (testCasesText.includes('输入：') && testCasesText.includes('输出：')) {\n      const parts = testCasesText.split('输出：');\n      if (parts.length >= 2) {\n        inputContent = parts[0].replace('输入：', '').trim();\n        outputContent = parts[1].trim();\n      }\n    } else {\n      // 如果没有明确标记，尝试智能分割\n      const lines = testCasesText.split('\\n').filter(line => line.trim());\n      if (lines.length > 0) {\n        // 假设前一半是输入，后一半是输出\n        const midPoint = Math.ceil(lines.length / 2);\n        inputContent = lines.slice(0, midPoint).join('\\n');\n        outputContent = lines.slice(midPoint).join('\\n');\n      }\n    }\n\n    // 如果从testCasesText没有提取到内容，尝试从expectedOutputText\n    if (!inputContent && !outputContent && expectedOutputText) {\n      outputContent = expectedOutputText.trim();\n    }\n    console.log('提取的输入内容:', inputContent);\n    console.log('提取的输出内容:', outputContent);\n\n    // 返回一个包含提取内容的测试用例，让教师手动调整\n    if (inputContent || outputContent) {\n      return [{\n        input: inputContent,\n        output: outputContent,\n        _needsManualReview: true // 标记需要手动检查\n      }];\n    }\n\n    // 如果什么都没提取到，返回空的测试用例\n    return [{\n      input: '',\n      output: ''\n    }];\n  };\n\n  // 解析结构化格式的函数\n  const parseStructuredFormat = testCasesText => {\n    const result = [];\n\n    // 匹配模式：输入1：[内容] 输出1：[内容] 输入2：[内容] 输出2：[内容] ...\n    const inputPattern = /输入(\\d+)[：:]\\s*([\\s\\S]*?)(?=输出\\1[：:]|输入\\d+[：:]|$)/g;\n    const outputPattern = /输出(\\d+)[：:]\\s*([\\s\\S]*?)(?=输入\\d+[：:]|输出\\d+[：:]|$)/g;\n    const inputs = {};\n    const outputs = {};\n\n    // 提取所有输入\n    let match;\n    while ((match = inputPattern.exec(testCasesText)) !== null) {\n      const index = parseInt(match[1]);\n      inputs[index] = match[2].trim();\n    }\n\n    // 提取所有输出\n    while ((match = outputPattern.exec(testCasesText)) !== null) {\n      const index = parseInt(match[1]);\n      outputs[index] = match[2].trim();\n    }\n\n    // 如果找到结构化格式，按索引匹配\n    if (Object.keys(inputs).length > 0 || Object.keys(outputs).length > 0) {\n      const maxIndex = Math.max(...Object.keys(inputs).map(k => parseInt(k)), ...Object.keys(outputs).map(k => parseInt(k)));\n      for (let i = 1; i <= maxIndex; i++) {\n        result.push({\n          input: inputs[i] || '',\n          output: outputs[i] || '',\n          _needsManualReview: !inputs[i] || !outputs[i] // 如果缺少输入或输出，标记需要检查\n        });\n      }\n      console.log(`解析到 ${result.length} 个结构化测试用例`);\n      return result;\n    }\n    return [];\n  };\n\n  // 智能行分割函数\n  const smartLineSplit = lines => {\n    const result = [];\n    let currentInput = [];\n    let currentOutput = [];\n    let inInputSection = true;\n    let testCaseIndex = 1;\n    for (let i = 0; i < lines.length; i++) {\n      const line = lines[i];\n\n      // 检测输入输出分界点\n      if (isInputOutputBoundary(line, lines, i)) {\n        // 保存当前的测试用例\n        if (currentInput.length > 0 || currentOutput.length > 0) {\n          result.push({\n            input: currentInput.join('\\n'),\n            output: currentOutput.join('\\n'),\n            _needsManualReview: currentInput.length === 0 || currentOutput.length === 0\n          });\n          testCaseIndex++;\n        }\n\n        // 重置当前测试用例\n        currentInput = [];\n        currentOutput = [];\n        inInputSection = !inInputSection;\n      }\n\n      // 根据当前状态添加到输入或输出\n      if (inInputSection) {\n        currentInput.push(line);\n      } else {\n        currentOutput.push(line);\n      }\n    }\n\n    // 添加最后一个测试用例\n    if (currentInput.length > 0 || currentOutput.length > 0) {\n      result.push({\n        input: currentInput.join('\\n'),\n        output: currentOutput.join('\\n'),\n        _needsManualReview: currentInput.length === 0 || currentOutput.length === 0\n      });\n    }\n    console.log(`智能行分割得到 ${result.length} 个测试用例`);\n    return result;\n  };\n\n  // 检测输入输出分界点的函数\n  const isInputOutputBoundary = (line, allLines, currentIndex) => {\n    const lineLower = line.toLowerCase();\n\n    // 检测明显的分隔符\n    if (lineLower.includes('---') || lineLower.includes('===') || lineLower.includes('***')) {\n      return true;\n    }\n\n    // 检测数字编号（如 \"1.\" \"2.\" 等）\n    if (/^\\d+\\./.test(line.trim())) {\n      return true;\n    }\n\n    // 检测\"输入X：\"或\"输出X：\"格式\n    if (/^(输入|输出)\\d+[：:]/.test(line.trim())) {\n      return true;\n    }\n\n    // 检测空行后的新测试用例开始\n    if (currentIndex > 0 && allLines[currentIndex - 1].trim() === '') {\n      const nextLines = allLines.slice(currentIndex + 1, currentIndex + 3);\n      if (nextLines.some(l => l.toLowerCase().includes('输入') || l.toLowerCase().includes('输出'))) {\n        return true;\n      }\n    }\n\n    // 检测连续空行（可能表示测试用例分隔）\n    if (currentIndex > 0 && currentIndex < allLines.length - 1) {\n      const prevLine = allLines[currentIndex - 1].trim();\n      const nextLine = allLines[currentIndex + 1].trim();\n      if (prevLine === '' && nextLine === '' && line.trim() === '') {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  // 步骤1: AI生成题目\n  const handleGenerate = async () => {\n    if (!requirements.trim()) {\n      setError('请输入生题需求');\n      return;\n    }\n    try {\n      setLoading(true);\n      setError('');\n\n      // 添加调试信息\n      const token = localStorage.getItem('token');\n      const user = localStorage.getItem('user');\n      setDebugInfo(`Token: ${token ? token.substring(0, 20) + '...' : 'No token'}, User: ${user ? JSON.parse(user).username : 'No user'}`);\n      console.log('开始调用AI生题API...');\n      console.log('Token:', token);\n      console.log('Requirements:', requirements);\n      const result = await aiGenerateProblem(requirements);\n      console.log('API响应:', result);\n      if (result.success) {\n        setGeneratedProblem(result.problem);\n        setEditedProblem({\n          ...result.problem\n        }); // 复制一份用于编辑\n\n        // 解析测试用例\n        const parsedCases = parseGeneratedTestCases(result.problem.test_cases, result.problem.expected_output);\n        setTestCases(parsedCases);\n        setStep(2);\n      } else {\n        setError(result.error || 'AI生成失败');\n      }\n    } catch (error) {\n      var _error$response, _error$response2, _error$response3, _error$response3$data;\n      console.error('AI生成错误详情:', error);\n      console.error('错误响应:', error.response);\n      console.error('错误数据:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n      let errorMessage = '生成题目失败，请重试';\n      if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n        errorMessage = '认证失败，使用测试模式...';\n\n        // 使用模拟数据来测试前端功能\n        const mockProblem = {\n          title: '字符串反转（测试模式）',\n          description: '给定一个字符串，请将其反转后输出。\\n\\n输入格式：一行包含一个字符串\\n输出格式：输出反转后的字符串',\n          test_cases: '输入1：hello\\n输出1：olleh\\n\\n输入2：world\\n输出2：dlrow\\n\\n输入3：test\\n输出3：tset',\n          expected_output: 'olleh\\ndlrow\\ntset',\n          difficulty: 'easy',\n          time_limit: 1000,\n          memory_limit: 128,\n          ai_generated: true,\n          original_requirements: requirements,\n          generated_at: new Date().toISOString()\n        };\n        setGeneratedProblem(mockProblem);\n        setEditedProblem({\n          ...mockProblem\n        });\n\n        // 解析测试用例\n        const parsedCases = parseGeneratedTestCases(mockProblem.test_cases, mockProblem.expected_output);\n        setTestCases(parsedCases);\n        setStep(2);\n        setError(''); // 清除错误信息\n        return;\n      } else if ((_error$response3 = error.response) !== null && _error$response3 !== void 0 && (_error$response3$data = _error$response3.data) !== null && _error$response3$data !== void 0 && _error$response3$data.error) {\n        errorMessage = error.response.data.error;\n      } else if (error.message) {\n        errorMessage = error.message;\n      }\n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 步骤2: 预览修改\n  const handlePreview = async () => {\n    try {\n      setLoading(true);\n      setError('');\n\n      // 将测试用例转换为字符串格式，保持向后兼容\n      const testCasesText = testCases.map(tc => `输入：${tc.input}\\n输出：${tc.output}`).join('\\n\\n');\n      const expectedOutputText = testCases.map(tc => tc.output).join('\\n');\n      const updatedProblem = {\n        ...editedProblem,\n        test_cases: testCasesText,\n        expected_output: expectedOutputText\n      };\n      setEditedProblem(updatedProblem);\n      const result = await aiPreviewProblem(updatedProblem);\n      if (result.success) {\n        setStep(3);\n      } else {\n        setError('预览失败');\n      }\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      setError(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || '预览失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 步骤3: 最终创建\n  const handleCreateProblem = async (forceCreate = false) => {\n    try {\n      setLoading(true);\n      setError('');\n\n      // 将测试用例转换为JSON格式\n      const testCasesJson = JSON.stringify(testCases.map(tc => ({\n        input: tc.input || '',\n        output: tc.output || ''\n      })));\n      const problemData = {\n        ...editedProblem,\n        test_cases: testCasesJson,\n        expected_output: testCases.map(tc => tc.output || '').join('\\n'),\n        // 保持向后兼容\n        force_create: forceCreate\n      };\n      const result = await aiValidateAndCreateProblem(problemData);\n      if (result.success) {\n        alert('题目创建成功！');\n\n        // 尝试刷新题目列表\n        try {\n          const problemsData = await getProblems(1, 50);\n          console.log('题目创建成功，新题目数据:', problemsData);\n\n          // 尝试通过多种方式通知父组件刷新\n          // 方法1: localStorage标记\n          localStorage.setItem('refreshProblems', 'true');\n          localStorage.setItem('lastProblemCreated', new Date().toISOString());\n\n          // 方法2: 自定义事件\n          window.dispatchEvent(new CustomEvent('problemCreated', {\n            detail: {\n              problemData: problemsData\n            }\n          }));\n\n          // 方法3: 如果当前页面在iframe中，通知父页面\n          if (window.parent && window.parent !== window) {\n            try {\n              window.parent.postMessage({\n                type: 'PROBLEM_CREATED',\n                data: problemsData\n              }, '*');\n            } catch (e) {\n              console.log('无法通知父页面:', e);\n            }\n          }\n        } catch (error) {\n          console.warn('无法刷新题目列表:', error);\n        }\n\n        // 重置状态\n        setStep(1);\n        setRequirements('');\n        setGeneratedProblem(null);\n        setEditedProblem(null);\n        setValidationResult('');\n        setTestCases([{\n          input: '',\n          output: ''\n        }]);\n      } else {\n        setValidationResult(result.validation_result);\n        setError(result.message);\n      }\n    } catch (error) {\n      var _error$response5;\n      const errorData = (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data;\n      if (errorData !== null && errorData !== void 0 && errorData.validation_result) {\n        setValidationResult(errorData.validation_result);\n      }\n      setError((errorData === null || errorData === void 0 ? void 0 : errorData.message) || '创建题目失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 处理输入变化\n  const handleInputChange = (field, value) => {\n    setEditedProblem(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  // 重新开始\n  const handleRestart = () => {\n    setStep(1);\n    setRequirements('');\n    setGeneratedProblem(null);\n    setEditedProblem(null);\n    setValidationResult('');\n    setError('');\n    setTestCases([{\n      input: '',\n      output: ''\n    }]);\n  };\n\n  // 测试用例管理\n  const addTestCase = () => {\n    setTestCases([...testCases, {\n      input: '',\n      output: ''\n    }]);\n  };\n  const removeTestCase = index => {\n    setTestCases(testCases.filter((_, i) => i !== index));\n  };\n  const updateTestCase = (index, field, value) => {\n    const newTestCases = [...testCases];\n    newTestCases[index][field] = value;\n    setTestCases(newTestCases);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ai-problem-generation\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(WhaleIcon, {\n          size: 32\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 13\n        }, this), \" AI\\u667A\\u80FD\\u751F\\u9898\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `step ${step >= 1 ? 'active' : ''}`,\n          children: \"1. \\u8F93\\u5165\\u9700\\u6C42\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `step ${step >= 2 ? 'active' : ''}`,\n          children: \"2. \\u9884\\u89C8\\u4FEE\\u6539\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `step ${step >= 3 ? 'active' : ''}`,\n          children: \"3. \\u6700\\u7EC8\\u786E\\u8BA4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error-icon\",\n        children: \"\\u26A0\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 11\n      }, this), error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 9\n    }, this), debugInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"debug-info\",\n      style: {\n        background: '#f0f8ff',\n        padding: '10px',\n        margin: '10px 0',\n        borderRadius: '5px',\n        fontSize: '12px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"\\u8C03\\u8BD5\\u4FE1\\u606F:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 11\n      }, this), \" \", debugInfo]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 9\n    }, this), step === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83D\\uDCDD \\u63CF\\u8FF0\\u60A8\\u7684\\u9898\\u76EE\\u9700\\u6C42\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"requirements-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: requirements,\n          onChange: e => setRequirements(e.target.value),\n          placeholder: \"\\u8BF7\\u8BE6\\u7EC6\\u63CF\\u8FF0\\u60A8\\u60F3\\u8981\\u751F\\u6210\\u7684\\u9898\\u76EE\\uFF0C\\u4F8B\\u5982\\uFF1A \\u751F\\u6210\\u4E00\\u4E2A\\u5173\\u4E8E\\u6570\\u7EC4\\u6392\\u5E8F\\u7684\\u7B80\\u5355\\u9898\\u76EE\\uFF0C\\u9002\\u5408\\u521D\\u5B66\\u8005\\uFF1A\\n- \\u96BE\\u5EA6\\uFF1A\\u7B80\\u5355\\n- \\u5305\\u542B3-5\\u4E2A\\u6D4B\\u8BD5\\u7528\\u4F8B\\n- \\u8981\\u6C42\\u4F7F\\u7528\\u5192\\u6CE1\\u6392\\u5E8F\\u6216\\u9009\\u62E9\\u6392\\u5E8F\\n- \\u8F93\\u5165\\u8F93\\u51FA\\u683C\\u5F0F\\u8981\\u6E05\\u6670 AI\\u4F1A\\u751F\\u6210\\u57FA\\u672C\\u7684\\u8F93\\u5165\\u8F93\\u51FA\\u6837\\u4F8B\\uFF0C\\u60A8\\u53EF\\u4EE5\\u5728\\u9884\\u89C8\\u9636\\u6BB5\\u624B\\u52A8\\u8C03\\u6574\\u6D4B\\u8BD5\\u7528\\u4F8B\\u3002\",\n          rows: 8,\n          className: \"requirements-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-tips\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uD83D\\uDCA1 \\u751F\\u9898\\u5EFA\\u8BAE\\uFF1A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u660E\\u786E\\u6307\\u5B9A\\u9898\\u76EE\\u7C7B\\u578B\\uFF08\\u5982\\uFF1A\\u6570\\u7EC4\\u3001\\u5B57\\u7B26\\u4E32\\u3001\\u7B97\\u6CD5\\u7B49\\uFF09\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u8BF4\\u660E\\u96BE\\u5EA6\\u7B49\\u7EA7\\uFF08\\u7B80\\u5355/\\u4E2D\\u7B49/\\u56F0\\u96BE\\uFF09\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u6307\\u5B9A\\u6D4B\\u8BD5\\u7528\\u4F8B\\u6570\\u91CF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u63CF\\u8FF0\\u7279\\u6B8A\\u8981\\u6C42\\u6216\\u9650\\u5236\\u6761\\u4EF6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\u5DE5\\u4F5C\\u6D41\\u7A0B\\uFF1A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                marginLeft: '20px'\n              },\n              children: \"\\u2022 AI\\u751F\\u6210\\u57FA\\u672C\\u7684\\u8F93\\u5165\\u8F93\\u51FA\\u6837\\u4F8B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                marginLeft: '20px'\n              },\n              children: \"\\u2022 \\u6559\\u5E08\\u5728\\u9884\\u89C8\\u9636\\u6BB5\\u624B\\u52A8\\u8C03\\u6574\\u6D4B\\u8BD5\\u7528\\u4F8B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                marginLeft: '20px'\n              },\n              children: \"\\u2022 \\u652F\\u6301\\u591A\\u884C\\u8F93\\u5165\\u548C\\u8F93\\u51FA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                marginLeft: '20px'\n              },\n              children: \"\\u2022 \\u652F\\u6301\\u7A7A\\u8F93\\u5165\\uFF08\\u5982\\u6392\\u5E8F\\u9898\\u76EE\\uFF09\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-buttons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGenerate,\n          disabled: loading || !requirements.trim(),\n          className: \"primary-btn\",\n          children: loading ? '🔄 AI生成中...' : '🚀 开始生成'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 9\n    }, this), step === 2 && editedProblem && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u270F\\uFE0F \\u9884\\u89C8\\u548C\\u4FEE\\u6539\\u751F\\u6210\\u7684\\u9898\\u76EE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"problem-editor\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\u9898\\u76EE\\u540D\\u79F0\\uFF1A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editedProblem.title || '',\n            onChange: e => handleInputChange('title', e.target.value),\n            className: \"title-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\u9898\\u76EE\\u63CF\\u8FF0\\uFF1A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: editedProblem.description || '',\n            onChange: e => handleInputChange('description', e.target.value),\n            rows: 6,\n            className: \"description-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\u6D4B\\u8BD5\\u7528\\u4F8B\\u7BA1\\u7406\\uFF1A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"test-case-manager\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"test-case-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\u6D4B\\u8BD5\\u7528\\u4F8B\\u5217\\u8868\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 573,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: addTestCase,\n                className: \"add-test-case-btn\",\n                children: \"+ \\u6DFB\\u52A0\\u6D4B\\u8BD5\\u7528\\u4F8B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 574,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 17\n            }, this), testCases.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-test-cases\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"\\u6682\\u65E0\\u6D4B\\u8BD5\\u7528\\u4F8B\\uFF0C\\u8BF7\\u70B9\\u51FB\\\"\\u6DFB\\u52A0\\u6D4B\\u8BD5\\u7528\\u4F8B\\\"\\u6309\\u94AE\\u6DFB\\u52A0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 585,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [testCases.some(tc => tc._needsManualReview) && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"parsing-warnings\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"\\u26A0\\uFE0F \\u68C0\\u6D4B\\u5230\\u4EE5\\u4E0B\\u95EE\\u9898\\uFF0C\\u8BF7\\u68C0\\u67E5\\uFF1A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 592,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: testCases.map((tc, idx) => {\n                    if (tc._needsManualReview) {\n                      if (!tc.input && !tc.output) {\n                        return /*#__PURE__*/_jsxDEV(\"li\", {\n                          children: [\"\\u6D4B\\u8BD5\\u7528\\u4F8B \", idx + 1, \" \\u8F93\\u5165\\u548C\\u8F93\\u51FA\\u90FD\\u4E3A\\u7A7A\\uFF0C\\u8BF7\\u8865\\u5145\"]\n                        }, idx, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 597,\n                          columnNumber: 40\n                        }, this);\n                      } else if (!tc.input) {\n                        return /*#__PURE__*/_jsxDEV(\"li\", {\n                          children: [\"\\u6D4B\\u8BD5\\u7528\\u4F8B \", idx + 1, \" \\u7F3A\\u5C11\\u8F93\\u5165\\u6570\\u636E\"]\n                        }, idx, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 599,\n                          columnNumber: 40\n                        }, this);\n                      } else if (!tc.output) {\n                        return /*#__PURE__*/_jsxDEV(\"li\", {\n                          children: [\"\\u6D4B\\u8BD5\\u7528\\u4F8B \", idx + 1, \" \\u7F3A\\u5C11\\u671F\\u671B\\u8F93\\u51FA\"]\n                        }, idx, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 601,\n                          columnNumber: 40\n                        }, this);\n                      } else if (tc.input.includes('输出') || tc.output.includes('输入')) {\n                        return /*#__PURE__*/_jsxDEV(\"li\", {\n                          children: [\"\\u6D4B\\u8BD5\\u7528\\u4F8B \", idx + 1, \" \\u53EF\\u80FD\\u5B58\\u5728\\u8F93\\u5165\\u8F93\\u51FA\\u6DF7\\u6DC6\\uFF0C\\u8BF7\\u68C0\\u67E5\"]\n                        }, idx, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 603,\n                          columnNumber: 40\n                        }, this);\n                      }\n                    }\n                    return null;\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 593,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 591,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"test-cases-list\",\n                children: testCases.map((testCase, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `test-case-item ${testCase._needsManualReview ? 'needs-review' : ''}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"test-case-header-row\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"test-case-number\",\n                      children: [\"\\u6D4B\\u8BD5\\u7528\\u4F8B \", index + 1, testCase._needsManualReview && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"review-badge\",\n                        children: \"\\u26A0\\uFE0F \\u9700\\u68C0\\u67E5\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 618,\n                        columnNumber: 63\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 616,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      onClick: () => removeTestCase(index),\n                      className: \"remove-test-case-btn\",\n                      title: \"\\u5220\\u9664\\u6B64\\u6D4B\\u8BD5\\u7528\\u4F8B\",\n                      children: \"\\xD7\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 620,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 615,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"test-case-content\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"input-section\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        children: \"\\u8F93\\u5165\\uFF1A\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 631,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                        value: testCase.input,\n                        onChange: e => updateTestCase(index, 'input', e.target.value),\n                        placeholder: \"\\u8F93\\u5165\\u6570\\u636E\\uFF08\\u53EF\\u4EE5\\u4E3A\\u7A7A\\uFF09\",\n                        rows: 2,\n                        className: \"test-case-input\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 632,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 630,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"output-section\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        children: \"\\u671F\\u671B\\u8F93\\u51FA\\uFF1A\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 641,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                        value: testCase.output,\n                        onChange: e => updateTestCase(index, 'output', e.target.value),\n                        placeholder: \"\\u671F\\u671B\\u8F93\\u51FA\",\n                        rows: 2,\n                        className: \"test-case-output\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 642,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 640,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 629,\n                    columnNumber: 27\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 614,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 612,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\u96BE\\u5EA6\\u7B49\\u7EA7\\uFF1A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: editedProblem.difficulty || 'easy',\n            onChange: e => handleInputChange('difficulty', e.target.value),\n            className: \"difficulty-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"easy\",\n              children: \"\\u7B80\\u5355\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 666,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"medium\",\n              children: \"\\u4E2D\\u7B49\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 667,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"hard\",\n              children: \"\\u56F0\\u96BE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 661,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"editor-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\u65F6\\u95F4\\u9650\\u5236(ms)\\uFF1A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 674,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: editedProblem.time_limit || 1000,\n              onChange: e => handleInputChange('time_limit', parseInt(e.target.value)),\n              className: \"time-limit-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 675,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 673,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"editor-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\u5185\\u5B58\\u9650\\u5236(MB)\\uFF1A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: editedProblem.memory_limit || 128,\n              onChange: e => handleInputChange('memory_limit', parseInt(e.target.value)),\n              className: \"memory-limit-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 685,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRestart,\n          className: \"secondary-btn\",\n          children: \"\\uD83D\\uDD04 \\u91CD\\u65B0\\u5F00\\u59CB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 696,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePreview,\n          disabled: loading,\n          className: \"primary-btn\",\n          children: loading ? '处理中...' : '👀 预览确认'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 9\n    }, this), step === 3 && editedProblem && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83D\\uDD0D AI\\u9A8C\\u8BC1\\u548C\\u6700\\u7EC8\\u786E\\u8BA4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"final-preview\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"preview-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83D\\uDCCB \\u9898\\u76EE\\u9884\\u89C8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 717,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preview-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\u9898\\u76EE\\u540D\\u79F0\\uFF1A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 720,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: editedProblem.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 721,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 719,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\u96BE\\u5EA6\\u7B49\\u7EA7\\uFF1A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 724,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `difficulty-badge ${editedProblem.difficulty}`,\n                children: editedProblem.difficulty === 'easy' ? '简单' : editedProblem.difficulty === 'medium' ? '中等' : '困难'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 725,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 723,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\u65F6\\u95F4/\\u5185\\u5B58\\u9650\\u5236\\uFF1A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 731,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [editedProblem.time_limit, \"ms / \", editedProblem.memory_limit, \"MB\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 732,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 730,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\u9898\\u76EE\\u63CF\\u8FF0\\uFF1A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 735,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                className: \"description-preview\",\n                children: editedProblem.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 736,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 734,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\u6D4B\\u8BD5\\u7528\\u4F8B\\uFF1A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 739,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"test-cases-preview\",\n                children: testCases.map((tc, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"preview-test-case\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"preview-test-case-header\",\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: [\"\\u6D4B\\u8BD5\\u7528\\u4F8B \", index + 1, \":\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 744,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 743,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"preview-test-case-content\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"\\u8F93\\u5165:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 747,\n                        columnNumber: 32\n                      }, this), \" \", tc.input || '(无输入)']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 747,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"\\u671F\\u671B\\u8F93\\u51FA:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 748,\n                        columnNumber: 32\n                      }, this), \" \", tc.output]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 748,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 746,\n                    columnNumber: 25\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 742,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 740,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 738,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 718,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 13\n        }, this), validationResult && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"validation-result\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [/*#__PURE__*/_jsxDEV(WhaleIcon, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 759,\n              columnNumber: 21\n            }, this), \" AI\\u9A8C\\u8BC1\\u7ED3\\u679C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 759,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"validation-content\",\n            children: /*#__PURE__*/_jsxDEV(\"pre\", {\n              children: validationResult\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 761,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 760,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setStep(2),\n          className: \"secondary-btn\",\n          children: \"\\u2190 \\u8FD4\\u56DE\\u4FEE\\u6539\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 768,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRestart,\n          className: \"secondary-btn\",\n          children: \"\\uD83D\\uDD04 \\u91CD\\u65B0\\u5F00\\u59CB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 771,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleCreateProblem(false),\n          disabled: loading,\n          className: \"primary-btn\",\n          children: loading ? '创建中...' : '✅ 创建题目'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 774,\n          columnNumber: 13\n        }, this), validationResult && !validationResult.includes('验证通过') && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleCreateProblem(true),\n          disabled: loading,\n          className: \"warning-btn\",\n          children: \"\\u26A0\\uFE0F \\u5F3A\\u5236\\u521B\\u5EFA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 782,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 767,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 712,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 479,\n    columnNumber: 5\n  }, this);\n};\n_s(AIProblemGenerationPage, \"yu3iBvUZW0UHBpkaixdEjxRzcK4=\");\n_c = AIProblemGenerationPage;\nexport default AIProblemGenerationPage;\nvar _c;\n$RefreshReg$(_c, \"AIProblemGenerationPage\");","map":{"version":3,"names":["React","useState","aiGenerateProblem","aiPreviewProblem","aiValidateAndCreateProblem","getProblems","WhaleIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","AIProblemGenerationPage","_s","step","setStep","loading","setLoading","error","setError","requirements","setRequirements","generatedProblem","setGeneratedProblem","editedProblem","setEditedProblem","validationResult","setValidationResult","debugInfo","setDebugInfo","testCases","setTestCases","input","output","parseGeneratedTestCases","testCasesText","expectedOutputText","console","log","parsed","JSON","parse","Array","isArray","map","tc","e","structuredResult","parseStructuredFormat","length","lines","split","filter","line","trim","smartResult","smartLineSplit","inputContent","outputContent","includes","parts","replace","midPoint","Math","ceil","slice","join","_needsManualReview","result","inputPattern","outputPattern","inputs","outputs","match","exec","index","parseInt","Object","keys","maxIndex","max","k","i","push","currentInput","currentOutput","inInputSection","testCaseIndex","isInputOutputBoundary","allLines","currentIndex","lineLower","toLowerCase","test","nextLines","some","l","prevLine","nextLine","handleGenerate","token","localStorage","getItem","user","substring","username","success","problem","parsedCases","test_cases","expected_output","_error$response","_error$response2","_error$response3","_error$response3$data","response","data","errorMessage","status","mockProblem","title","description","difficulty","time_limit","memory_limit","ai_generated","original_requirements","generated_at","Date","toISOString","message","handlePreview","updatedProblem","_error$response4","_error$response4$data","handleCreateProblem","forceCreate","testCasesJson","stringify","problemData","force_create","alert","problemsData","setItem","window","dispatchEvent","CustomEvent","detail","parent","postMessage","type","warn","validation_result","_error$response5","errorData","handleInputChange","field","value","prev","handleRestart","addTestCase","removeTestCase","_","updateTestCase","newTestCases","className","children","size","fileName","_jsxFileName","lineNumber","columnNumber","style","background","padding","margin","borderRadius","fontSize","onChange","target","placeholder","rows","marginLeft","onClick","disabled","idx","testCase","_c","$RefreshReg$"],"sources":["/Volumes/坞城/OJ_1/frontend/src/pages/AIProblemGenerationPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { \n  aiGenerateProblem, \n  aiPreviewProblem, \n  aiValidateAndCreateProblem,\n  getProblems\n} from '../services/api';\nimport './AIProblemGenerationPage.css';\nimport WhaleIcon from '../components/WhaleIcon';\n\nconst AIProblemGenerationPage = () => {\n  const [step, setStep] = useState(1); // 1: 输入需求, 2: 预览修改, 3: 最终确认\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [requirements, setRequirements] = useState('');\n  const [generatedProblem, setGeneratedProblem] = useState(null);\n  const [editedProblem, setEditedProblem] = useState(null);\n  const [validationResult, setValidationResult] = useState('');\n\n  // 添加调试信息\n  const [debugInfo, setDebugInfo] = useState('');\n\n  // 测试用例管理\n  const [testCases, setTestCases] = useState([{ input: '', output: '' }]);\n\n  // 解析测试用例（从AI生成的格式转换为结构化格式）\n  const parseGeneratedTestCases = (testCasesText, expectedOutputText) => {\n    if (!testCasesText || !expectedOutputText) return [{ input: '', output: '' }];\n    \n    // 添加调试日志\n    console.log('开始解析测试用例:');\n    console.log('testCasesText:', testCasesText);\n    console.log('expectedOutputText:', expectedOutputText);\n    \n    try {\n      // 尝试解析为JSON格式\n      const parsed = JSON.parse(testCasesText);\n      if (Array.isArray(parsed)) {\n        console.log('成功解析为JSON格式');\n        return parsed.map(tc => ({\n          input: tc.input || '',\n          output: tc.output || ''\n        }));\n      }\n    } catch (e) {\n      // 如果不是JSON，尝试解析文本格式\n      console.log('解析为JSON失败，尝试解析文本格式');\n    }\n\n    // 策略1：识别结构化格式（输入1：xxx 输出1：xxx）\n    console.log('尝试识别结构化格式');\n    const structuredResult = parseStructuredFormat(testCasesText);\n    if (structuredResult.length > 0) {\n      console.log('成功解析为结构化格式');\n      return structuredResult;\n    }\n\n    // 策略2：智能行分割（基于内容特征）\n    console.log('尝试智能行分割');\n    const lines = testCasesText.split('\\n').filter(line => line.trim());\n    if (lines.length > 0) {\n      const smartResult = smartLineSplit(lines);\n      if (smartResult.length > 0) {\n        console.log('使用智能行分割成功');\n        return smartResult;\n      }\n    }\n\n    // 策略3：回退到简化解析逻辑\n    console.log('使用简化解析逻辑');\n    \n    // 尝试从testCasesText中提取输入和输出\n    let inputContent = '';\n    let outputContent = '';\n    \n    // 如果AI生成了包含\"输入：\"和\"输出：\"的格式，尝试提取\n    if (testCasesText.includes('输入：') && testCasesText.includes('输出：')) {\n      const parts = testCasesText.split('输出：');\n      if (parts.length >= 2) {\n        inputContent = parts[0].replace('输入：', '').trim();\n        outputContent = parts[1].trim();\n      }\n    } else {\n      // 如果没有明确标记，尝试智能分割\n      const lines = testCasesText.split('\\n').filter(line => line.trim());\n      if (lines.length > 0) {\n        // 假设前一半是输入，后一半是输出\n        const midPoint = Math.ceil(lines.length / 2);\n        inputContent = lines.slice(0, midPoint).join('\\n');\n        outputContent = lines.slice(midPoint).join('\\n');\n      }\n    }\n    \n    // 如果从testCasesText没有提取到内容，尝试从expectedOutputText\n    if (!inputContent && !outputContent && expectedOutputText) {\n      outputContent = expectedOutputText.trim();\n    }\n    \n    console.log('提取的输入内容:', inputContent);\n    console.log('提取的输出内容:', outputContent);\n    \n    // 返回一个包含提取内容的测试用例，让教师手动调整\n    if (inputContent || outputContent) {\n      return [{\n        input: inputContent,\n        output: outputContent,\n        _needsManualReview: true // 标记需要手动检查\n      }];\n    }\n    \n    // 如果什么都没提取到，返回空的测试用例\n    return [{ input: '', output: '' }];\n  };\n\n  // 解析结构化格式的函数\n  const parseStructuredFormat = (testCasesText) => {\n    const result = [];\n    \n    // 匹配模式：输入1：[内容] 输出1：[内容] 输入2：[内容] 输出2：[内容] ...\n    const inputPattern = /输入(\\d+)[：:]\\s*([\\s\\S]*?)(?=输出\\1[：:]|输入\\d+[：:]|$)/g;\n    const outputPattern = /输出(\\d+)[：:]\\s*([\\s\\S]*?)(?=输入\\d+[：:]|输出\\d+[：:]|$)/g;\n    \n    const inputs = {};\n    const outputs = {};\n    \n    // 提取所有输入\n    let match;\n    while ((match = inputPattern.exec(testCasesText)) !== null) {\n      const index = parseInt(match[1]);\n      inputs[index] = match[2].trim();\n    }\n    \n    // 提取所有输出\n    while ((match = outputPattern.exec(testCasesText)) !== null) {\n      const index = parseInt(match[1]);\n      outputs[index] = match[2].trim();\n    }\n    \n    // 如果找到结构化格式，按索引匹配\n    if (Object.keys(inputs).length > 0 || Object.keys(outputs).length > 0) {\n      const maxIndex = Math.max(\n        ...Object.keys(inputs).map(k => parseInt(k)),\n        ...Object.keys(outputs).map(k => parseInt(k))\n      );\n      \n      for (let i = 1; i <= maxIndex; i++) {\n        result.push({\n          input: inputs[i] || '',\n          output: outputs[i] || '',\n          _needsManualReview: !inputs[i] || !outputs[i] // 如果缺少输入或输出，标记需要检查\n        });\n      }\n      \n      console.log(`解析到 ${result.length} 个结构化测试用例`);\n      return result;\n    }\n    \n    return [];\n  };\n\n  // 智能行分割函数\n  const smartLineSplit = (lines) => {\n    const result = [];\n    let currentInput = [];\n    let currentOutput = [];\n    let inInputSection = true;\n    let testCaseIndex = 1;\n    \n    for (let i = 0; i < lines.length; i++) {\n      const line = lines[i];\n      \n      // 检测输入输出分界点\n      if (isInputOutputBoundary(line, lines, i)) {\n        // 保存当前的测试用例\n        if (currentInput.length > 0 || currentOutput.length > 0) {\n          result.push({\n            input: currentInput.join('\\n'),\n            output: currentOutput.join('\\n'),\n            _needsManualReview: currentInput.length === 0 || currentOutput.length === 0\n          });\n          testCaseIndex++;\n        }\n        \n        // 重置当前测试用例\n        currentInput = [];\n        currentOutput = [];\n        inInputSection = !inInputSection;\n      }\n      \n      // 根据当前状态添加到输入或输出\n      if (inInputSection) {\n        currentInput.push(line);\n      } else {\n        currentOutput.push(line);\n      }\n    }\n    \n    // 添加最后一个测试用例\n    if (currentInput.length > 0 || currentOutput.length > 0) {\n      result.push({\n        input: currentInput.join('\\n'),\n        output: currentOutput.join('\\n'),\n        _needsManualReview: currentInput.length === 0 || currentOutput.length === 0\n      });\n    }\n    \n    console.log(`智能行分割得到 ${result.length} 个测试用例`);\n    return result;\n  };\n\n  // 检测输入输出分界点的函数\n  const isInputOutputBoundary = (line, allLines, currentIndex) => {\n    const lineLower = line.toLowerCase();\n    \n    // 检测明显的分隔符\n    if (lineLower.includes('---') || lineLower.includes('===') || lineLower.includes('***')) {\n      return true;\n    }\n    \n    // 检测数字编号（如 \"1.\" \"2.\" 等）\n    if (/^\\d+\\./.test(line.trim())) {\n      return true;\n    }\n    \n    // 检测\"输入X：\"或\"输出X：\"格式\n    if (/^(输入|输出)\\d+[：:]/.test(line.trim())) {\n      return true;\n    }\n    \n    // 检测空行后的新测试用例开始\n    if (currentIndex > 0 && allLines[currentIndex - 1].trim() === '') {\n      const nextLines = allLines.slice(currentIndex + 1, currentIndex + 3);\n      if (nextLines.some(l => l.toLowerCase().includes('输入') || l.toLowerCase().includes('输出'))) {\n        return true;\n      }\n    }\n    \n    // 检测连续空行（可能表示测试用例分隔）\n    if (currentIndex > 0 && currentIndex < allLines.length - 1) {\n      const prevLine = allLines[currentIndex - 1].trim();\n      const nextLine = allLines[currentIndex + 1].trim();\n      if (prevLine === '' && nextLine === '' && line.trim() === '') {\n        return true;\n      }\n    }\n    \n    return false;\n  };\n\n  // 步骤1: AI生成题目\n  const handleGenerate = async () => {\n    if (!requirements.trim()) {\n      setError('请输入生题需求');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError('');\n      \n      // 添加调试信息\n      const token = localStorage.getItem('token');\n      const user = localStorage.getItem('user');\n      setDebugInfo(`Token: ${token ? token.substring(0, 20) + '...' : 'No token'}, User: ${user ? JSON.parse(user).username : 'No user'}`);\n      \n      console.log('开始调用AI生题API...');\n      console.log('Token:', token);\n      console.log('Requirements:', requirements);\n      \n      const result = await aiGenerateProblem(requirements);\n      \n      console.log('API响应:', result);\n      \n      if (result.success) {\n        setGeneratedProblem(result.problem);\n        setEditedProblem({ ...result.problem }); // 复制一份用于编辑\n        \n        // 解析测试用例\n        const parsedCases = parseGeneratedTestCases(result.problem.test_cases, result.problem.expected_output);\n        setTestCases(parsedCases);\n        \n        setStep(2);\n      } else {\n        setError(result.error || 'AI生成失败');\n      }\n    } catch (error) {\n      console.error('AI生成错误详情:', error);\n      console.error('错误响应:', error.response);\n      console.error('错误数据:', error.response?.data);\n      \n      let errorMessage = '生成题目失败，请重试';\n      \n      if (error.response?.status === 401) {\n        errorMessage = '认证失败，使用测试模式...';\n        \n        // 使用模拟数据来测试前端功能\n        const mockProblem = {\n          title: '字符串反转（测试模式）',\n          description: '给定一个字符串，请将其反转后输出。\\n\\n输入格式：一行包含一个字符串\\n输出格式：输出反转后的字符串',\n          test_cases: '输入1：hello\\n输出1：olleh\\n\\n输入2：world\\n输出2：dlrow\\n\\n输入3：test\\n输出3：tset',\n          expected_output: 'olleh\\ndlrow\\ntset',\n          difficulty: 'easy',\n          time_limit: 1000,\n          memory_limit: 128,\n          ai_generated: true,\n          original_requirements: requirements,\n          generated_at: new Date().toISOString()\n        };\n        \n        setGeneratedProblem(mockProblem);\n        setEditedProblem({ ...mockProblem });\n        \n        // 解析测试用例\n        const parsedCases = parseGeneratedTestCases(mockProblem.test_cases, mockProblem.expected_output);\n        setTestCases(parsedCases);\n        \n        setStep(2);\n        setError(''); // 清除错误信息\n        return;\n      } else if (error.response?.data?.error) {\n        errorMessage = error.response.data.error;\n      } else if (error.message) {\n        errorMessage = error.message;\n      }\n      \n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 步骤2: 预览修改\n  const handlePreview = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      \n      // 将测试用例转换为字符串格式，保持向后兼容\n      const testCasesText = testCases.map(tc => \n        `输入：${tc.input}\\n输出：${tc.output}`\n      ).join('\\n\\n');\n      \n      const expectedOutputText = testCases.map(tc => tc.output).join('\\n');\n      \n      const updatedProblem = {\n        ...editedProblem,\n        test_cases: testCasesText,\n        expected_output: expectedOutputText\n      };\n      \n      setEditedProblem(updatedProblem);\n      \n      const result = await aiPreviewProblem(updatedProblem);\n      \n      if (result.success) {\n        setStep(3);\n      } else {\n        setError('预览失败');\n      }\n    } catch (error) {\n      setError(error.response?.data?.error || '预览失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 步骤3: 最终创建\n  const handleCreateProblem = async (forceCreate = false) => {\n    try {\n      setLoading(true);\n      setError('');\n      \n      // 将测试用例转换为JSON格式\n      const testCasesJson = JSON.stringify(testCases.map(tc => ({\n        input: tc.input || '',\n        output: tc.output || ''\n      })));\n      \n      const problemData = {\n        ...editedProblem,\n        test_cases: testCasesJson,\n        expected_output: testCases.map(tc => tc.output || '').join('\\n'), // 保持向后兼容\n        force_create: forceCreate\n      };\n      \n      const result = await aiValidateAndCreateProblem(problemData);\n      \n      if (result.success) {\n        alert('题目创建成功！');\n        \n        // 尝试刷新题目列表\n        try {\n          const problemsData = await getProblems(1, 50);\n          console.log('题目创建成功，新题目数据:', problemsData);\n          \n          // 尝试通过多种方式通知父组件刷新\n          // 方法1: localStorage标记\n          localStorage.setItem('refreshProblems', 'true');\n          localStorage.setItem('lastProblemCreated', new Date().toISOString());\n          \n          // 方法2: 自定义事件\n          window.dispatchEvent(new CustomEvent('problemCreated', { \n            detail: { problemData: problemsData } \n          }));\n          \n          // 方法3: 如果当前页面在iframe中，通知父页面\n          if (window.parent && window.parent !== window) {\n            try {\n              window.parent.postMessage({ \n                type: 'PROBLEM_CREATED', \n                data: problemsData \n              }, '*');\n            } catch (e) {\n              console.log('无法通知父页面:', e);\n            }\n          }\n          \n        } catch (error) {\n          console.warn('无法刷新题目列表:', error);\n        }\n        \n        // 重置状态\n        setStep(1);\n        setRequirements('');\n        setGeneratedProblem(null);\n        setEditedProblem(null);\n        setValidationResult('');\n        setTestCases([{ input: '', output: '' }]);\n      } else {\n        setValidationResult(result.validation_result);\n        setError(result.message);\n      }\n    } catch (error) {\n      const errorData = error.response?.data;\n      if (errorData?.validation_result) {\n        setValidationResult(errorData.validation_result);\n      }\n      setError(errorData?.message || '创建题目失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 处理输入变化\n  const handleInputChange = (field, value) => {\n    setEditedProblem(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  // 重新开始\n  const handleRestart = () => {\n    setStep(1);\n    setRequirements('');\n    setGeneratedProblem(null);\n    setEditedProblem(null);\n    setValidationResult('');\n    setError('');\n    setTestCases([{ input: '', output: '' }]);\n  };\n\n  // 测试用例管理\n  const addTestCase = () => {\n    setTestCases([...testCases, { input: '', output: '' }]);\n  };\n\n  const removeTestCase = (index) => {\n    setTestCases(testCases.filter((_, i) => i !== index));\n  };\n\n  const updateTestCase = (index, field, value) => {\n    const newTestCases = [...testCases];\n    newTestCases[index][field] = value;\n    setTestCases(newTestCases);\n  };\n\n  return (\n    <div className=\"ai-problem-generation\">\n      <div className=\"page-header\">\n        <h1><WhaleIcon size={32} /> AI智能生题</h1>\n        <div className=\"step-indicator\">\n          <div className={`step ${step >= 1 ? 'active' : ''}`}>1. 输入需求</div>\n          <div className={`step ${step >= 2 ? 'active' : ''}`}>2. 预览修改</div>\n          <div className={`step ${step >= 3 ? 'active' : ''}`}>3. 最终确认</div>\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"error-message\">\n          <span className=\"error-icon\">⚠️</span>\n          {error}\n        </div>\n      )}\n\n      {/* 调试信息 */}\n      {debugInfo && (\n        <div className=\"debug-info\" style={{background: '#f0f8ff', padding: '10px', margin: '10px 0', borderRadius: '5px', fontSize: '12px'}}>\n          <strong>调试信息:</strong> {debugInfo}\n        </div>\n      )}\n\n      {/* 步骤1: 输入需求 */}\n      {step === 1 && (\n        <div className=\"step-content\">\n          <h2>📝 描述您的题目需求</h2>\n          <div className=\"requirements-section\">\n            <textarea\n              value={requirements}\n              onChange={(e) => setRequirements(e.target.value)}\n              placeholder=\"请详细描述您想要生成的题目，例如：&#10;&#10;生成一个关于数组排序的简单题目，适合初学者：&#10;- 难度：简单&#10;- 包含3-5个测试用例&#10;- 要求使用冒泡排序或选择排序&#10;- 输入输出格式要清晰&#10;&#10;AI会生成基本的输入输出样例，您可以在预览阶段手动调整测试用例。\"\n              rows={8}\n              className=\"requirements-input\"\n            />\n            <div className=\"input-tips\">\n              <h4>💡 生题建议：</h4>\n              <ul>\n                <li>明确指定题目类型（如：数组、字符串、算法等）</li>\n                <li>说明难度等级（简单/中等/困难）</li>\n                <li>指定测试用例数量</li>\n                <li>描述特殊要求或限制条件</li>\n                <li><strong>工作流程：</strong></li>\n                <li style={{marginLeft: '20px'}}>• AI生成基本的输入输出样例</li>\n                <li style={{marginLeft: '20px'}}>• 教师在预览阶段手动调整测试用例</li>\n                <li style={{marginLeft: '20px'}}>• 支持多行输入和输出</li>\n                <li style={{marginLeft: '20px'}}>• 支持空输入（如排序题目）</li>\n              </ul>\n            </div>\n          </div>\n          \n          <div className=\"action-buttons\">\n            <button \n              onClick={handleGenerate}\n              disabled={loading || !requirements.trim()}\n              className=\"primary-btn\"\n            >\n              {loading ? '🔄 AI生成中...' : '🚀 开始生成'}\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* 步骤2: 预览修改 */}\n      {step === 2 && editedProblem && (\n        <div className=\"step-content\">\n          <h2>✏️ 预览和修改生成的题目</h2>\n          \n          <div className=\"problem-editor\">\n            <div className=\"editor-section\">\n              <label>题目名称：</label>\n              <input\n                type=\"text\"\n                value={editedProblem.title || ''}\n                onChange={(e) => handleInputChange('title', e.target.value)}\n                className=\"title-input\"\n              />\n            </div>\n\n            <div className=\"editor-section\">\n              <label>题目描述：</label>\n              <textarea\n                value={editedProblem.description || ''}\n                onChange={(e) => handleInputChange('description', e.target.value)}\n                rows={6}\n                className=\"description-input\"\n              />\n            </div>\n\n            <div className=\"editor-section\">\n              <label>测试用例管理：</label>\n              <div className=\"test-case-manager\">\n                <div className=\"test-case-header\">\n                  <span>测试用例列表</span>\n                  <button \n                    type=\"button\" \n                    onClick={addTestCase}\n                    className=\"add-test-case-btn\"\n                  >\n                    + 添加测试用例\n                  </button>\n                </div>\n                \n                {testCases.length === 0 ? (\n                  <div className=\"no-test-cases\">\n                    <p>暂无测试用例，请点击\"添加测试用例\"按钮添加</p>\n                  </div>\n                ) : (\n                  <>\n                    {/* 智能提示区域 */}\n                    {testCases.some(tc => tc._needsManualReview) && (\n                      <div className=\"parsing-warnings\">\n                        <h4>⚠️ 检测到以下问题，请检查：</h4>\n                        <ul>\n                          {testCases.map((tc, idx) => {\n                            if (tc._needsManualReview) {\n                              if (!tc.input && !tc.output) {\n                                return <li key={idx}>测试用例 {idx + 1} 输入和输出都为空，请补充</li>;\n                              } else if (!tc.input) {\n                                return <li key={idx}>测试用例 {idx + 1} 缺少输入数据</li>;\n                              } else if (!tc.output) {\n                                return <li key={idx}>测试用例 {idx + 1} 缺少期望输出</li>;\n                              } else if (tc.input.includes('输出') || tc.output.includes('输入')) {\n                                return <li key={idx}>测试用例 {idx + 1} 可能存在输入输出混淆，请检查</li>;\n                              }\n                            }\n                            return null;\n                          })}\n                        </ul>\n                      </div>\n                    )}\n                    \n                    <div className=\"test-cases-list\">\n                      {testCases.map((testCase, index) => (\n                        <div key={index} className={`test-case-item ${testCase._needsManualReview ? 'needs-review' : ''}`}>\n                          <div className=\"test-case-header-row\">\n                            <span className=\"test-case-number\">\n                              测试用例 {index + 1}\n                              {testCase._needsManualReview && <span className=\"review-badge\">⚠️ 需检查</span>}\n                            </span>\n                            <button\n                              type=\"button\"\n                              onClick={() => removeTestCase(index)}\n                              className=\"remove-test-case-btn\"\n                              title=\"删除此测试用例\"\n                            >\n                              ×\n                            </button>\n                          </div>\n                          <div className=\"test-case-content\">\n                            <div className=\"input-section\">\n                              <label>输入：</label>\n                              <textarea\n                                value={testCase.input}\n                                onChange={(e) => updateTestCase(index, 'input', e.target.value)}\n                                placeholder=\"输入数据（可以为空）\"\n                                rows={2}\n                                className=\"test-case-input\"\n                              />\n                            </div>\n                            <div className=\"output-section\">\n                              <label>期望输出：</label>\n                              <textarea\n                                value={testCase.output}\n                                onChange={(e) => updateTestCase(index, 'output', e.target.value)}\n                                placeholder=\"期望输出\"\n                                rows={2}\n                                className=\"test-case-output\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </>\n                )}\n              </div>\n            </div>\n\n            <div className=\"editor-section\">\n              <label>难度等级：</label>\n              <select\n                value={editedProblem.difficulty || 'easy'}\n                onChange={(e) => handleInputChange('difficulty', e.target.value)}\n                className=\"difficulty-select\"\n              >\n                <option value=\"easy\">简单</option>\n                <option value=\"medium\">中等</option>\n                <option value=\"hard\">困难</option>\n              </select>\n            </div>\n\n            <div className=\"editor-row\">\n              <div className=\"editor-section\">\n                <label>时间限制(ms)：</label>\n                <input\n                  type=\"number\"\n                  value={editedProblem.time_limit || 1000}\n                  onChange={(e) => handleInputChange('time_limit', parseInt(e.target.value))}\n                  className=\"time-limit-input\"\n                />\n              </div>\n\n              <div className=\"editor-section\">\n                <label>内存限制(MB)：</label>\n                <input\n                  type=\"number\"\n                  value={editedProblem.memory_limit || 128}\n                  onChange={(e) => handleInputChange('memory_limit', parseInt(e.target.value))}\n                  className=\"memory-limit-input\"\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"action-buttons\">\n            <button onClick={handleRestart} className=\"secondary-btn\">\n              🔄 重新开始\n            </button>\n            <button \n              onClick={handlePreview}\n              disabled={loading}\n              className=\"primary-btn\"\n            >\n              {loading ? '处理中...' : '👀 预览确认'}\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* 步骤3: 最终确认 */}\n      {step === 3 && editedProblem && (\n        <div className=\"step-content\">\n          <h2>🔍 AI验证和最终确认</h2>\n          \n          <div className=\"final-preview\">\n            <div className=\"preview-card\">\n              <h3>📋 题目预览</h3>\n              <div className=\"preview-content\">\n                <div className=\"preview-item\">\n                  <strong>题目名称：</strong>\n                  <span>{editedProblem.title}</span>\n                </div>\n                <div className=\"preview-item\">\n                  <strong>难度等级：</strong>\n                  <span className={`difficulty-badge ${editedProblem.difficulty}`}>\n                    {editedProblem.difficulty === 'easy' ? '简单' : \n                     editedProblem.difficulty === 'medium' ? '中等' : '困难'}\n                  </span>\n                </div>\n                <div className=\"preview-item\">\n                  <strong>时间/内存限制：</strong>\n                  <span>{editedProblem.time_limit}ms / {editedProblem.memory_limit}MB</span>\n                </div>\n                <div className=\"preview-item\">\n                  <strong>题目描述：</strong>\n                  <pre className=\"description-preview\">{editedProblem.description}</pre>\n                </div>\n                <div className=\"preview-item\">\n                  <strong>测试用例：</strong>\n                  <div className=\"test-cases-preview\">\n                    {testCases.map((tc, index) => (\n                      <div key={index} className=\"preview-test-case\">\n                        <div className=\"preview-test-case-header\">\n                          <strong>测试用例 {index + 1}:</strong>\n                        </div>\n                        <div className=\"preview-test-case-content\">\n                          <div><strong>输入:</strong> {tc.input || '(无输入)'}</div>\n                          <div><strong>期望输出:</strong> {tc.output}</div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {validationResult && (\n              <div className=\"validation-result\">\n                <h3><WhaleIcon size={24} /> AI验证结果</h3>\n                <div className=\"validation-content\">\n                  <pre>{validationResult}</pre>\n                </div>\n              </div>\n            )}\n          </div>\n\n          <div className=\"action-buttons\">\n            <button onClick={() => setStep(2)} className=\"secondary-btn\">\n              ← 返回修改\n            </button>\n            <button onClick={handleRestart} className=\"secondary-btn\">\n              🔄 重新开始\n            </button>\n            <button \n              onClick={() => handleCreateProblem(false)}\n              disabled={loading}\n              className=\"primary-btn\"\n            >\n              {loading ? '创建中...' : '✅ 创建题目'}\n            </button>\n            {validationResult && !validationResult.includes('验证通过') && (\n              <button \n                onClick={() => handleCreateProblem(true)}\n                disabled={loading}\n                className=\"warning-btn\"\n              >\n                ⚠️ 强制创建\n              </button>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AIProblemGenerationPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
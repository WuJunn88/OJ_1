{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import{getProblems}from'../services/api';import'./ProblemListPage.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const ProblemListPage=()=>{const[problems,setProblems]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState('');const[currentPage,setCurrentPage]=useState(1);const[totalPages,setTotalPages]=useState(1);const[difficulty,setDifficulty]=useState('');useEffect(()=>{fetchProblems();},[currentPage,difficulty]);const fetchProblems=async()=>{try{setLoading(true);const result=await getProblems(currentPage,9,difficulty);setProblems(result.problems);setTotalPages(result.pages);}catch(error){setError('获取题目列表失败');console.error('Error fetching problems:',error);}finally{setLoading(false);}};const handleDifficultyChange=newDifficulty=>{setDifficulty(newDifficulty);setCurrentPage(1);};const getDifficultyColor=diff=>{switch(diff){case'easy':return'#52c41a';case'medium':return'#faad14';case'hard':return'#f5222d';default:return'#666';}};const getDifficultyText=diff=>{switch(diff){case'easy':return'简单';case'medium':return'中等';case'hard':return'困难';default:return'未知';}};if(loading&&problems.length===0){return/*#__PURE__*/_jsx(\"div\",{className:\"problem-list-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"\\u52A0\\u8F7D\\u4E2D...\"})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"problem-list-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"problem-list-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\u9898\\u76EE\\u5217\\u8868\"}),/*#__PURE__*/_jsx(\"div\",{className:\"filters\",children:/*#__PURE__*/_jsxs(\"select\",{value:difficulty,onChange:e=>handleDifficultyChange(e.target.value),className:\"difficulty-filter\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\u5168\\u90E8\\u96BE\\u5EA6\"}),/*#__PURE__*/_jsx(\"option\",{value:\"easy\",children:\"\\u7B80\\u5355\"}),/*#__PURE__*/_jsx(\"option\",{value:\"medium\",children:\"\\u4E2D\\u7B49\"}),/*#__PURE__*/_jsx(\"option\",{value:\"hard\",children:\"\\u56F0\\u96BE\"})]})})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsx(\"div\",{className:\"problem-grid\",children:problems.map(problem=>/*#__PURE__*/_jsxs(\"div\",{className:\"problem-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"problem-header\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"problem-title\",children:/*#__PURE__*/_jsxs(Link,{to:\"/problem/\".concat(problem.id),children:[problem.id,\". \",problem.title]})}),/*#__PURE__*/_jsx(\"span\",{className:\"difficulty-badge\",style:{backgroundColor:getDifficultyColor(problem.difficulty)},children:getDifficultyText(problem.difficulty)})]}),/*#__PURE__*/_jsx(\"div\",{className:\"problem-info\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"problem-meta\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"\\u65F6\\u95F4\\u9650\\u5236: \",problem.time_limit,\"ms\"]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"\\u5185\\u5B58\\u9650\\u5236: \",problem.memory_limit,\"MB\"]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"problem-actions\",children:/*#__PURE__*/_jsx(Link,{to:\"/problem/\".concat(problem.id),className:\"view-btn\",children:\"\\u67E5\\u770B\\u8BE6\\u60C5\"})})]},problem.id))}),totalPages>1&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pagination-info\",children:[\"\\u7B2C \",currentPage,\" \\u9875\\uFF0C\\u5171 \",totalPages,\" \\u9875\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pagination\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentPage(Math.max(1,currentPage-1)),disabled:currentPage===1,className:\"page-btn\",children:\"\\u4E0A\\u4E00\\u9875\"}),(()=>{const pages=[];const maxVisible=7;// 最多显示7个页码按钮\nif(totalPages<=maxVisible){// 如果总页数不多，显示所有页码\nfor(let i=1;i<=totalPages;i++){pages.push(i);}}else{// 如果总页数很多，智能显示\nif(currentPage<=4){// 当前页在前几页\nfor(let i=1;i<=5;i++){pages.push(i);}pages.push('...');pages.push(totalPages);}else if(currentPage>=totalPages-3){// 当前页在后几页\npages.push(1);pages.push('...');for(let i=totalPages-4;i<=totalPages;i++){pages.push(i);}}else{// 当前页在中间\npages.push(1);pages.push('...');for(let i=currentPage-1;i<=currentPage+1;i++){pages.push(i);}pages.push('...');pages.push(totalPages);}}return pages.map((page,index)=>page==='...'?/*#__PURE__*/_jsx(\"span\",{className:\"page-ellipsis\",children:\"...\"},\"ellipsis-\".concat(index)):/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentPage(page),className:\"page-btn \".concat(currentPage===page?'active':''),children:page},page));})(),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentPage(Math.min(totalPages,currentPage+1)),disabled:currentPage===totalPages,className:\"page-btn\",children:\"\\u4E0B\\u4E00\\u9875\"})]})]})]});};export default ProblemListPage;","map":{"version":3,"names":["React","useState","useEffect","Link","getProblems","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ProblemListPage","problems","setProblems","loading","setLoading","error","setError","currentPage","setCurrentPage","totalPages","setTotalPages","difficulty","setDifficulty","fetchProblems","result","pages","console","handleDifficultyChange","newDifficulty","getDifficultyColor","diff","getDifficultyText","length","className","children","value","onChange","e","target","map","problem","to","concat","id","title","style","backgroundColor","time_limit","memory_limit","onClick","Math","max","disabled","maxVisible","i","push","page","index","min"],"sources":["/Volumes/坞城/OJ_1/frontend/src/pages/ProblemListPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getProblems } from '../services/api';\nimport './ProblemListPage.css';\n\nconst ProblemListPage = () => {\n  const [problems, setProblems] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [difficulty, setDifficulty] = useState('');\n\n  useEffect(() => {\n    fetchProblems();\n  }, [currentPage, difficulty]);\n\n  const fetchProblems = async () => {\n    try {\n      setLoading(true);\n      const result = await getProblems(currentPage, 9, difficulty);\n      setProblems(result.problems);\n      setTotalPages(result.pages);\n    } catch (error) {\n      setError('获取题目列表失败');\n      console.error('Error fetching problems:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDifficultyChange = (newDifficulty) => {\n    setDifficulty(newDifficulty);\n    setCurrentPage(1);\n  };\n\n  const getDifficultyColor = (diff) => {\n    switch (diff) {\n      case 'easy': return '#52c41a';\n      case 'medium': return '#faad14';\n      case 'hard': return '#f5222d';\n      default: return '#666';\n    }\n  };\n\n  const getDifficultyText = (diff) => {\n    switch (diff) {\n      case 'easy': return '简单';\n      case 'medium': return '中等';\n      case 'hard': return '困难';\n      default: return '未知';\n    }\n  };\n\n  if (loading && problems.length === 0) {\n    return (\n      <div className=\"problem-list-container\">\n        <div className=\"loading\">加载中...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"problem-list-container\">\n      <div className=\"problem-list-header\">\n        <h1>题目列表</h1>\n        <div className=\"filters\">\n          <select \n            value={difficulty} \n            onChange={(e) => handleDifficultyChange(e.target.value)}\n            className=\"difficulty-filter\"\n          >\n            <option value=\"\">全部难度</option>\n            <option value=\"easy\">简单</option>\n            <option value=\"medium\">中等</option>\n            <option value=\"hard\">困难</option>\n          </select>\n        </div>\n      </div>\n\n      {error && <div className=\"error-message\">{error}</div>}\n\n      <div className=\"problem-grid\">\n        {problems.map(problem => (\n          <div key={problem.id} className=\"problem-card\">\n            <div className=\"problem-header\">\n              <h3 className=\"problem-title\">\n                <Link to={`/problem/${problem.id}`}>\n                  {problem.id}. {problem.title}\n                </Link>\n              </h3>\n              <span \n                className=\"difficulty-badge\"\n                style={{ backgroundColor: getDifficultyColor(problem.difficulty) }}\n              >\n                {getDifficultyText(problem.difficulty)}\n              </span>\n            </div>\n            \n            <div className=\"problem-info\">\n              <div className=\"problem-meta\">\n                <span>时间限制: {problem.time_limit}ms</span>\n                <span>内存限制: {problem.memory_limit}MB</span>\n              </div>\n            </div>\n            \n            <div className=\"problem-actions\">\n              <Link \n                to={`/problem/${problem.id}`} \n                className=\"view-btn\"\n              >\n                查看详情\n              </Link>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {totalPages > 1 && (\n        <>\n          <div className=\"pagination-info\">\n            第 {currentPage} 页，共 {totalPages} 页\n          </div>\n          <div className=\"pagination\">\n            <button \n              onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\n              disabled={currentPage === 1}\n              className=\"page-btn\"\n            >\n              上一页\n            </button>\n            \n            {/* 智能显示页码，避免过多页码按钮 */}\n            {(() => {\n              const pages = [];\n              const maxVisible = 7; // 最多显示7个页码按钮\n              \n              if (totalPages <= maxVisible) {\n                // 如果总页数不多，显示所有页码\n                for (let i = 1; i <= totalPages; i++) {\n                  pages.push(i);\n                }\n              } else {\n                // 如果总页数很多，智能显示\n                if (currentPage <= 4) {\n                  // 当前页在前几页\n                  for (let i = 1; i <= 5; i++) {\n                    pages.push(i);\n                  }\n                  pages.push('...');\n                  pages.push(totalPages);\n                } else if (currentPage >= totalPages - 3) {\n                  // 当前页在后几页\n                  pages.push(1);\n                  pages.push('...');\n                  for (let i = totalPages - 4; i <= totalPages; i++) {\n                    pages.push(i);\n                  }\n                } else {\n                  // 当前页在中间\n                  pages.push(1);\n                  pages.push('...');\n                  for (let i = currentPage - 1; i <= currentPage + 1; i++) {\n                    pages.push(i);\n                  }\n                  pages.push('...');\n                  pages.push(totalPages);\n                }\n              }\n              \n              return pages.map((page, index) => (\n                page === '...' ? (\n                  <span key={`ellipsis-${index}`} className=\"page-ellipsis\">...</span>\n                ) : (\n                  <button\n                    key={page}\n                    onClick={() => setCurrentPage(page)}\n                    className={`page-btn ${currentPage === page ? 'active' : ''}`}\n                  >\n                    {page}\n                  </button>\n                )\n              ));\n            })()}\n            \n            <button \n              onClick={() => setCurrentPage(Math.min(totalPages, currentPage + 1))}\n              disabled={currentPage === totalPages}\n              className=\"page-btn\"\n            >\n              下一页\n            </button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ProblemListPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
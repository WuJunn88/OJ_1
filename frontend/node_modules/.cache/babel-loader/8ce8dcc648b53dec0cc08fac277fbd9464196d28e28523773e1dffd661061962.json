{"ast":null,"code":"var _jsxFileName = \"/Volumes/\\u575E\\u57CE/OJ_1/frontend/src/pages/AIProblemGenerationPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { aiGenerateProblem, aiPreviewProblem, aiValidateAndCreateProblem, getProblems } from '../services/api';\nimport './AIProblemGenerationPage.css';\nimport WhaleIcon from '../components/WhaleIcon';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AIProblemGenerationPage = () => {\n  _s();\n  const [step, setStep] = useState(1); // 1: 输入需求, 2: 预览修改, 3: 最终确认\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [requirements, setRequirements] = useState('');\n  const [generatedProblem, setGeneratedProblem] = useState(null);\n  const [editedProblem, setEditedProblem] = useState(null);\n  const [validationResult, setValidationResult] = useState('');\n\n  // 添加调试信息\n  const [debugInfo, setDebugInfo] = useState('');\n\n  // 测试用例管理\n  const [testCases, setTestCases] = useState([{\n    input: '',\n    output: ''\n  }]);\n\n  // 格式模板弹窗状态\n  const [showFormatModal, setShowFormatModal] = useState(false);\n  const [activeFormatTab, setActiveFormatTab] = useState('testcase');\n\n  // 解析测试用例（从AI生成的格式转换为结构化格式）\n  const parseGeneratedTestCases = (testCasesText, expectedOutputText) => {\n    if (!testCasesText || !expectedOutputText) return [{\n      input: '',\n      output: ''\n    }];\n\n    // 添加调试日志\n    console.log('开始解析测试用例:');\n    console.log('testCasesText:', testCasesText);\n    console.log('expectedOutputText:', expectedOutputText);\n    try {\n      // 尝试解析为JSON格式\n      const parsed = JSON.parse(testCasesText);\n      if (Array.isArray(parsed)) {\n        console.log('成功解析为JSON格式');\n        return parsed.map(tc => ({\n          input: tc.input || '',\n          output: tc.output || ''\n        }));\n      }\n    } catch (e) {\n      // 如果不是JSON，尝试解析文本格式\n      console.log('解析为JSON失败，尝试解析文本格式');\n    }\n\n    // 策略1：识别结构化格式（输入1：xxx 输出1：xxx）\n    console.log('尝试识别结构化格式');\n    const structuredResult = parseStructuredFormat(testCasesText);\n    if (structuredResult.length > 0) {\n      console.log('成功解析为结构化格式');\n      return structuredResult;\n    }\n\n    // 策略2：智能行分割（基于内容特征）\n    console.log('尝试智能行分割');\n    const lines = testCasesText.split('\\n').filter(line => line.trim());\n    if (lines.length > 0) {\n      const smartResult = smartLineSplit(lines);\n      if (smartResult.length > 0) {\n        console.log('使用智能行分割成功');\n        return smartResult;\n      }\n    }\n\n    // 策略3：回退到简化解析逻辑\n    console.log('使用简化解析逻辑');\n\n    // 尝试从testCasesText中提取输入和输出\n    let inputContent = '';\n    let outputContent = '';\n\n    // 如果AI生成了包含\"输入：\"和\"输出：\"的格式，尝试提取\n    if (testCasesText.includes('输入：') && testCasesText.includes('输出：')) {\n      const parts = testCasesText.split('输出：');\n      if (parts.length >= 2) {\n        inputContent = parts[0].replace('输入：', '').trim();\n        outputContent = parts[1].trim();\n      }\n    } else {\n      // 如果没有明确标记，尝试智能分割\n      const lines = testCasesText.split('\\n').filter(line => line.trim());\n      if (lines.length > 0) {\n        // 假设前一半是输入，后一半是输出\n        const midPoint = Math.ceil(lines.length / 2);\n        inputContent = lines.slice(0, midPoint).join('\\n');\n        outputContent = lines.slice(midPoint).join('\\n');\n      }\n    }\n\n    // 如果从testCasesText没有提取到内容，尝试从expectedOutputText\n    if (!inputContent && !outputContent && expectedOutputText) {\n      outputContent = expectedOutputText.trim();\n    }\n    console.log('提取的输入内容:', inputContent);\n    console.log('提取的输出内容:', outputContent);\n\n    // 返回一个包含提取内容的测试用例，让教师手动调整\n    if (inputContent || outputContent) {\n      return [{\n        input: inputContent,\n        output: outputContent,\n        _needsManualReview: true // 标记需要手动检查\n      }];\n    }\n\n    // 如果什么都没提取到，返回空的测试用例\n    return [{\n      input: '',\n      output: ''\n    }];\n  };\n\n  // 解析结构化格式的函数\n  const parseStructuredFormat = testCasesText => {\n    const result = [];\n\n    // 策略1：匹配新格式：测试用例X: 输入：xxx 输出：xxx\n    const newFormatPattern = /测试用例(\\d+):\\s*\\n输入：\\s*([\\s\\S]*?)(?=\\n输出：|$)\\n输出：\\s*([\\s\\S]*?)(?=\\n测试用例\\d+:|$)/g;\n    let match;\n    while ((match = newFormatPattern.exec(testCasesText)) !== null) {\n      const index = parseInt(match[1]);\n      const input = match[2].trim();\n      const output = match[3].trim();\n      result.push({\n        input: input,\n        output: output,\n        _needsManualReview: false\n      });\n    }\n    if (result.length > 0) {\n      console.log(`新格式解析到 ${result.length} 个测试用例`);\n      return result;\n    }\n\n    // 策略2：匹配旧格式：输入1：[内容] 输出1：[内容] 输入2：[内容] 输出2：[内容] ...\n    const inputPattern = /输入(\\d+)[：:]\\s*([\\s\\S]*?)(?=输出\\1[：:]|输入\\d+[：:]|$)/g;\n    const outputPattern = /输出(\\d+)[：:]\\s*([\\s\\S]*?)(?=输入\\d+[：:]|输出\\d+[：:]|$)/g;\n    const inputs = {};\n    const outputs = {};\n\n    // 提取所有输入\n    while ((match = inputPattern.exec(testCasesText)) !== null) {\n      const index = parseInt(match[1]);\n      inputs[index] = match[2].trim();\n    }\n\n    // 提取所有输出\n    while ((match = outputPattern.exec(testCasesText)) !== null) {\n      const index = parseInt(match[1]);\n      outputs[index] = match[2].trim();\n    }\n\n    // 如果找到结构化格式，按索引匹配\n    if (Object.keys(inputs).length > 0 || Object.keys(outputs).length > 0) {\n      const maxIndex = Math.max(...Object.keys(inputs).map(k => parseInt(k)), ...Object.keys(outputs).map(k => parseInt(k)));\n      for (let i = 1; i <= maxIndex; i++) {\n        result.push({\n          input: inputs[i] || '',\n          output: outputs[i] || '',\n          _needsManualReview: !inputs[i] || !outputs[i] // 如果缺少输入或输出，标记需要检查\n        });\n      }\n      console.log(`旧格式解析到 ${result.length} 个测试用例`);\n      return result;\n    }\n    return [];\n  };\n\n  // 智能行分割函数\n  const smartLineSplit = lines => {\n    const result = [];\n    let currentInput = [];\n    let currentOutput = [];\n    let inInputSection = true;\n    let testCaseIndex = 1;\n\n    // 预处理：识别可能的输入输出模式\n    const hasInputOutputPattern = lines.some(line => line.toLowerCase().includes('输入') || line.toLowerCase().includes('输出'));\n\n    // 如果没有明确的输入输出标记，尝试基于内容特征分割\n    if (!hasInputOutputPattern) {\n      return splitByContentFeatures(lines);\n    }\n    for (let i = 0; i < lines.length; i++) {\n      const line = lines[i];\n\n      // 检测输入输出分界点\n      if (isInputOutputBoundary(line, lines, i)) {\n        // 保存当前的测试用例\n        if (currentInput.length > 0 || currentOutput.length > 0) {\n          result.push({\n            input: currentInput.join('\\n'),\n            output: currentOutput.join('\\n'),\n            _needsManualReview: currentInput.length === 0 || currentOutput.length === 0\n          });\n          testCaseIndex++;\n        }\n\n        // 重置当前测试用例\n        currentInput = [];\n        currentOutput = [];\n        inInputSection = !inInputSection;\n      }\n\n      // 根据当前状态添加到输入或输出\n      if (inInputSection) {\n        currentInput.push(line);\n      } else {\n        currentOutput.push(line);\n      }\n    }\n\n    // 添加最后一个测试用例\n    if (currentInput.length > 0 || currentOutput.length > 0) {\n      result.push({\n        input: currentInput.join('\\n'),\n        output: currentOutput.join('\\n'),\n        _needsManualReview: currentInput.length === 0 || currentOutput.length === 0\n      });\n    }\n    console.log(`智能行分割得到 ${result.length} 个测试用例`);\n    return result;\n  };\n\n  // 基于内容特征的分割函数\n  const splitByContentFeatures = lines => {\n    const result = [];\n\n    // 尝试找到输入输出的分界点\n    let splitPoint = findOptimalSplitPoint(lines);\n    if (splitPoint > 0) {\n      const inputLines = lines.slice(0, splitPoint);\n      const outputLines = lines.slice(splitPoint);\n\n      // 尝试进一步分割为多个测试用例\n      const testCases = splitIntoMultipleTestCases(inputLines, outputLines);\n      if (testCases.length > 1) {\n        return testCases;\n      } else {\n        return [{\n          input: inputLines.join('\\n'),\n          output: outputLines.join('\\n'),\n          _needsManualReview: false\n        }];\n      }\n    }\n\n    // 如果找不到分界点，使用简单的前后分割\n    const midPoint = Math.ceil(lines.length / 2);\n    return [{\n      input: lines.slice(0, midPoint).join('\\n'),\n      output: lines.slice(midPoint).join('\\n'),\n      _needsManualReview: true\n    }];\n  };\n\n  // 找到最优分割点\n  const findOptimalSplitPoint = lines => {\n    // 策略1：寻找明显的分隔符\n    for (let i = 0; i < lines.length; i++) {\n      const line = lines[i].trim();\n      if (line === '---' || line === '===' || line === '***' || line === '') {\n        // 检查前后是否有内容\n        const hasContentBefore = i > 0 && lines[i - 1].trim() !== '';\n        const hasContentAfter = i < lines.length - 1 && lines[i + 1].trim() !== '';\n        if (hasContentBefore && hasContentAfter) {\n          return i;\n        }\n      }\n    }\n\n    // 策略2：基于数字模式识别\n    for (let i = 1; i < lines.length; i++) {\n      const prevLine = lines[i - 1].trim();\n      const currentLine = lines[i].trim();\n\n      // 如果前一行是单个数字，当前行也是数字，可能是新测试用例\n      if (/^\\d+$/.test(prevLine) && /^\\d+/.test(currentLine)) {\n        return i;\n      }\n    }\n\n    // 策略3：基于空行分隔\n    for (let i = 1; i < lines.length - 1; i++) {\n      if (lines[i].trim() === '' && lines[i - 1].trim() !== '' && lines[i + 1].trim() !== '') {\n        return i + 1;\n      }\n    }\n    return -1;\n  };\n\n  // 分割为多个测试用例\n  const splitIntoMultipleTestCases = (inputLines, outputLines) => {\n    const result = [];\n\n    // 尝试识别测试用例的数量\n    const inputNumbers = inputLines.filter(line => /^\\d+$/.test(line.trim()));\n    const outputNumbers = outputLines.filter(line => /^\\d+$/.test(line.trim()));\n    if (inputNumbers.length === outputNumbers.length && inputNumbers.length > 1) {\n      // 按数字分组\n      let currentInput = [];\n      let currentOutput = [];\n      let currentIndex = 0;\n      for (let i = 0; i < inputLines.length; i++) {\n        const line = inputLines[i];\n        if (/^\\d+$/.test(line.trim())) {\n          // 保存前一个测试用例\n          if (currentInput.length > 0 || currentOutput.length > 0) {\n            result.push({\n              input: currentInput.join('\\n'),\n              output: currentOutput.join('\\n'),\n              _needsManualReview: false\n            });\n          }\n          currentInput = [line];\n          currentOutput = [];\n          currentIndex++;\n        } else {\n          currentInput.push(line);\n        }\n      }\n\n      // 添加最后一个测试用例\n      if (currentInput.length > 0) {\n        result.push({\n          input: currentInput.join('\\n'),\n          output: currentOutput.join('\\n'),\n          _needsManualReview: false\n        });\n      }\n      return result;\n    }\n\n    // 如果无法识别多个测试用例，返回单个\n    return [{\n      input: inputLines.join('\\n'),\n      output: outputLines.join('\\n'),\n      _needsManualReview: false\n    }];\n  };\n\n  // 检测输入输出分界点的函数\n  const isInputOutputBoundary = (line, allLines, currentIndex) => {\n    const lineLower = line.toLowerCase();\n\n    // 检测明显的分隔符\n    if (lineLower.includes('---') || lineLower.includes('===') || lineLower.includes('***')) {\n      return true;\n    }\n\n    // 检测数字编号（如 \"1.\" \"2.\" 等）\n    if (/^\\d+\\./.test(line.trim())) {\n      return true;\n    }\n\n    // 检测\"输入X：\"或\"输出X：\"格式\n    if (/^(输入|输出)\\d+[：:]/.test(line.trim())) {\n      return true;\n    }\n\n    // 检测空行后的新测试用例开始\n    if (currentIndex > 0 && allLines[currentIndex - 1].trim() === '') {\n      const nextLines = allLines.slice(currentIndex + 1, currentIndex + 3);\n      if (nextLines.some(l => l.toLowerCase().includes('输入') || l.toLowerCase().includes('输出'))) {\n        return true;\n      }\n    }\n\n    // 检测连续空行（可能表示测试用例分隔）\n    if (currentIndex > 0 && currentIndex < allLines.length - 1) {\n      const prevLine = allLines[currentIndex - 1].trim();\n      const nextLine = allLines[currentIndex + 1].trim();\n      if (prevLine === '' && nextLine === '' && line.trim() === '') {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  // 步骤1: AI生成题目\n  const handleGenerate = async () => {\n    if (!requirements.trim()) {\n      setError('请输入生题需求');\n      return;\n    }\n    try {\n      setLoading(true);\n      setError('');\n\n      // 添加调试信息\n      const token = localStorage.getItem('token');\n      const user = localStorage.getItem('user');\n      setDebugInfo(`Token: ${token ? token.substring(0, 20) + '...' : 'No token'}, User: ${user ? JSON.parse(user).username : 'No user'}`);\n      console.log('开始调用AI生题API...');\n      console.log('Token:', token);\n      console.log('Requirements:', requirements);\n      const result = await aiGenerateProblem(requirements);\n      console.log('API响应:', result);\n      if (result.success) {\n        setGeneratedProblem(result.problem);\n        setEditedProblem({\n          ...result.problem\n        }); // 复制一份用于编辑\n\n        // 解析测试用例\n        const parsedCases = parseGeneratedTestCases(result.problem.test_cases, result.problem.expected_output);\n        setTestCases(parsedCases);\n        setStep(2);\n      } else {\n        setError(result.error || 'AI生成失败');\n      }\n    } catch (error) {\n      var _error$response, _error$response2, _error$response3, _error$response3$data;\n      console.error('AI生成错误详情:', error);\n      console.error('错误响应:', error.response);\n      console.error('错误数据:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n      let errorMessage = '生成题目失败，请重试';\n      if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n        errorMessage = '认证失败，使用测试模式...';\n\n        // 使用模拟数据来测试前端功能\n        const mockProblem = {\n          title: '字符串反转（测试模式）',\n          description: '给定一个字符串，请将其反转后输出。\\n\\n输入格式：一行包含一个字符串\\n输出格式：输出反转后的字符串',\n          test_cases: '输入1：hello\\n输出1：olleh\\n\\n输入2：world\\n输出2：dlrow\\n\\n输入3：test\\n输出3：tset',\n          expected_output: 'olleh\\ndlrow\\ntset',\n          difficulty: 'easy',\n          time_limit: 1000,\n          memory_limit: 128,\n          ai_generated: true,\n          original_requirements: requirements,\n          generated_at: new Date().toISOString()\n        };\n        setGeneratedProblem(mockProblem);\n        setEditedProblem({\n          ...mockProblem\n        });\n\n        // 解析测试用例\n        const parsedCases = parseGeneratedTestCases(mockProblem.test_cases, mockProblem.expected_output);\n        setTestCases(parsedCases);\n        setStep(2);\n        setError(''); // 清除错误信息\n        return;\n      } else if ((_error$response3 = error.response) !== null && _error$response3 !== void 0 && (_error$response3$data = _error$response3.data) !== null && _error$response3$data !== void 0 && _error$response3$data.error) {\n        errorMessage = error.response.data.error;\n      } else if (error.message) {\n        errorMessage = error.message;\n      }\n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 步骤2: 预览修改\n  const handlePreview = async () => {\n    try {\n      setLoading(true);\n      setError('');\n\n      // 将测试用例转换为字符串格式，保持向后兼容\n      const testCasesText = testCases.map(tc => `输入：${tc.input}\\n输出：${tc.output}`).join('\\n\\n');\n      const expectedOutputText = testCases.map(tc => tc.output).join('\\n');\n      const updatedProblem = {\n        ...editedProblem,\n        test_cases: testCasesText,\n        expected_output: expectedOutputText\n      };\n      setEditedProblem(updatedProblem);\n      const result = await aiPreviewProblem(updatedProblem);\n      if (result.success) {\n        setStep(3);\n      } else {\n        setError('预览失败');\n      }\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      setError(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || '预览失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 步骤3: 最终创建\n  const handleCreateProblem = async (forceCreate = false) => {\n    try {\n      setLoading(true);\n      setError('');\n\n      // 将测试用例转换为JSON格式\n      const testCasesJson = JSON.stringify(testCases.map(tc => ({\n        input: tc.input || '',\n        output: tc.output || ''\n      })));\n      const problemData = {\n        ...editedProblem,\n        test_cases: testCasesJson,\n        expected_output: testCases.map(tc => tc.output || '').join('\\n'),\n        // 保持向后兼容\n        force_create: forceCreate\n      };\n      const result = await aiValidateAndCreateProblem(problemData);\n      if (result.success) {\n        alert('题目创建成功！');\n\n        // 尝试刷新题目列表\n        try {\n          const problemsData = await getProblems(1, 50);\n          console.log('题目创建成功，新题目数据:', problemsData);\n\n          // 尝试通过多种方式通知父组件刷新\n          // 方法1: localStorage标记\n          localStorage.setItem('refreshProblems', 'true');\n          localStorage.setItem('lastProblemCreated', new Date().toISOString());\n\n          // 方法2: 自定义事件\n          window.dispatchEvent(new CustomEvent('problemCreated', {\n            detail: {\n              problemData: problemsData\n            }\n          }));\n\n          // 方法3: 如果当前页面在iframe中，通知父页面\n          if (window.parent && window.parent !== window) {\n            try {\n              window.parent.postMessage({\n                type: 'PROBLEM_CREATED',\n                data: problemsData\n              }, '*');\n            } catch (e) {\n              console.log('无法通知父页面:', e);\n            }\n          }\n        } catch (error) {\n          console.warn('无法刷新题目列表:', error);\n        }\n\n        // 重置状态\n        setStep(1);\n        setRequirements('');\n        setGeneratedProblem(null);\n        setEditedProblem(null);\n        setValidationResult('');\n        setTestCases([{\n          input: '',\n          output: ''\n        }]);\n      } else {\n        setValidationResult(result.validation_result);\n        setError(result.message);\n      }\n    } catch (error) {\n      var _error$response5;\n      const errorData = (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data;\n      if (errorData !== null && errorData !== void 0 && errorData.validation_result) {\n        setValidationResult(errorData.validation_result);\n      }\n      setError((errorData === null || errorData === void 0 ? void 0 : errorData.message) || '创建题目失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 处理输入变化\n  const handleInputChange = (field, value) => {\n    setEditedProblem(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  // 重新开始\n  const handleRestart = () => {\n    setStep(1);\n    setRequirements('');\n    setGeneratedProblem(null);\n    setEditedProblem(null);\n    setValidationResult('');\n    setError('');\n    setTestCases([{\n      input: '',\n      output: ''\n    }]);\n  };\n\n  // 测试用例管理\n  const addTestCase = () => {\n    setTestCases([...testCases, {\n      input: '',\n      output: ''\n    }]);\n  };\n  const removeTestCase = index => {\n    setTestCases(testCases.filter((_, i) => i !== index));\n  };\n  const updateTestCase = (index, field, value) => {\n    const newTestCases = [...testCases];\n    newTestCases[index][field] = value;\n    setTestCases(newTestCases);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ai-problem-generation\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(WhaleIcon, {\n          size: 32\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 13\n        }, this), \" AI\\u667A\\u80FD\\u751F\\u9898\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `step ${step >= 1 ? 'active' : ''}`,\n          children: \"1. \\u8F93\\u5165\\u9700\\u6C42\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `step ${step >= 2 ? 'active' : ''}`,\n          children: \"2. \\u9884\\u89C8\\u4FEE\\u6539\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `step ${step >= 3 ? 'active' : ''}`,\n          children: \"3. \\u6700\\u7EC8\\u786E\\u8BA4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error-icon\",\n        children: \"\\u26A0\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 11\n      }, this), error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 9\n    }, this), debugInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"debug-info\",\n      style: {\n        background: '#f0f8ff',\n        padding: '10px',\n        margin: '10px 0',\n        borderRadius: '5px',\n        fontSize: '12px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"\\u8C03\\u8BD5\\u4FE1\\u606F:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 11\n      }, this), \" \", debugInfo]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 657,\n      columnNumber: 9\n    }, this), step === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83D\\uDCDD \\u63CF\\u8FF0\\u60A8\\u7684\\u9898\\u76EE\\u9700\\u6C42\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"requirements-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: requirements,\n          onChange: e => setRequirements(e.target.value),\n          placeholder: \"\\u8BF7\\u8BE6\\u7EC6\\u63CF\\u8FF0\\u60A8\\u60F3\\u8981\\u751F\\u6210\\u7684\\u9898\\u76EE\\uFF0C\\u4F8B\\u5982\\uFF1A \\u751F\\u6210\\u4E00\\u4E2A\\u5173\\u4E8E\\u6570\\u7EC4\\u6392\\u5E8F\\u7684\\u7B80\\u5355\\u9898\\u76EE\\uFF0C\\u9002\\u5408\\u521D\\u5B66\\u8005\\uFF1A\\n- \\u96BE\\u5EA6\\uFF1A\\u7B80\\u5355\\n- \\u5305\\u542B3-5\\u4E2A\\u6D4B\\u8BD5\\u7528\\u4F8B\\n- \\u8981\\u6C42\\u4F7F\\u7528\\u5192\\u6CE1\\u6392\\u5E8F\\u6216\\u9009\\u62E9\\u6392\\u5E8F \\uD83D\\uDCA1 \\u4E3A\\u4E86\\u63D0\\u9AD8AI\\u751F\\u6210\\u8D28\\u91CF\\uFF0C\\u5EFA\\u8BAE\\u5728\\u63CF\\u8FF0\\u4E2D\\u660E\\u786E\\u6307\\u5B9A\\uFF1A\\n\\u2022 \\u6D4B\\u8BD5\\u7528\\u4F8B\\u6570\\u91CF\\uFF08\\u5982\\uFF1A3-5\\u4E2A\\uFF09\\n\\u2022 \\u8F93\\u5165\\u8F93\\u51FA\\u683C\\u5F0F\\u8981\\u6C42\\uFF08\\u5982\\uFF1A\\u6BCF\\u884C\\u4E00\\u4E2A\\u6570\\u5B57\\u3001\\u7A7A\\u683C\\u5206\\u9694\\u7B49\\uFF09\\n\\u2022 \\u8FB9\\u754C\\u60C5\\u51B5\\uFF08\\u5982\\uFF1A\\u7A7A\\u6570\\u7EC4\\u3001\\u5355\\u4E2A\\u5143\\u7D20\\u3001\\u5927\\u91CF\\u6570\\u636E\\u7B49\\uFF09\\n\\u2022 \\u7279\\u6B8A\\u8981\\u6C42\\uFF08\\u5982\\uFF1A\\u65F6\\u95F4\\u9650\\u5236\\u3001\\u5185\\u5B58\\u9650\\u5236\\u7B49\\uFF09 AI\\u4F1A\\u6309\\u7167\\u89C4\\u8303\\u683C\\u5F0F\\u751F\\u6210\\u6D4B\\u8BD5\\u7528\\u4F8B\\uFF0C\\u7CFB\\u7EDF\\u4F1A\\u81EA\\u52A8\\u8BC6\\u522B\\u548C\\u5206\\u5272\\uFF0C\\u51CF\\u5C11\\u624B\\u52A8\\u8C03\\u6574\\u5DE5\\u4F5C\\u3002\",\n          rows: 8,\n          className: \"requirements-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-tips\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uD83D\\uDCA1 \\u751F\\u9898\\u5EFA\\u8BAE\\uFF1A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u660E\\u786E\\u6307\\u5B9A\\u9898\\u76EE\\u7C7B\\u578B\\uFF08\\u5982\\uFF1A\\u6570\\u7EC4\\u3001\\u5B57\\u7B26\\u4E32\\u3001\\u7B97\\u6CD5\\u7B49\\uFF09\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 677,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u8BF4\\u660E\\u96BE\\u5EA6\\u7B49\\u7EA7\\uFF08\\u7B80\\u5355/\\u4E2D\\u7B49/\\u56F0\\u96BE\\uFF09\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 678,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u6307\\u5B9A\\u6D4B\\u8BD5\\u7528\\u4F8B\\u6570\\u91CF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 679,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u63CF\\u8FF0\\u7279\\u6B8A\\u8981\\u6C42\\u6216\\u9650\\u5236\\u6761\\u4EF6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 680,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\u5DE5\\u4F5C\\u6D41\\u7A0B\\uFF1A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 681,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 681,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                marginLeft: '20px'\n              },\n              children: \"\\u2022 AI\\u751F\\u6210\\u57FA\\u672C\\u7684\\u8F93\\u5165\\u8F93\\u51FA\\u6837\\u4F8B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 682,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                marginLeft: '20px'\n              },\n              children: \"\\u2022 \\u6559\\u5E08\\u5728\\u9884\\u89C8\\u9636\\u6BB5\\u624B\\u52A8\\u8C03\\u6574\\u6D4B\\u8BD5\\u7528\\u4F8B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 683,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                marginLeft: '20px'\n              },\n              children: \"\\u2022 \\u652F\\u6301\\u591A\\u884C\\u8F93\\u5165\\u548C\\u8F93\\u51FA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                marginLeft: '20px'\n              },\n              children: \"\\u2022 \\u652F\\u6301\\u7A7A\\u8F93\\u5165\\uFF08\\u5982\\u6392\\u5E8F\\u9898\\u76EE\\uFF09\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 685,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 676,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"format-template\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"\\uD83D\\uDCCB \\u683C\\u5F0F\\u6A21\\u677F\\u53C2\\u8003\\uFF1A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u70B9\\u51FB\\u4E0B\\u65B9\\u6309\\u94AE\\u67E5\\u770B\\u8BE6\\u7EC6\\u7684\\u683C\\u5F0F\\u6A21\\u677F\\u548C\\u6D4B\\u8BD5\\u7528\\u4F8B\\u683C\\u5F0F\\u8981\\u6C42\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 690,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setShowFormatModal(true),\n              className: \"format-modal-btn\",\n              children: \"\\uD83D\\uDCCB \\u67E5\\u770B\\u683C\\u5F0F\\u6A21\\u677F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 691,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 688,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 666,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-buttons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGenerate,\n          disabled: loading || !requirements.trim(),\n          className: \"primary-btn\",\n          children: loading ? '🔄 AI生成中...' : '🚀 开始生成'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 702,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 9\n    }, this), step === 2 && editedProblem && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u270F\\uFE0F \\u9884\\u89C8\\u548C\\u4FEE\\u6539\\u751F\\u6210\\u7684\\u9898\\u76EE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 717,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"problem-editor\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\u9898\\u76EE\\u540D\\u79F0\\uFF1A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 721,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editedProblem.title || '',\n            onChange: e => handleInputChange('title', e.target.value),\n            className: \"title-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 722,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 720,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\u9898\\u76EE\\u63CF\\u8FF0\\uFF1A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 731,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: editedProblem.description || '',\n            onChange: e => handleInputChange('description', e.target.value),\n            rows: 6,\n            className: \"description-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 730,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\u6D4B\\u8BD5\\u7528\\u4F8B\\u7BA1\\u7406\\uFF1A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 741,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"test-case-manager\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"test-case-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\u6D4B\\u8BD5\\u7528\\u4F8B\\u5217\\u8868\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 744,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: addTestCase,\n                className: \"add-test-case-btn\",\n                children: \"+ \\u6DFB\\u52A0\\u6D4B\\u8BD5\\u7528\\u4F8B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 745,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 743,\n              columnNumber: 17\n            }, this), testCases.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-test-cases\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"\\u6682\\u65E0\\u6D4B\\u8BD5\\u7528\\u4F8B\\uFF0C\\u8BF7\\u70B9\\u51FB\\\"\\u6DFB\\u52A0\\u6D4B\\u8BD5\\u7528\\u4F8B\\\"\\u6309\\u94AE\\u6DFB\\u52A0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 756,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 755,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [testCases.some(tc => tc._needsManualReview) && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"parsing-warnings\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"\\u26A0\\uFE0F \\u68C0\\u6D4B\\u5230\\u4EE5\\u4E0B\\u95EE\\u9898\\uFF0C\\u8BF7\\u68C0\\u67E5\\uFF1A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 763,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: testCases.map((tc, idx) => {\n                    if (tc._needsManualReview) {\n                      if (!tc.input && !tc.output) {\n                        return /*#__PURE__*/_jsxDEV(\"li\", {\n                          children: [\"\\u6D4B\\u8BD5\\u7528\\u4F8B \", idx + 1, \" \\u8F93\\u5165\\u548C\\u8F93\\u51FA\\u90FD\\u4E3A\\u7A7A\\uFF0C\\u8BF7\\u8865\\u5145\"]\n                        }, idx, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 768,\n                          columnNumber: 40\n                        }, this);\n                      } else if (!tc.input) {\n                        return /*#__PURE__*/_jsxDEV(\"li\", {\n                          children: [\"\\u6D4B\\u8BD5\\u7528\\u4F8B \", idx + 1, \" \\u7F3A\\u5C11\\u8F93\\u5165\\u6570\\u636E\"]\n                        }, idx, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 770,\n                          columnNumber: 40\n                        }, this);\n                      } else if (!tc.output) {\n                        return /*#__PURE__*/_jsxDEV(\"li\", {\n                          children: [\"\\u6D4B\\u8BD5\\u7528\\u4F8B \", idx + 1, \" \\u7F3A\\u5C11\\u671F\\u671B\\u8F93\\u51FA\"]\n                        }, idx, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 772,\n                          columnNumber: 40\n                        }, this);\n                      } else if (tc.input.includes('输出') || tc.output.includes('输入')) {\n                        return /*#__PURE__*/_jsxDEV(\"li\", {\n                          children: [\"\\u6D4B\\u8BD5\\u7528\\u4F8B \", idx + 1, \" \\u53EF\\u80FD\\u5B58\\u5728\\u8F93\\u5165\\u8F93\\u51FA\\u6DF7\\u6DC6\\uFF0C\\u8BF7\\u68C0\\u67E5\"]\n                        }, idx, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 774,\n                          columnNumber: 40\n                        }, this);\n                      }\n                    }\n                    return null;\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 764,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 762,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"test-cases-list\",\n                children: testCases.map((testCase, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `test-case-item ${testCase._needsManualReview ? 'needs-review' : ''}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"test-case-header-row\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"test-case-number\",\n                      children: [\"\\u6D4B\\u8BD5\\u7528\\u4F8B \", index + 1, testCase._needsManualReview && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"review-badge\",\n                        children: \"\\u26A0\\uFE0F \\u9700\\u68C0\\u67E5\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 789,\n                        columnNumber: 63\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 787,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      onClick: () => removeTestCase(index),\n                      className: \"remove-test-case-btn\",\n                      title: \"\\u5220\\u9664\\u6B64\\u6D4B\\u8BD5\\u7528\\u4F8B\",\n                      children: \"\\xD7\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 791,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 786,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"test-case-content\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"input-section\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        children: \"\\u8F93\\u5165\\uFF1A\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 802,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                        value: testCase.input,\n                        onChange: e => updateTestCase(index, 'input', e.target.value),\n                        placeholder: \"\\u8F93\\u5165\\u6570\\u636E\\uFF08\\u53EF\\u4EE5\\u4E3A\\u7A7A\\uFF09\",\n                        rows: 2,\n                        className: \"test-case-input\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 803,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 801,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"output-section\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        children: \"\\u671F\\u671B\\u8F93\\u51FA\\uFF1A\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 812,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                        value: testCase.output,\n                        onChange: e => updateTestCase(index, 'output', e.target.value),\n                        placeholder: \"\\u671F\\u671B\\u8F93\\u51FA\",\n                        rows: 2,\n                        className: \"test-case-output\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 813,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 811,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 800,\n                    columnNumber: 27\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 785,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 783,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 742,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\u96BE\\u5EA6\\u7B49\\u7EA7\\uFF1A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 831,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: editedProblem.difficulty || 'easy',\n            onChange: e => handleInputChange('difficulty', e.target.value),\n            className: \"difficulty-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"easy\",\n              children: \"\\u7B80\\u5355\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 837,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"medium\",\n              children: \"\\u4E2D\\u7B49\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 838,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"hard\",\n              children: \"\\u56F0\\u96BE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 839,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 832,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 830,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"editor-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\u65F6\\u95F4\\u9650\\u5236(ms)\\uFF1A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 845,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: editedProblem.time_limit || 1000,\n              onChange: e => handleInputChange('time_limit', parseInt(e.target.value)),\n              className: \"time-limit-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 846,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 844,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"editor-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\u5185\\u5B58\\u9650\\u5236(MB)\\uFF1A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 855,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: editedProblem.memory_limit || 128,\n              onChange: e => handleInputChange('memory_limit', parseInt(e.target.value)),\n              className: \"memory-limit-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 856,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 854,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 843,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 719,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRestart,\n          className: \"secondary-btn\",\n          children: \"\\uD83D\\uDD04 \\u91CD\\u65B0\\u5F00\\u59CB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 867,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePreview,\n          disabled: loading,\n          className: \"primary-btn\",\n          children: loading ? '处理中...' : '👀 预览确认'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 870,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 866,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 716,\n      columnNumber: 9\n    }, this), step === 3 && editedProblem && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83D\\uDD0D AI\\u9A8C\\u8BC1\\u548C\\u6700\\u7EC8\\u786E\\u8BA4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 884,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"final-preview\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"preview-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83D\\uDCCB \\u9898\\u76EE\\u9884\\u89C8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 888,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preview-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\u9898\\u76EE\\u540D\\u79F0\\uFF1A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 891,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: editedProblem.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 892,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 890,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\u96BE\\u5EA6\\u7B49\\u7EA7\\uFF1A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 895,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `difficulty-badge ${editedProblem.difficulty}`,\n                children: editedProblem.difficulty === 'easy' ? '简单' : editedProblem.difficulty === 'medium' ? '中等' : '困难'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 896,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 894,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\u65F6\\u95F4/\\u5185\\u5B58\\u9650\\u5236\\uFF1A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 902,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [editedProblem.time_limit, \"ms / \", editedProblem.memory_limit, \"MB\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 903,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 901,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\u9898\\u76EE\\u63CF\\u8FF0\\uFF1A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 906,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                className: \"description-preview\",\n                children: editedProblem.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 907,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 905,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\u6D4B\\u8BD5\\u7528\\u4F8B\\uFF1A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 910,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"test-cases-preview\",\n                children: testCases.map((tc, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"preview-test-case\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"preview-test-case-header\",\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: [\"\\u6D4B\\u8BD5\\u7528\\u4F8B \", index + 1, \":\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 915,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 914,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"preview-test-case-content\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"\\u8F93\\u5165:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 918,\n                        columnNumber: 32\n                      }, this), \" \", tc.input || '(无输入)']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 918,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"\\u671F\\u671B\\u8F93\\u51FA:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 919,\n                        columnNumber: 32\n                      }, this), \" \", tc.output]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 919,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 917,\n                    columnNumber: 25\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 913,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 911,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 909,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 889,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 887,\n          columnNumber: 13\n        }, this), validationResult && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"validation-result\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [/*#__PURE__*/_jsxDEV(WhaleIcon, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 930,\n              columnNumber: 21\n            }, this), \" AI\\u9A8C\\u8BC1\\u7ED3\\u679C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 930,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"validation-content\",\n            children: /*#__PURE__*/_jsxDEV(\"pre\", {\n              children: validationResult\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 932,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 931,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 929,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 886,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setStep(2),\n          className: \"secondary-btn\",\n          children: \"\\u2190 \\u8FD4\\u56DE\\u4FEE\\u6539\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 939,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRestart,\n          className: \"secondary-btn\",\n          children: \"\\uD83D\\uDD04 \\u91CD\\u65B0\\u5F00\\u59CB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 942,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleCreateProblem(false),\n          disabled: loading,\n          className: \"primary-btn\",\n          children: loading ? '创建中...' : '✅ 创建题目'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 945,\n          columnNumber: 13\n        }, this), validationResult && !validationResult.includes('验证通过') && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleCreateProblem(true),\n          disabled: loading,\n          className: \"warning-btn\",\n          children: \"\\u26A0\\uFE0F \\u5F3A\\u5236\\u521B\\u5EFA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 953,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 938,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 883,\n      columnNumber: 9\n    }, this), showFormatModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"format-modal-overlay\",\n      onClick: () => setShowFormatModal(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"format-modal\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"format-modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83D\\uDCCB \\u683C\\u5F0F\\u6A21\\u677F\\u53C2\\u8003\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 970,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-btn\",\n            onClick: () => setShowFormatModal(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 971,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 969,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"format-modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"format-tabs\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `format-tab ${activeFormatTab === 'full' ? 'active' : ''}`,\n              onClick: () => setActiveFormatTab('full'),\n              children: \"\\u5B8C\\u6574\\u6A21\\u677F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 981,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `format-tab ${activeFormatTab === 'testcase' ? 'active' : ''}`,\n              onClick: () => setActiveFormatTab('testcase'),\n              children: \"\\u6D4B\\u8BD5\\u7528\\u4F8B\\u683C\\u5F0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 987,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 980,\n            columnNumber: 15\n          }, this), activeFormatTab === 'full' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"format-tab-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"\\uD83D\\uDCDD \\u5B8C\\u6574\\u9898\\u76EE\\u751F\\u6210\\u6A21\\u677F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 997,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"template-examples\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"template-example\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: \"\\u6570\\u7EC4\\u6392\\u5E8F\\u9898\\u76EE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1000,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                  children: `生成一个数组排序题目，要求：\n- 难度：简单\n- 测试用例：3-5个\n- 输入格式：第一行数字n，第二行n个整数\n- 输出格式：排序后的数组\n- 边界情况：包含空数组、单个元素、重复元素\n- 特殊要求：时间复杂度O(n²)`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1001,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 999,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"template-example\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: \"\\u5B57\\u7B26\\u4E32\\u5904\\u7406\\u9898\\u76EE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1011,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                  children: `生成一个字符串反转题目，要求：\n- 难度：简单  \n- 测试用例：4个\n- 输入格式：每行一个字符串\n- 输出格式：反转后的字符串\n- 边界情况：空字符串、单字符、长字符串\n- 特殊要求：支持中文字符`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1012,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1010,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 998,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 996,\n            columnNumber: 17\n          }, this), activeFormatTab === 'testcase' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"format-tab-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"\\uD83E\\uDDEA \\u6D4B\\u8BD5\\u7528\\u4F8B\\u683C\\u5F0F\\u8981\\u6C42\\uFF08\\u53EF\\u76F4\\u63A5\\u590D\\u5236\\u4F7F\\u7528\\uFF09\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1026,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"testcase-format\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"format-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: \"\\u57FA\\u7840\\u683C\\u5F0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1029,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                  children: `测试用例1:\n输入：[]\n输出：[]\n\n测试用例2:\n输入：1\n42\n输出：42\n\n测试用例3:\n输入：3\n3 1 2\n输出：1 2 3`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1030,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"copy-btn\",\n                  onClick: () => copyToClipboard(`测试用例1:\n输入：[]\n输出：[]\n\n测试用例2:\n输入：1\n42\n输出：42\n\n测试用例3:\n输入：3\n3 1 2\n输出：1 2 3`),\n                  children: \"\\uD83D\\uDCCB \\u590D\\u5236\\u683C\\u5F0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1043,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1028,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"format-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: \"\\u5B57\\u7B26\\u4E32\\u683C\\u5F0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1064,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                  children: `测试用例1:\n输入：\n输出：\n\n测试用例2:\n输入：a\n输出：a\n\n测试用例3:\n输入：hello\n输出：olleh`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1065,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"copy-btn\",\n                  onClick: () => copyToClipboard(`测试用例1:\n输入：\n输出：\n\n测试用例2:\n输入：a\n输出：a\n\n测试用例3:\n输入：hello\n输出：olleh`),\n                  children: \"\\uD83D\\uDCCB \\u590D\\u5236\\u683C\\u5F0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1076,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1063,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"format-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: \"\\u6570\\u5B66\\u8BA1\\u7B97\\u683C\\u5F0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1095,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                  children: `测试用例1:\n输入：0 0\n输出：0\n\n测试用例2:\n输入：1 2\n输出：3\n\n测试用例3:\n输入：-5 3\n输出：-2`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1096,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"copy-btn\",\n                  onClick: () => copyToClipboard(`测试用例1:\n输入：0 0\n输出：0\n\n测试用例2:\n输入：1 2\n输出：3\n\n测试用例3:\n输入：-5 3\n输出：-2`),\n                  children: \"\\uD83D\\uDCCB \\u590D\\u5236\\u683C\\u5F0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1107,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1094,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1027,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1025,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 979,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 968,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 967,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 638,\n    columnNumber: 5\n  }, this);\n};\n_s(AIProblemGenerationPage, \"XRbNDnVbO09mqm2dASdxzUScbo4=\");\n_c = AIProblemGenerationPage;\nexport default AIProblemGenerationPage;\nvar _c;\n$RefreshReg$(_c, \"AIProblemGenerationPage\");","map":{"version":3,"names":["React","useState","aiGenerateProblem","aiPreviewProblem","aiValidateAndCreateProblem","getProblems","WhaleIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","AIProblemGenerationPage","_s","step","setStep","loading","setLoading","error","setError","requirements","setRequirements","generatedProblem","setGeneratedProblem","editedProblem","setEditedProblem","validationResult","setValidationResult","debugInfo","setDebugInfo","testCases","setTestCases","input","output","showFormatModal","setShowFormatModal","activeFormatTab","setActiveFormatTab","parseGeneratedTestCases","testCasesText","expectedOutputText","console","log","parsed","JSON","parse","Array","isArray","map","tc","e","structuredResult","parseStructuredFormat","length","lines","split","filter","line","trim","smartResult","smartLineSplit","inputContent","outputContent","includes","parts","replace","midPoint","Math","ceil","slice","join","_needsManualReview","result","newFormatPattern","match","exec","index","parseInt","push","inputPattern","outputPattern","inputs","outputs","Object","keys","maxIndex","max","k","i","currentInput","currentOutput","inInputSection","testCaseIndex","hasInputOutputPattern","some","toLowerCase","splitByContentFeatures","isInputOutputBoundary","splitPoint","findOptimalSplitPoint","inputLines","outputLines","splitIntoMultipleTestCases","hasContentBefore","hasContentAfter","prevLine","currentLine","test","inputNumbers","outputNumbers","currentIndex","allLines","lineLower","nextLines","l","nextLine","handleGenerate","token","localStorage","getItem","user","substring","username","success","problem","parsedCases","test_cases","expected_output","_error$response","_error$response2","_error$response3","_error$response3$data","response","data","errorMessage","status","mockProblem","title","description","difficulty","time_limit","memory_limit","ai_generated","original_requirements","generated_at","Date","toISOString","message","handlePreview","updatedProblem","_error$response4","_error$response4$data","handleCreateProblem","forceCreate","testCasesJson","stringify","problemData","force_create","alert","problemsData","setItem","window","dispatchEvent","CustomEvent","detail","parent","postMessage","type","warn","validation_result","_error$response5","errorData","handleInputChange","field","value","prev","handleRestart","addTestCase","removeTestCase","_","updateTestCase","newTestCases","className","children","size","fileName","_jsxFileName","lineNumber","columnNumber","style","background","padding","margin","borderRadius","fontSize","onChange","target","placeholder","rows","marginLeft","onClick","disabled","idx","testCase","stopPropagation","copyToClipboard","_c","$RefreshReg$"],"sources":["/Volumes/坞城/OJ_1/frontend/src/pages/AIProblemGenerationPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { \n  aiGenerateProblem, \n  aiPreviewProblem, \n  aiValidateAndCreateProblem,\n  getProblems\n} from '../services/api';\nimport './AIProblemGenerationPage.css';\nimport WhaleIcon from '../components/WhaleIcon';\n\nconst AIProblemGenerationPage = () => {\n  const [step, setStep] = useState(1); // 1: 输入需求, 2: 预览修改, 3: 最终确认\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [requirements, setRequirements] = useState('');\n  const [generatedProblem, setGeneratedProblem] = useState(null);\n  const [editedProblem, setEditedProblem] = useState(null);\n  const [validationResult, setValidationResult] = useState('');\n\n  // 添加调试信息\n  const [debugInfo, setDebugInfo] = useState('');\n\n  // 测试用例管理\n  const [testCases, setTestCases] = useState([{ input: '', output: '' }]);\n  \n  // 格式模板弹窗状态\n  const [showFormatModal, setShowFormatModal] = useState(false);\n  const [activeFormatTab, setActiveFormatTab] = useState('testcase');\n\n  // 解析测试用例（从AI生成的格式转换为结构化格式）\n  const parseGeneratedTestCases = (testCasesText, expectedOutputText) => {\n    if (!testCasesText || !expectedOutputText) return [{ input: '', output: '' }];\n    \n    // 添加调试日志\n    console.log('开始解析测试用例:');\n    console.log('testCasesText:', testCasesText);\n    console.log('expectedOutputText:', expectedOutputText);\n    \n    try {\n      // 尝试解析为JSON格式\n      const parsed = JSON.parse(testCasesText);\n      if (Array.isArray(parsed)) {\n        console.log('成功解析为JSON格式');\n        return parsed.map(tc => ({\n          input: tc.input || '',\n          output: tc.output || ''\n        }));\n      }\n    } catch (e) {\n      // 如果不是JSON，尝试解析文本格式\n      console.log('解析为JSON失败，尝试解析文本格式');\n    }\n\n    // 策略1：识别结构化格式（输入1：xxx 输出1：xxx）\n    console.log('尝试识别结构化格式');\n    const structuredResult = parseStructuredFormat(testCasesText);\n    if (structuredResult.length > 0) {\n      console.log('成功解析为结构化格式');\n      return structuredResult;\n    }\n\n    // 策略2：智能行分割（基于内容特征）\n    console.log('尝试智能行分割');\n    const lines = testCasesText.split('\\n').filter(line => line.trim());\n    if (lines.length > 0) {\n      const smartResult = smartLineSplit(lines);\n      if (smartResult.length > 0) {\n        console.log('使用智能行分割成功');\n        return smartResult;\n      }\n    }\n\n    // 策略3：回退到简化解析逻辑\n    console.log('使用简化解析逻辑');\n    \n    // 尝试从testCasesText中提取输入和输出\n    let inputContent = '';\n    let outputContent = '';\n    \n    // 如果AI生成了包含\"输入：\"和\"输出：\"的格式，尝试提取\n    if (testCasesText.includes('输入：') && testCasesText.includes('输出：')) {\n      const parts = testCasesText.split('输出：');\n      if (parts.length >= 2) {\n        inputContent = parts[0].replace('输入：', '').trim();\n        outputContent = parts[1].trim();\n      }\n    } else {\n      // 如果没有明确标记，尝试智能分割\n      const lines = testCasesText.split('\\n').filter(line => line.trim());\n      if (lines.length > 0) {\n        // 假设前一半是输入，后一半是输出\n        const midPoint = Math.ceil(lines.length / 2);\n        inputContent = lines.slice(0, midPoint).join('\\n');\n        outputContent = lines.slice(midPoint).join('\\n');\n      }\n    }\n    \n    // 如果从testCasesText没有提取到内容，尝试从expectedOutputText\n    if (!inputContent && !outputContent && expectedOutputText) {\n      outputContent = expectedOutputText.trim();\n    }\n    \n    console.log('提取的输入内容:', inputContent);\n    console.log('提取的输出内容:', outputContent);\n    \n    // 返回一个包含提取内容的测试用例，让教师手动调整\n    if (inputContent || outputContent) {\n      return [{\n        input: inputContent,\n        output: outputContent,\n        _needsManualReview: true // 标记需要手动检查\n      }];\n    }\n    \n    // 如果什么都没提取到，返回空的测试用例\n    return [{ input: '', output: '' }];\n  };\n\n  // 解析结构化格式的函数\n  const parseStructuredFormat = (testCasesText) => {\n    const result = [];\n    \n    // 策略1：匹配新格式：测试用例X: 输入：xxx 输出：xxx\n    const newFormatPattern = /测试用例(\\d+):\\s*\\n输入：\\s*([\\s\\S]*?)(?=\\n输出：|$)\\n输出：\\s*([\\s\\S]*?)(?=\\n测试用例\\d+:|$)/g;\n    \n    let match;\n    while ((match = newFormatPattern.exec(testCasesText)) !== null) {\n      const index = parseInt(match[1]);\n      const input = match[2].trim();\n      const output = match[3].trim();\n      \n      result.push({\n        input: input,\n        output: output,\n        _needsManualReview: false\n      });\n    }\n    \n    if (result.length > 0) {\n      console.log(`新格式解析到 ${result.length} 个测试用例`);\n      return result;\n    }\n    \n    // 策略2：匹配旧格式：输入1：[内容] 输出1：[内容] 输入2：[内容] 输出2：[内容] ...\n    const inputPattern = /输入(\\d+)[：:]\\s*([\\s\\S]*?)(?=输出\\1[：:]|输入\\d+[：:]|$)/g;\n    const outputPattern = /输出(\\d+)[：:]\\s*([\\s\\S]*?)(?=输入\\d+[：:]|输出\\d+[：:]|$)/g;\n    \n    const inputs = {};\n    const outputs = {};\n    \n    // 提取所有输入\n    while ((match = inputPattern.exec(testCasesText)) !== null) {\n      const index = parseInt(match[1]);\n      inputs[index] = match[2].trim();\n    }\n    \n    // 提取所有输出\n    while ((match = outputPattern.exec(testCasesText)) !== null) {\n      const index = parseInt(match[1]);\n      outputs[index] = match[2].trim();\n    }\n    \n    // 如果找到结构化格式，按索引匹配\n    if (Object.keys(inputs).length > 0 || Object.keys(outputs).length > 0) {\n      const maxIndex = Math.max(\n        ...Object.keys(inputs).map(k => parseInt(k)),\n        ...Object.keys(outputs).map(k => parseInt(k))\n      );\n      \n      for (let i = 1; i <= maxIndex; i++) {\n        result.push({\n          input: inputs[i] || '',\n          output: outputs[i] || '',\n          _needsManualReview: !inputs[i] || !outputs[i] // 如果缺少输入或输出，标记需要检查\n        });\n      }\n      \n      console.log(`旧格式解析到 ${result.length} 个测试用例`);\n      return result;\n    }\n    \n    return [];\n  };\n\n  // 智能行分割函数\n  const smartLineSplit = (lines) => {\n    const result = [];\n    let currentInput = [];\n    let currentOutput = [];\n    let inInputSection = true;\n    let testCaseIndex = 1;\n    \n    // 预处理：识别可能的输入输出模式\n    const hasInputOutputPattern = lines.some(line => \n      line.toLowerCase().includes('输入') || line.toLowerCase().includes('输出')\n    );\n    \n    // 如果没有明确的输入输出标记，尝试基于内容特征分割\n    if (!hasInputOutputPattern) {\n      return splitByContentFeatures(lines);\n    }\n    \n    for (let i = 0; i < lines.length; i++) {\n      const line = lines[i];\n      \n      // 检测输入输出分界点\n      if (isInputOutputBoundary(line, lines, i)) {\n        // 保存当前的测试用例\n        if (currentInput.length > 0 || currentOutput.length > 0) {\n          result.push({\n            input: currentInput.join('\\n'),\n            output: currentOutput.join('\\n'),\n            _needsManualReview: currentInput.length === 0 || currentOutput.length === 0\n          });\n          testCaseIndex++;\n        }\n        \n        // 重置当前测试用例\n        currentInput = [];\n        currentOutput = [];\n        inInputSection = !inInputSection;\n      }\n      \n      // 根据当前状态添加到输入或输出\n      if (inInputSection) {\n        currentInput.push(line);\n      } else {\n        currentOutput.push(line);\n      }\n    }\n    \n    // 添加最后一个测试用例\n    if (currentInput.length > 0 || currentOutput.length > 0) {\n      result.push({\n        input: currentInput.join('\\n'),\n        output: currentOutput.join('\\n'),\n        _needsManualReview: currentInput.length === 0 || currentOutput.length === 0\n      });\n    }\n    \n    console.log(`智能行分割得到 ${result.length} 个测试用例`);\n    return result;\n  };\n\n  // 基于内容特征的分割函数\n  const splitByContentFeatures = (lines) => {\n    const result = [];\n    \n    // 尝试找到输入输出的分界点\n    let splitPoint = findOptimalSplitPoint(lines);\n    \n    if (splitPoint > 0) {\n      const inputLines = lines.slice(0, splitPoint);\n      const outputLines = lines.slice(splitPoint);\n      \n      // 尝试进一步分割为多个测试用例\n      const testCases = splitIntoMultipleTestCases(inputLines, outputLines);\n      \n      if (testCases.length > 1) {\n        return testCases;\n      } else {\n        return [{\n          input: inputLines.join('\\n'),\n          output: outputLines.join('\\n'),\n          _needsManualReview: false\n        }];\n      }\n    }\n    \n    // 如果找不到分界点，使用简单的前后分割\n    const midPoint = Math.ceil(lines.length / 2);\n    return [{\n      input: lines.slice(0, midPoint).join('\\n'),\n      output: lines.slice(midPoint).join('\\n'),\n      _needsManualReview: true\n    }];\n  };\n\n  // 找到最优分割点\n  const findOptimalSplitPoint = (lines) => {\n    // 策略1：寻找明显的分隔符\n    for (let i = 0; i < lines.length; i++) {\n      const line = lines[i].trim();\n      if (line === '---' || line === '===' || line === '***' || line === '') {\n        // 检查前后是否有内容\n        const hasContentBefore = i > 0 && lines[i-1].trim() !== '';\n        const hasContentAfter = i < lines.length - 1 && lines[i+1].trim() !== '';\n        \n        if (hasContentBefore && hasContentAfter) {\n          return i;\n        }\n      }\n    }\n    \n    // 策略2：基于数字模式识别\n    for (let i = 1; i < lines.length; i++) {\n      const prevLine = lines[i-1].trim();\n      const currentLine = lines[i].trim();\n      \n      // 如果前一行是单个数字，当前行也是数字，可能是新测试用例\n      if (/^\\d+$/.test(prevLine) && /^\\d+/.test(currentLine)) {\n        return i;\n      }\n    }\n    \n    // 策略3：基于空行分隔\n    for (let i = 1; i < lines.length - 1; i++) {\n      if (lines[i].trim() === '' && lines[i-1].trim() !== '' && lines[i+1].trim() !== '') {\n        return i + 1;\n      }\n    }\n    \n    return -1;\n  };\n\n  // 分割为多个测试用例\n  const splitIntoMultipleTestCases = (inputLines, outputLines) => {\n    const result = [];\n    \n    // 尝试识别测试用例的数量\n    const inputNumbers = inputLines.filter(line => /^\\d+$/.test(line.trim()));\n    const outputNumbers = outputLines.filter(line => /^\\d+$/.test(line.trim()));\n    \n    if (inputNumbers.length === outputNumbers.length && inputNumbers.length > 1) {\n      // 按数字分组\n      let currentInput = [];\n      let currentOutput = [];\n      let currentIndex = 0;\n      \n      for (let i = 0; i < inputLines.length; i++) {\n        const line = inputLines[i];\n        if (/^\\d+$/.test(line.trim())) {\n          // 保存前一个测试用例\n          if (currentInput.length > 0 || currentOutput.length > 0) {\n            result.push({\n              input: currentInput.join('\\n'),\n              output: currentOutput.join('\\n'),\n              _needsManualReview: false\n            });\n          }\n          \n          currentInput = [line];\n          currentOutput = [];\n          currentIndex++;\n        } else {\n          currentInput.push(line);\n        }\n      }\n      \n      // 添加最后一个测试用例\n      if (currentInput.length > 0) {\n        result.push({\n          input: currentInput.join('\\n'),\n          output: currentOutput.join('\\n'),\n          _needsManualReview: false\n        });\n      }\n      \n      return result;\n    }\n    \n    // 如果无法识别多个测试用例，返回单个\n    return [{\n      input: inputLines.join('\\n'),\n      output: outputLines.join('\\n'),\n      _needsManualReview: false\n    }];\n  };\n\n  // 检测输入输出分界点的函数\n  const isInputOutputBoundary = (line, allLines, currentIndex) => {\n    const lineLower = line.toLowerCase();\n    \n    // 检测明显的分隔符\n    if (lineLower.includes('---') || lineLower.includes('===') || lineLower.includes('***')) {\n      return true;\n    }\n    \n    // 检测数字编号（如 \"1.\" \"2.\" 等）\n    if (/^\\d+\\./.test(line.trim())) {\n      return true;\n    }\n    \n    // 检测\"输入X：\"或\"输出X：\"格式\n    if (/^(输入|输出)\\d+[：:]/.test(line.trim())) {\n      return true;\n    }\n    \n    // 检测空行后的新测试用例开始\n    if (currentIndex > 0 && allLines[currentIndex - 1].trim() === '') {\n      const nextLines = allLines.slice(currentIndex + 1, currentIndex + 3);\n      if (nextLines.some(l => l.toLowerCase().includes('输入') || l.toLowerCase().includes('输出'))) {\n        return true;\n      }\n    }\n    \n    // 检测连续空行（可能表示测试用例分隔）\n    if (currentIndex > 0 && currentIndex < allLines.length - 1) {\n      const prevLine = allLines[currentIndex - 1].trim();\n      const nextLine = allLines[currentIndex + 1].trim();\n      if (prevLine === '' && nextLine === '' && line.trim() === '') {\n        return true;\n      }\n    }\n    \n    return false;\n  };\n\n  // 步骤1: AI生成题目\n  const handleGenerate = async () => {\n    if (!requirements.trim()) {\n      setError('请输入生题需求');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError('');\n      \n      // 添加调试信息\n      const token = localStorage.getItem('token');\n      const user = localStorage.getItem('user');\n      setDebugInfo(`Token: ${token ? token.substring(0, 20) + '...' : 'No token'}, User: ${user ? JSON.parse(user).username : 'No user'}`);\n      \n      console.log('开始调用AI生题API...');\n      console.log('Token:', token);\n      console.log('Requirements:', requirements);\n      \n      const result = await aiGenerateProblem(requirements);\n      \n      console.log('API响应:', result);\n      \n      if (result.success) {\n        setGeneratedProblem(result.problem);\n        setEditedProblem({ ...result.problem }); // 复制一份用于编辑\n        \n        // 解析测试用例\n        const parsedCases = parseGeneratedTestCases(result.problem.test_cases, result.problem.expected_output);\n        setTestCases(parsedCases);\n        \n        setStep(2);\n      } else {\n        setError(result.error || 'AI生成失败');\n      }\n    } catch (error) {\n      console.error('AI生成错误详情:', error);\n      console.error('错误响应:', error.response);\n      console.error('错误数据:', error.response?.data);\n      \n      let errorMessage = '生成题目失败，请重试';\n      \n      if (error.response?.status === 401) {\n        errorMessage = '认证失败，使用测试模式...';\n        \n        // 使用模拟数据来测试前端功能\n        const mockProblem = {\n          title: '字符串反转（测试模式）',\n          description: '给定一个字符串，请将其反转后输出。\\n\\n输入格式：一行包含一个字符串\\n输出格式：输出反转后的字符串',\n          test_cases: '输入1：hello\\n输出1：olleh\\n\\n输入2：world\\n输出2：dlrow\\n\\n输入3：test\\n输出3：tset',\n          expected_output: 'olleh\\ndlrow\\ntset',\n          difficulty: 'easy',\n          time_limit: 1000,\n          memory_limit: 128,\n          ai_generated: true,\n          original_requirements: requirements,\n          generated_at: new Date().toISOString()\n        };\n        \n        setGeneratedProblem(mockProblem);\n        setEditedProblem({ ...mockProblem });\n        \n        // 解析测试用例\n        const parsedCases = parseGeneratedTestCases(mockProblem.test_cases, mockProblem.expected_output);\n        setTestCases(parsedCases);\n        \n        setStep(2);\n        setError(''); // 清除错误信息\n        return;\n      } else if (error.response?.data?.error) {\n        errorMessage = error.response.data.error;\n      } else if (error.message) {\n        errorMessage = error.message;\n      }\n      \n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 步骤2: 预览修改\n  const handlePreview = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      \n      // 将测试用例转换为字符串格式，保持向后兼容\n      const testCasesText = testCases.map(tc => \n        `输入：${tc.input}\\n输出：${tc.output}`\n      ).join('\\n\\n');\n      \n      const expectedOutputText = testCases.map(tc => tc.output).join('\\n');\n      \n      const updatedProblem = {\n        ...editedProblem,\n        test_cases: testCasesText,\n        expected_output: expectedOutputText\n      };\n      \n      setEditedProblem(updatedProblem);\n      \n      const result = await aiPreviewProblem(updatedProblem);\n      \n      if (result.success) {\n        setStep(3);\n      } else {\n        setError('预览失败');\n      }\n    } catch (error) {\n      setError(error.response?.data?.error || '预览失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 步骤3: 最终创建\n  const handleCreateProblem = async (forceCreate = false) => {\n    try {\n      setLoading(true);\n      setError('');\n      \n      // 将测试用例转换为JSON格式\n      const testCasesJson = JSON.stringify(testCases.map(tc => ({\n        input: tc.input || '',\n        output: tc.output || ''\n      })));\n      \n      const problemData = {\n        ...editedProblem,\n        test_cases: testCasesJson,\n        expected_output: testCases.map(tc => tc.output || '').join('\\n'), // 保持向后兼容\n        force_create: forceCreate\n      };\n      \n      const result = await aiValidateAndCreateProblem(problemData);\n      \n      if (result.success) {\n        alert('题目创建成功！');\n        \n        // 尝试刷新题目列表\n        try {\n          const problemsData = await getProblems(1, 50);\n          console.log('题目创建成功，新题目数据:', problemsData);\n          \n          // 尝试通过多种方式通知父组件刷新\n          // 方法1: localStorage标记\n          localStorage.setItem('refreshProblems', 'true');\n          localStorage.setItem('lastProblemCreated', new Date().toISOString());\n          \n          // 方法2: 自定义事件\n          window.dispatchEvent(new CustomEvent('problemCreated', { \n            detail: { problemData: problemsData } \n          }));\n          \n          // 方法3: 如果当前页面在iframe中，通知父页面\n          if (window.parent && window.parent !== window) {\n            try {\n              window.parent.postMessage({ \n                type: 'PROBLEM_CREATED', \n                data: problemsData \n              }, '*');\n            } catch (e) {\n              console.log('无法通知父页面:', e);\n            }\n          }\n          \n        } catch (error) {\n          console.warn('无法刷新题目列表:', error);\n        }\n        \n        // 重置状态\n        setStep(1);\n        setRequirements('');\n        setGeneratedProblem(null);\n        setEditedProblem(null);\n        setValidationResult('');\n        setTestCases([{ input: '', output: '' }]);\n      } else {\n        setValidationResult(result.validation_result);\n        setError(result.message);\n      }\n    } catch (error) {\n      const errorData = error.response?.data;\n      if (errorData?.validation_result) {\n        setValidationResult(errorData.validation_result);\n      }\n      setError(errorData?.message || '创建题目失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 处理输入变化\n  const handleInputChange = (field, value) => {\n    setEditedProblem(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  // 重新开始\n  const handleRestart = () => {\n    setStep(1);\n    setRequirements('');\n    setGeneratedProblem(null);\n    setEditedProblem(null);\n    setValidationResult('');\n    setError('');\n    setTestCases([{ input: '', output: '' }]);\n  };\n\n  // 测试用例管理\n  const addTestCase = () => {\n    setTestCases([...testCases, { input: '', output: '' }]);\n  };\n\n  const removeTestCase = (index) => {\n    setTestCases(testCases.filter((_, i) => i !== index));\n  };\n\n  const updateTestCase = (index, field, value) => {\n    const newTestCases = [...testCases];\n    newTestCases[index][field] = value;\n    setTestCases(newTestCases);\n  };\n\n  return (\n    <div className=\"ai-problem-generation\">\n      <div className=\"page-header\">\n        <h1><WhaleIcon size={32} /> AI智能生题</h1>\n        <div className=\"step-indicator\">\n          <div className={`step ${step >= 1 ? 'active' : ''}`}>1. 输入需求</div>\n          <div className={`step ${step >= 2 ? 'active' : ''}`}>2. 预览修改</div>\n          <div className={`step ${step >= 3 ? 'active' : ''}`}>3. 最终确认</div>\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"error-message\">\n          <span className=\"error-icon\">⚠️</span>\n          {error}\n        </div>\n      )}\n\n      {/* 调试信息 */}\n      {debugInfo && (\n        <div className=\"debug-info\" style={{background: '#f0f8ff', padding: '10px', margin: '10px 0', borderRadius: '5px', fontSize: '12px'}}>\n          <strong>调试信息:</strong> {debugInfo}\n        </div>\n      )}\n\n      {/* 步骤1: 输入需求 */}\n      {step === 1 && (\n        <div className=\"step-content\">\n          <h2>📝 描述您的题目需求</h2>\n          <div className=\"requirements-section\">\n            <textarea\n              value={requirements}\n              onChange={(e) => setRequirements(e.target.value)}\n              placeholder=\"请详细描述您想要生成的题目，例如：&#10;&#10;生成一个关于数组排序的简单题目，适合初学者：&#10;- 难度：简单&#10;- 包含3-5个测试用例&#10;- 要求使用冒泡排序或选择排序&#10;&#10;💡 为了提高AI生成质量，建议在描述中明确指定：&#10;• 测试用例数量（如：3-5个）&#10;• 输入输出格式要求（如：每行一个数字、空格分隔等）&#10;• 边界情况（如：空数组、单个元素、大量数据等）&#10;• 特殊要求（如：时间限制、内存限制等）&#10;&#10;AI会按照规范格式生成测试用例，系统会自动识别和分割，减少手动调整工作。\"\n              rows={8}\n              className=\"requirements-input\"\n            />\n            <div className=\"input-tips\">\n              <h4>💡 生题建议：</h4>\n              <ul>\n                <li>明确指定题目类型（如：数组、字符串、算法等）</li>\n                <li>说明难度等级（简单/中等/困难）</li>\n                <li>指定测试用例数量</li>\n                <li>描述特殊要求或限制条件</li>\n                <li><strong>工作流程：</strong></li>\n                <li style={{marginLeft: '20px'}}>• AI生成基本的输入输出样例</li>\n                <li style={{marginLeft: '20px'}}>• 教师在预览阶段手动调整测试用例</li>\n                <li style={{marginLeft: '20px'}}>• 支持多行输入和输出</li>\n                <li style={{marginLeft: '20px'}}>• 支持空输入（如排序题目）</li>\n              </ul>\n              \n              <div className=\"format-template\">\n                <h4>📋 格式模板参考：</h4>\n                <p>点击下方按钮查看详细的格式模板和测试用例格式要求</p>\n                <button \n                  type=\"button\" \n                  onClick={() => setShowFormatModal(true)}\n                  className=\"format-modal-btn\"\n                >\n                  📋 查看格式模板\n                </button>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"action-buttons\">\n            <button \n              onClick={handleGenerate}\n              disabled={loading || !requirements.trim()}\n              className=\"primary-btn\"\n            >\n              {loading ? '🔄 AI生成中...' : '🚀 开始生成'}\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* 步骤2: 预览修改 */}\n      {step === 2 && editedProblem && (\n        <div className=\"step-content\">\n          <h2>✏️ 预览和修改生成的题目</h2>\n          \n          <div className=\"problem-editor\">\n            <div className=\"editor-section\">\n              <label>题目名称：</label>\n              <input\n                type=\"text\"\n                value={editedProblem.title || ''}\n                onChange={(e) => handleInputChange('title', e.target.value)}\n                className=\"title-input\"\n              />\n            </div>\n\n            <div className=\"editor-section\">\n              <label>题目描述：</label>\n              <textarea\n                value={editedProblem.description || ''}\n                onChange={(e) => handleInputChange('description', e.target.value)}\n                rows={6}\n                className=\"description-input\"\n              />\n            </div>\n\n            <div className=\"editor-section\">\n              <label>测试用例管理：</label>\n              <div className=\"test-case-manager\">\n                <div className=\"test-case-header\">\n                  <span>测试用例列表</span>\n                  <button \n                    type=\"button\" \n                    onClick={addTestCase}\n                    className=\"add-test-case-btn\"\n                  >\n                    + 添加测试用例\n                  </button>\n                </div>\n                \n                {testCases.length === 0 ? (\n                  <div className=\"no-test-cases\">\n                    <p>暂无测试用例，请点击\"添加测试用例\"按钮添加</p>\n                  </div>\n                ) : (\n                  <>\n                    {/* 智能提示区域 */}\n                    {testCases.some(tc => tc._needsManualReview) && (\n                      <div className=\"parsing-warnings\">\n                        <h4>⚠️ 检测到以下问题，请检查：</h4>\n                        <ul>\n                          {testCases.map((tc, idx) => {\n                            if (tc._needsManualReview) {\n                              if (!tc.input && !tc.output) {\n                                return <li key={idx}>测试用例 {idx + 1} 输入和输出都为空，请补充</li>;\n                              } else if (!tc.input) {\n                                return <li key={idx}>测试用例 {idx + 1} 缺少输入数据</li>;\n                              } else if (!tc.output) {\n                                return <li key={idx}>测试用例 {idx + 1} 缺少期望输出</li>;\n                              } else if (tc.input.includes('输出') || tc.output.includes('输入')) {\n                                return <li key={idx}>测试用例 {idx + 1} 可能存在输入输出混淆，请检查</li>;\n                              }\n                            }\n                            return null;\n                          })}\n                        </ul>\n                      </div>\n                    )}\n                    \n                    <div className=\"test-cases-list\">\n                      {testCases.map((testCase, index) => (\n                        <div key={index} className={`test-case-item ${testCase._needsManualReview ? 'needs-review' : ''}`}>\n                          <div className=\"test-case-header-row\">\n                            <span className=\"test-case-number\">\n                              测试用例 {index + 1}\n                              {testCase._needsManualReview && <span className=\"review-badge\">⚠️ 需检查</span>}\n                            </span>\n                            <button\n                              type=\"button\"\n                              onClick={() => removeTestCase(index)}\n                              className=\"remove-test-case-btn\"\n                              title=\"删除此测试用例\"\n                            >\n                              ×\n                            </button>\n                          </div>\n                          <div className=\"test-case-content\">\n                            <div className=\"input-section\">\n                              <label>输入：</label>\n                              <textarea\n                                value={testCase.input}\n                                onChange={(e) => updateTestCase(index, 'input', e.target.value)}\n                                placeholder=\"输入数据（可以为空）\"\n                                rows={2}\n                                className=\"test-case-input\"\n                              />\n                            </div>\n                            <div className=\"output-section\">\n                              <label>期望输出：</label>\n                              <textarea\n                                value={testCase.output}\n                                onChange={(e) => updateTestCase(index, 'output', e.target.value)}\n                                placeholder=\"期望输出\"\n                                rows={2}\n                                className=\"test-case-output\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </>\n                )}\n              </div>\n            </div>\n\n            <div className=\"editor-section\">\n              <label>难度等级：</label>\n              <select\n                value={editedProblem.difficulty || 'easy'}\n                onChange={(e) => handleInputChange('difficulty', e.target.value)}\n                className=\"difficulty-select\"\n              >\n                <option value=\"easy\">简单</option>\n                <option value=\"medium\">中等</option>\n                <option value=\"hard\">困难</option>\n              </select>\n            </div>\n\n            <div className=\"editor-row\">\n              <div className=\"editor-section\">\n                <label>时间限制(ms)：</label>\n                <input\n                  type=\"number\"\n                  value={editedProblem.time_limit || 1000}\n                  onChange={(e) => handleInputChange('time_limit', parseInt(e.target.value))}\n                  className=\"time-limit-input\"\n                />\n              </div>\n\n              <div className=\"editor-section\">\n                <label>内存限制(MB)：</label>\n                <input\n                  type=\"number\"\n                  value={editedProblem.memory_limit || 128}\n                  onChange={(e) => handleInputChange('memory_limit', parseInt(e.target.value))}\n                  className=\"memory-limit-input\"\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"action-buttons\">\n            <button onClick={handleRestart} className=\"secondary-btn\">\n              🔄 重新开始\n            </button>\n            <button \n              onClick={handlePreview}\n              disabled={loading}\n              className=\"primary-btn\"\n            >\n              {loading ? '处理中...' : '👀 预览确认'}\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* 步骤3: 最终确认 */}\n      {step === 3 && editedProblem && (\n        <div className=\"step-content\">\n          <h2>🔍 AI验证和最终确认</h2>\n          \n          <div className=\"final-preview\">\n            <div className=\"preview-card\">\n              <h3>📋 题目预览</h3>\n              <div className=\"preview-content\">\n                <div className=\"preview-item\">\n                  <strong>题目名称：</strong>\n                  <span>{editedProblem.title}</span>\n                </div>\n                <div className=\"preview-item\">\n                  <strong>难度等级：</strong>\n                  <span className={`difficulty-badge ${editedProblem.difficulty}`}>\n                    {editedProblem.difficulty === 'easy' ? '简单' : \n                     editedProblem.difficulty === 'medium' ? '中等' : '困难'}\n                  </span>\n                </div>\n                <div className=\"preview-item\">\n                  <strong>时间/内存限制：</strong>\n                  <span>{editedProblem.time_limit}ms / {editedProblem.memory_limit}MB</span>\n                </div>\n                <div className=\"preview-item\">\n                  <strong>题目描述：</strong>\n                  <pre className=\"description-preview\">{editedProblem.description}</pre>\n                </div>\n                <div className=\"preview-item\">\n                  <strong>测试用例：</strong>\n                  <div className=\"test-cases-preview\">\n                    {testCases.map((tc, index) => (\n                      <div key={index} className=\"preview-test-case\">\n                        <div className=\"preview-test-case-header\">\n                          <strong>测试用例 {index + 1}:</strong>\n                        </div>\n                        <div className=\"preview-test-case-content\">\n                          <div><strong>输入:</strong> {tc.input || '(无输入)'}</div>\n                          <div><strong>期望输出:</strong> {tc.output}</div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {validationResult && (\n              <div className=\"validation-result\">\n                <h3><WhaleIcon size={24} /> AI验证结果</h3>\n                <div className=\"validation-content\">\n                  <pre>{validationResult}</pre>\n                </div>\n              </div>\n            )}\n          </div>\n\n          <div className=\"action-buttons\">\n            <button onClick={() => setStep(2)} className=\"secondary-btn\">\n              ← 返回修改\n            </button>\n            <button onClick={handleRestart} className=\"secondary-btn\">\n              🔄 重新开始\n            </button>\n            <button \n              onClick={() => handleCreateProblem(false)}\n              disabled={loading}\n              className=\"primary-btn\"\n            >\n              {loading ? '创建中...' : '✅ 创建题目'}\n            </button>\n            {validationResult && !validationResult.includes('验证通过') && (\n              <button \n                onClick={() => handleCreateProblem(true)}\n                disabled={loading}\n                className=\"warning-btn\"\n              >\n                ⚠️ 强制创建\n              </button>\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* 格式模板弹窗 */}\n      {showFormatModal && (\n        <div className=\"format-modal-overlay\" onClick={() => setShowFormatModal(false)}>\n          <div className=\"format-modal\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"format-modal-header\">\n              <h3>📋 格式模板参考</h3>\n              <button \n                className=\"close-btn\"\n                onClick={() => setShowFormatModal(false)}\n              >\n                ×\n              </button>\n            </div>\n            \n            <div className=\"format-modal-content\">\n              <div className=\"format-tabs\">\n                <button \n                  className={`format-tab ${activeFormatTab === 'full' ? 'active' : ''}`}\n                  onClick={() => setActiveFormatTab('full')}\n                >\n                  完整模板\n                </button>\n                <button \n                  className={`format-tab ${activeFormatTab === 'testcase' ? 'active' : ''}`}\n                  onClick={() => setActiveFormatTab('testcase')}\n                >\n                  测试用例格式\n                </button>\n              </div>\n              \n              {activeFormatTab === 'full' && (\n                <div className=\"format-tab-content\">\n                  <h4>📝 完整题目生成模板</h4>\n                  <div className=\"template-examples\">\n                    <div className=\"template-example\">\n                      <h5>数组排序题目</h5>\n                      <pre>{`生成一个数组排序题目，要求：\n- 难度：简单\n- 测试用例：3-5个\n- 输入格式：第一行数字n，第二行n个整数\n- 输出格式：排序后的数组\n- 边界情况：包含空数组、单个元素、重复元素\n- 特殊要求：时间复杂度O(n²)`}</pre>\n                    </div>\n                    \n                    <div className=\"template-example\">\n                      <h5>字符串处理题目</h5>\n                      <pre>{`生成一个字符串反转题目，要求：\n- 难度：简单  \n- 测试用例：4个\n- 输入格式：每行一个字符串\n- 输出格式：反转后的字符串\n- 边界情况：空字符串、单字符、长字符串\n- 特殊要求：支持中文字符`}</pre>\n                    </div>\n                  </div>\n                </div>\n              )}\n              \n              {activeFormatTab === 'testcase' && (\n                <div className=\"format-tab-content\">\n                  <h4>🧪 测试用例格式要求（可直接复制使用）</h4>\n                  <div className=\"testcase-format\">\n                    <div className=\"format-section\">\n                      <h5>基础格式</h5>\n                      <pre>{`测试用例1:\n输入：[]\n输出：[]\n\n测试用例2:\n输入：1\n42\n输出：42\n\n测试用例3:\n输入：3\n3 1 2\n输出：1 2 3`}</pre>\n                      <button \n                        className=\"copy-btn\"\n                        onClick={() => copyToClipboard(`测试用例1:\n输入：[]\n输出：[]\n\n测试用例2:\n输入：1\n42\n输出：42\n\n测试用例3:\n输入：3\n3 1 2\n输出：1 2 3`)}\n                      >\n                        📋 复制格式\n                      </button>\n                    </div>\n                    \n                    <div className=\"format-section\">\n                      <h5>字符串格式</h5>\n                      <pre>{`测试用例1:\n输入：\n输出：\n\n测试用例2:\n输入：a\n输出：a\n\n测试用例3:\n输入：hello\n输出：olleh`}</pre>\n                      <button \n                        className=\"copy-btn\"\n                        onClick={() => copyToClipboard(`测试用例1:\n输入：\n输出：\n\n测试用例2:\n输入：a\n输出：a\n\n测试用例3:\n输入：hello\n输出：olleh`)}\n                      >\n                        📋 复制格式\n                      </button>\n                    </div>\n                    \n                    <div className=\"format-section\">\n                      <h5>数学计算格式</h5>\n                      <pre>{`测试用例1:\n输入：0 0\n输出：0\n\n测试用例2:\n输入：1 2\n输出：3\n\n测试用例3:\n输入：-5 3\n输出：-2`}</pre>\n                      <button \n                        className=\"copy-btn\"\n                        onClick={() => copyToClipboard(`测试用例1:\n输入：0 0\n输出：0\n\n测试用例2:\n输入：1 2\n输出：3\n\n测试用例3:\n输入：-5 3\n输出：-2`)}\n                      >\n                        📋 复制格式\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AIProblemGenerationPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}